<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_text_attr" kind="class" language="C++" prot="public">
    <compoundname>wxTextAttr</compoundname>
    <derivedcompoundref refid="classwx_rich_text_attr" prot="public" virt="non-virtual">wxRichTextAttr</derivedcompoundref>
    <includes local="no">wx/textctrl.h</includes>
      <sectiondef kind="user-defined">
      <header>GetXXX functions</header>
      <memberdef kind="function" id="classwx_text_attr_1a0240f208e908187fef44d39c94480729" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="textctrl_8h_1acf93ad4eb51199602dc2af60ca78b4e5" kindref="member">wxTextAttrAlignment</ref></type>
        <definition>wxTextAttrAlignment wxTextAttr::GetAlignment</definition>
        <argsstring>() const</argsstring>
        <name>GetAlignment</name>
        <qualifiedname>wxTextAttr::GetAlignment</qualifiedname>
        <briefdescription>
<para>Returns the alignment flags. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="textctrl_8h_1acf93ad4eb51199602dc2af60ca78b4e5" kindref="member">wxTextAttrAlignment</ref> for a list of available styles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="332" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a8e4e02b11235e6a907c3dc79c2eaf459" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
        <definition>const wxColour &amp; wxTextAttr::GetBackgroundColour</definition>
        <argsstring>() const</argsstring>
        <name>GetBackgroundColour</name>
        <qualifiedname>wxTextAttr::GetBackgroundColour</qualifiedname>
        <briefdescription>
<para>Returns the background colour. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="337" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a0e8ae61c6d922a0a117280eed86f5cba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; wxTextAttr::GetBulletFont</definition>
        <argsstring>() const</argsstring>
        <name>GetBulletFont</name>
        <qualifiedname>wxTextAttr::GetBulletFont</qualifiedname>
        <briefdescription>
<para>Returns a string containing the name of the font associated with the bullet symbol. </para>
        </briefdescription>
        <detaileddescription>
<para>Only valid for attributes with wxTEXT_ATTR_BULLET_SYMBOL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="343" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a0d7734a6ccfd2ef8941187ad3f14cbcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; wxTextAttr::GetBulletName</definition>
        <argsstring>() const</argsstring>
        <name>GetBulletName</name>
        <qualifiedname>wxTextAttr::GetBulletName</qualifiedname>
        <briefdescription>
<para>Returns the standard bullet name, applicable if the bullet style is wxTEXT_ATTR_BULLET_STYLE_STANDARD. </para>
        </briefdescription>
        <detaileddescription>
<para>Currently the following standard bullet names are supported:<itemizedlist>
<listitem><para><computeroutput>standard/circle</computeroutput> </para>
</listitem><listitem><para><computeroutput>standard/square</computeroutput> </para>
</listitem><listitem><para><computeroutput>standard/diamond</computeroutput> </para>
</listitem><listitem><para><computeroutput>standard/triangle</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>For <ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> users only: if you wish your rich text controls to support further bullet graphics, you can derive a class from <ref refid="classwx_rich_text_renderer" kindref="compound">wxRichTextRenderer</ref> or <ref refid="classwx_rich_text_std_renderer" kindref="compound">wxRichTextStdRenderer</ref>, override <computeroutput>DrawStandardBullet</computeroutput> and <computeroutput>EnumerateStandardBulletNames</computeroutput>, and set an instance of the class using <ref refid="classwx_rich_text_buffer_1a6b1a1015e4fc74cc71d29f6abc54b893" kindref="member">wxRichTextBuffer::SetRenderer</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="361" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a02eb1501badea0b1e87ea4c1532fa907" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTextAttr::GetBulletNumber</definition>
        <argsstring>() const</argsstring>
        <name>GetBulletNumber</name>
        <qualifiedname>wxTextAttr::GetBulletNumber</qualifiedname>
        <briefdescription>
<para>Returns the bullet number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="366" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1af01f5df0c258aae0e041c1008e0f9382" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTextAttr::GetBulletStyle</definition>
        <argsstring>() const</argsstring>
        <name>GetBulletStyle</name>
        <qualifiedname>wxTextAttr::GetBulletStyle</qualifiedname>
        <briefdescription>
<para>Returns the bullet style. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="textctrl_8h_1a99ffd353a510e2b6aea0c58e27d25d16" kindref="member">wxTextAttrBulletStyle</ref> for a list of available styles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="372" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ac1afc5716128bd268657522f0b73bdd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; wxTextAttr::GetBulletText</definition>
        <argsstring>() const</argsstring>
        <name>GetBulletText</name>
        <qualifiedname>wxTextAttr::GetBulletText</qualifiedname>
        <briefdescription>
<para>Returns the bullet text, which could be a symbol, or (for example) cached outline text. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="378" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a315ee7c6b189327ab31c106b792662a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; wxTextAttr::GetCharacterStyleName</definition>
        <argsstring>() const</argsstring>
        <name>GetCharacterStyleName</name>
        <qualifiedname>wxTextAttr::GetCharacterStyleName</qualifiedname>
        <briefdescription>
<para>Returns the name of the character style. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="383" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a5e80b19e60410e0c1d57ab76b103128c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxTextAttr::GetFlags</definition>
        <argsstring>() const</argsstring>
        <name>GetFlags</name>
        <qualifiedname>wxTextAttr::GetFlags</qualifiedname>
        <briefdescription>
<para>Returns flags indicating which attributes are applicable. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_text_attr_1a315ebbc5a41840a0777a7716fc19f5f0" kindref="member">SetFlags()</ref> for a list of available flags. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="389" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a77addc57112a3d7c474648771616d7a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_font" kindref="compound">wxFont</ref></type>
        <definition>wxFont wxTextAttr::GetFont</definition>
        <argsstring>() const</argsstring>
        <name>GetFont</name>
        <qualifiedname>wxTextAttr::GetFont</qualifiedname>
        <briefdescription>
<para>Creates and returns a font specified by the font attributes in the <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> does not store a <ref refid="classwx_font" kindref="compound">wxFont</ref> object, so this is only a temporary font.</para>
<para>For greater efficiency, access the font attributes directly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="398" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a1d7e71c2dbee4ceb320befbef52db965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::GetFontAttributes</definition>
        <argsstring>(const wxFont &amp;font, int flags=wxTEXT_ATTR_FONT)</argsstring>
        <name>GetFontAttributes</name>
        <qualifiedname>wxTextAttr::GetFontAttributes</qualifiedname>
        <param>
          <type>const <ref refid="classwx_font" kindref="compound">wxFont</ref> &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="textctrl_8h_1a5544b853914845e9d6453501951d60c2a2f294aa629dbe616483873a28b7daae6" kindref="member">wxTEXT_ATTR_FONT</ref></defval>
        </param>
        <briefdescription>
<para>Gets the font attributes from the given font, using only the attributes specified by <emphasis>flags</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="404" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a2212acbc2da9d3f06307086ba952e948" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2font_8h_1a09016a7497d1ec6defdf13fd6439acca" kindref="member">wxFontEncoding</ref></type>
        <definition>wxFontEncoding wxTextAttr::GetFontEncoding</definition>
        <argsstring>() const</argsstring>
        <name>GetFontEncoding</name>
        <qualifiedname>wxTextAttr::GetFontEncoding</qualifiedname>
        <briefdescription>
<para>Returns the font encoding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="410" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a3f4a6cc1a0017c3bf5546d38c334a13d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; wxTextAttr::GetFontFaceName</definition>
        <argsstring>() const</argsstring>
        <name>GetFontFaceName</name>
        <qualifiedname>wxTextAttr::GetFontFaceName</qualifiedname>
        <briefdescription>
<para>Returns the font face name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="415" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a9420321f2cfb46cafdcbd96428c6332a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2font_8h_1a0cd7bfd21a4f901245d3c86d8ea0c080" kindref="member">wxFontFamily</ref></type>
        <definition>wxFontFamily wxTextAttr::GetFontFamily</definition>
        <argsstring>() const</argsstring>
        <name>GetFontFamily</name>
        <qualifiedname>wxTextAttr::GetFontFamily</qualifiedname>
        <briefdescription>
<para>Returns the font family. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="420" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ae48b943d09e4df7b0d05258931e8ff8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTextAttr::GetFontSize</definition>
        <argsstring>() const</argsstring>
        <name>GetFontSize</name>
        <qualifiedname>wxTextAttr::GetFontSize</qualifiedname>
        <briefdescription>
<para>Returns the font size in points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="425" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ad0c047b2fb7ce54f82230d30ef480ed3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2font_8h_1ab8f87d0b928ad1f8cba7d1c01f5f7a55" kindref="member">wxFontStyle</ref></type>
        <definition>wxFontStyle wxTextAttr::GetFontStyle</definition>
        <argsstring>() const</argsstring>
        <name>GetFontStyle</name>
        <qualifiedname>wxTextAttr::GetFontStyle</qualifiedname>
        <briefdescription>
<para>Returns the font style. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="430" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1af3b3bc97137977c7c1e3858fe30aa49f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::GetFontUnderlined</definition>
        <argsstring>() const</argsstring>
        <name>GetFontUnderlined</name>
        <qualifiedname>wxTextAttr::GetFontUnderlined</qualifiedname>
        <briefdescription>
<para>Returns true if the font is underlined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="435" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ab66e2028ce3928d070dc694fd2f1cf46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="textctrl_8h_1a282b2239c7cb6cda1c2f9cb513000645" kindref="member">wxTextAttrUnderlineType</ref></type>
        <definition>wxTextAttrUnderlineType wxTextAttr::GetUnderlineType</definition>
        <argsstring>() const</argsstring>
        <name>GetUnderlineType</name>
        <qualifiedname>wxTextAttr::GetUnderlineType</qualifiedname>
        <briefdescription>
<para>Returns the underline type, which is one of the wxTextAttrUnderlineType values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>3.1.3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="442" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1aa7d3a1bd71a4bd65c62d4e07c36bdb3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
        <definition>const wxColour &amp; wxTextAttr::GetUnderlineColour</definition>
        <argsstring>() const</argsstring>
        <name>GetUnderlineColour</name>
        <qualifiedname>wxTextAttr::GetUnderlineColour</qualifiedname>
        <briefdescription>
<para>Returns the underline color used. </para>
        </briefdescription>
        <detaileddescription>
<para>wxNullColour when the text colour is used.</para>
<para><simplesect kind="since"><para>3.1.3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="449" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ad5961c70b47c4f7c2fdf3583b651aecb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2font_8h_1a7cc37d08c7e84370f4fcc175b557a022" kindref="member">wxFontWeight</ref></type>
        <definition>wxFontWeight wxTextAttr::GetFontWeight</definition>
        <argsstring>() const</argsstring>
        <name>GetFontWeight</name>
        <qualifiedname>wxTextAttr::GetFontWeight</qualifiedname>
        <briefdescription>
<para>Returns the font weight. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="454" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a7ee8ef4eeea7c7c9d7f6c4351a78e61b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxTextAttr::GetLeftIndent</definition>
        <argsstring>() const</argsstring>
        <name>GetLeftIndent</name>
        <qualifiedname>wxTextAttr::GetLeftIndent</qualifiedname>
        <briefdescription>
<para>Returns the left indent in tenths of a millimetre. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="459" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a4a9cd45f3aa6c2370f3b06ecc9b8e637" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxTextAttr::GetLeftSubIndent</definition>
        <argsstring>() const</argsstring>
        <name>GetLeftSubIndent</name>
        <qualifiedname>wxTextAttr::GetLeftSubIndent</qualifiedname>
        <briefdescription>
<para>Returns the left sub-indent in tenths of a millimetre. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="464" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ac908a34938fa782acd2dafa6cc326e63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTextAttr::GetLineSpacing</definition>
        <argsstring>() const</argsstring>
        <name>GetLineSpacing</name>
        <qualifiedname>wxTextAttr::GetLineSpacing</qualifiedname>
        <briefdescription>
<para>Returns the line spacing value, one of <ref refid="textctrl_8h_1a52a6f973ecbac9d2a4249d1ca58bd172" kindref="member">wxTextAttrLineSpacing</ref> values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="469" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1afd4c9e6165d76f0ba4f651b34f73ba32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; wxTextAttr::GetListStyleName</definition>
        <argsstring>() const</argsstring>
        <name>GetListStyleName</name>
        <qualifiedname>wxTextAttr::GetListStyleName</qualifiedname>
        <briefdescription>
<para>Returns the name of the list style. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="474" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a71c4d9cdc2281c783f6d14ee6f597127" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTextAttr::GetOutlineLevel</definition>
        <argsstring>() const</argsstring>
        <name>GetOutlineLevel</name>
        <qualifiedname>wxTextAttr::GetOutlineLevel</qualifiedname>
        <briefdescription>
<para>Returns the outline level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="479" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ab919f46fb92b00ce0d26233e65237250" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTextAttr::GetParagraphSpacingAfter</definition>
        <argsstring>() const</argsstring>
        <name>GetParagraphSpacingAfter</name>
        <qualifiedname>wxTextAttr::GetParagraphSpacingAfter</qualifiedname>
        <briefdescription>
<para>Returns the space in tenths of a millimeter after the paragraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="484" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a14e7ac14917bc3353f875e1273ede195" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTextAttr::GetParagraphSpacingBefore</definition>
        <argsstring>() const</argsstring>
        <name>GetParagraphSpacingBefore</name>
        <qualifiedname>wxTextAttr::GetParagraphSpacingBefore</qualifiedname>
        <briefdescription>
<para>Returns the space in tenths of a millimeter before the paragraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="489" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a3734989f897978b78b5680ebd53b424f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; wxTextAttr::GetParagraphStyleName</definition>
        <argsstring>() const</argsstring>
        <name>GetParagraphStyleName</name>
        <qualifiedname>wxTextAttr::GetParagraphStyleName</qualifiedname>
        <briefdescription>
<para>Returns the name of the paragraph style. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="494" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a231026bb23f90d0a52b56fdc32ab4cfe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxTextAttr::GetRightIndent</definition>
        <argsstring>() const</argsstring>
        <name>GetRightIndent</name>
        <qualifiedname>wxTextAttr::GetRightIndent</qualifiedname>
        <briefdescription>
<para>Returns the right indent in tenths of a millimeter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="499" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a58d46d58d8bd430078d86360381d30f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dynarray_8h_1add87f199292e36ee87efd6d7f0d4ee66" kindref="member">wxArrayInt</ref> &amp;</type>
        <definition>const wxArrayInt &amp; wxTextAttr::GetTabs</definition>
        <argsstring>() const</argsstring>
        <name>GetTabs</name>
        <qualifiedname>wxTextAttr::GetTabs</qualifiedname>
        <briefdescription>
<para>Returns an array of tab stops, each expressed in tenths of a millimeter. </para>
        </briefdescription>
        <detaileddescription>
<para>Each stop is measured from the left margin and therefore each value must be larger than the last. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="507" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a3ee332af4536a29a894d202a532f9f89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
        <definition>const wxColour &amp; wxTextAttr::GetTextColour</definition>
        <argsstring>() const</argsstring>
        <name>GetTextColour</name>
        <qualifiedname>wxTextAttr::GetTextColour</qualifiedname>
        <briefdescription>
<para>Returns the text foreground colour. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="512" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ad111329eb3c7db34ec4727834f1c570a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTextAttr::GetTextEffectFlags</definition>
        <argsstring>() const</argsstring>
        <name>GetTextEffectFlags</name>
        <qualifiedname>wxTextAttr::GetTextEffectFlags</qualifiedname>
        <briefdescription>
<para>Returns the text effect bits of interest. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_text_attr_1a315ebbc5a41840a0777a7716fc19f5f0" kindref="member">SetFlags()</ref> for further information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="518" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a9d2638af4d70f9a9bd7ba740032bffa5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTextAttr::GetTextEffects</definition>
        <argsstring>() const</argsstring>
        <name>GetTextEffects</name>
        <qualifiedname>wxTextAttr::GetTextEffects</qualifiedname>
        <briefdescription>
<para>Returns the text effects, a bit list of styles. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_text_attr_1a218521c1b968212fc97e474dd5a563ef" kindref="member">SetTextEffects()</ref> for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="524" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a97d58feb54d09cf3ea03a2754f4e5af5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; wxTextAttr::GetURL</definition>
        <argsstring>() const</argsstring>
        <name>GetURL</name>
        <qualifiedname>wxTextAttr::GetURL</qualifiedname>
        <briefdescription>
<para>Returns the URL for the content. </para>
        </briefdescription>
        <detaileddescription>
<para>Content with <emphasis>wxTEXT_ATTR_URL</emphasis> style causes <ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> to show a hand cursor over it, and <ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> generates a <ref refid="classwx_text_url_event" kindref="compound">wxTextUrlEvent</ref> when the content is clicked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="533" column="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>HasXXX and IsXXX functions</header>
      <memberdef kind="function" id="classwx_text_attr_1a811af45f03c213b05884c3db0e99566d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasAlignment</definition>
        <argsstring>() const</argsstring>
        <name>HasAlignment</name>
        <qualifiedname>wxTextAttr::HasAlignment</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies alignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="548" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a11906776a4ea17da2b7cdd7cfe666c19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasBackgroundColour</definition>
        <argsstring>() const</argsstring>
        <name>HasBackgroundColour</name>
        <qualifiedname>wxTextAttr::HasBackgroundColour</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a background colour. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="553" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1aecd64878adea5b06d70372d30d94952c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasBulletName</definition>
        <argsstring>() const</argsstring>
        <name>HasBulletName</name>
        <qualifiedname>wxTextAttr::HasBulletName</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a standard bullet name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="558" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a9950fbc6c9dca6fdaf20e93579a3914b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasBulletNumber</definition>
        <argsstring>() const</argsstring>
        <name>HasBulletNumber</name>
        <qualifiedname>wxTextAttr::HasBulletNumber</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a bullet number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="563" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a21c5629c4ad6af42b779266be2b7e772" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasBulletStyle</definition>
        <argsstring>() const</argsstring>
        <name>HasBulletStyle</name>
        <qualifiedname>wxTextAttr::HasBulletStyle</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a bullet style. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="568" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a6d76728cbf4ca1f5a63a3ba2051882e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasBulletText</definition>
        <argsstring>() const</argsstring>
        <name>HasBulletText</name>
        <qualifiedname>wxTextAttr::HasBulletText</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies bullet text (usually specifying a symbol). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="574" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a2642afa237a1f435b1b903456d420f61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasCharacterStyleName</definition>
        <argsstring>() const</argsstring>
        <name>HasCharacterStyleName</name>
        <qualifiedname>wxTextAttr::HasCharacterStyleName</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a character style name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="579" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a2a04e327ad7baa9541a5364f30f40ba3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasFlag</definition>
        <argsstring>(long flag) const</argsstring>
        <name>HasFlag</name>
        <qualifiedname>wxTextAttr::HasFlag</qualifiedname>
        <param>
          <type>long</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Returns true if the <emphasis>flag</emphasis> is present in the attribute object&apos;s flag bitlist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="585" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1abd60e04738892bf95b19357267454d05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasFont</definition>
        <argsstring>() const</argsstring>
        <name>HasFont</name>
        <qualifiedname>wxTextAttr::HasFont</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies any font attributes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="590" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a592574138c768142684651257c2fe6fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasFontEncoding</definition>
        <argsstring>() const</argsstring>
        <name>HasFontEncoding</name>
        <qualifiedname>wxTextAttr::HasFontEncoding</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies an encoding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="595" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ad56a9936370c194bdb57aeaba3af0150" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasFontFaceName</definition>
        <argsstring>() const</argsstring>
        <name>HasFontFaceName</name>
        <qualifiedname>wxTextAttr::HasFontFaceName</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a font face name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="600" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a6144fac535a5b2aefbe53cb903519ec6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasFontFamily</definition>
        <argsstring>() const</argsstring>
        <name>HasFontFamily</name>
        <qualifiedname>wxTextAttr::HasFontFamily</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a font family. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="605" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ace03c90a8d5260242ea5ca4ac33497ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasFontItalic</definition>
        <argsstring>() const</argsstring>
        <name>HasFontItalic</name>
        <qualifiedname>wxTextAttr::HasFontItalic</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies italic style. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="610" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a494331f1a74f3fad1b6dc73ffe0d3d23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasFontSize</definition>
        <argsstring>() const</argsstring>
        <name>HasFontSize</name>
        <qualifiedname>wxTextAttr::HasFontSize</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a font point or pixel size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="615" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ab0690abb3b671a2bbbd523e85668de90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasFontPointSize</definition>
        <argsstring>() const</argsstring>
        <name>HasFontPointSize</name>
        <qualifiedname>wxTextAttr::HasFontPointSize</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a font point size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="620" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1aa8e274c8233e617c6dd9ae3714e33758" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasFontPixelSize</definition>
        <argsstring>() const</argsstring>
        <name>HasFontPixelSize</name>
        <qualifiedname>wxTextAttr::HasFontPixelSize</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a font pixel size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="625" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ac5726748a70161324b89beb8f90ccfc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasFontUnderlined</definition>
        <argsstring>() const</argsstring>
        <name>HasFontUnderlined</name>
        <qualifiedname>wxTextAttr::HasFontUnderlined</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies either underlining or no underlining. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="631" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a67ad510446a330c251dd14741d6b4bdf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasFontWeight</definition>
        <argsstring>() const</argsstring>
        <name>HasFontWeight</name>
        <qualifiedname>wxTextAttr::HasFontWeight</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies font weight (bold, light or normal). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="637" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1aae2a52b53e6a7571e4f33edd3b997a52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasLeftIndent</definition>
        <argsstring>() const</argsstring>
        <name>HasLeftIndent</name>
        <qualifiedname>wxTextAttr::HasLeftIndent</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a left indent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="642" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a5ca224c927865add3af7a3e6d224e791" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasLineSpacing</definition>
        <argsstring>() const</argsstring>
        <name>HasLineSpacing</name>
        <qualifiedname>wxTextAttr::HasLineSpacing</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies line spacing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="647" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ac2307f68de4e58a8e66c3323b1615f0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasListStyleName</definition>
        <argsstring>() const</argsstring>
        <name>HasListStyleName</name>
        <qualifiedname>wxTextAttr::HasListStyleName</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a list style name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="652" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a25d81120bdfed25f55f82eea2446b504" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasOutlineLevel</definition>
        <argsstring>() const</argsstring>
        <name>HasOutlineLevel</name>
        <qualifiedname>wxTextAttr::HasOutlineLevel</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies an outline level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="657" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ae9ee4ecc100fe8bc9506e3c8b10e86fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasPageBreak</definition>
        <argsstring>() const</argsstring>
        <name>HasPageBreak</name>
        <qualifiedname>wxTextAttr::HasPageBreak</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a page break before this paragraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="663" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1aa09f0c32acc98ff5db3256538782038c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasParagraphSpacingAfter</definition>
        <argsstring>() const</argsstring>
        <name>HasParagraphSpacingAfter</name>
        <qualifiedname>wxTextAttr::HasParagraphSpacingAfter</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies spacing after a paragraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="668" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ae5e7d21ac5ff421c1432a9d03fe204c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasParagraphSpacingBefore</definition>
        <argsstring>() const</argsstring>
        <name>HasParagraphSpacingBefore</name>
        <qualifiedname>wxTextAttr::HasParagraphSpacingBefore</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies spacing before a paragraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="673" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a998e6f5c580a08773c397ecfa8afad62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasParagraphStyleName</definition>
        <argsstring>() const</argsstring>
        <name>HasParagraphStyleName</name>
        <qualifiedname>wxTextAttr::HasParagraphStyleName</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a paragraph style name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="678" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ac351274da47a699500209d807d6d2e86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasRightIndent</definition>
        <argsstring>() const</argsstring>
        <name>HasRightIndent</name>
        <qualifiedname>wxTextAttr::HasRightIndent</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a right indent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="683" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1aee1562b0ca9aac4f585fce2b3d3e01f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasTabs</definition>
        <argsstring>() const</argsstring>
        <name>HasTabs</name>
        <qualifiedname>wxTextAttr::HasTabs</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies tab stops. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="688" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a271b460ea7a59eb33b16d454089a1888" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasTextColour</definition>
        <argsstring>() const</argsstring>
        <name>HasTextColour</name>
        <qualifiedname>wxTextAttr::HasTextColour</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a text foreground colour. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="693" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a1c53ce88e7f9b693f096ca32488f89dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasTextEffects</definition>
        <argsstring>() const</argsstring>
        <name>HasTextEffects</name>
        <qualifiedname>wxTextAttr::HasTextEffects</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies text effects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="698" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a4aa1da1de9259cd08afd259ba608b666" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::HasURL</definition>
        <argsstring>() const</argsstring>
        <name>HasURL</name>
        <qualifiedname>wxTextAttr::HasURL</qualifiedname>
        <briefdescription>
<para>Returns true if the attribute object specifies a URL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="703" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ac7ad29aaefb48ca5b157fc59e6a82279" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::IsCharacterStyle</definition>
        <argsstring>() const</argsstring>
        <name>IsCharacterStyle</name>
        <qualifiedname>wxTextAttr::IsCharacterStyle</qualifiedname>
        <briefdescription>
<para>Returns true if the object represents a character style, that is, the flags specify a font or a text background or foreground colour. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="709" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a1889daa0cac5498416c927bf3234d5f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::IsDefault</definition>
        <argsstring>() const</argsstring>
        <name>IsDefault</name>
        <qualifiedname>wxTextAttr::IsDefault</qualifiedname>
        <briefdescription>
<para>Returns false if we have any attributes set, true otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="714" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a59dd96564776775d6f9b8d77eb99b71b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::IsParagraphStyle</definition>
        <argsstring>() const</argsstring>
        <name>IsParagraphStyle</name>
        <qualifiedname>wxTextAttr::IsParagraphStyle</qualifiedname>
        <briefdescription>
<para>Returns true if the object represents a paragraph style, that is, the flags specify alignment, indentation, tabs, paragraph spacing, or bullet style. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="721" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>SetXXX functions</header>
      <memberdef kind="function" id="classwx_text_attr_1ad22769d681321bd8b7d51bff12c238c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetAlignment</definition>
        <argsstring>(wxTextAttrAlignment alignment)</argsstring>
        <name>SetAlignment</name>
        <qualifiedname>wxTextAttr::SetAlignment</qualifiedname>
        <param>
          <type><ref refid="textctrl_8h_1acf93ad4eb51199602dc2af60ca78b4e5" kindref="member">wxTextAttrAlignment</ref></type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
<para>Sets the paragraph alignment. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="textctrl_8h_1acf93ad4eb51199602dc2af60ca78b4e5" kindref="member">wxTextAttrAlignment</ref> enumeration values.</para>
<para>Of these, wxTEXT_ALIGNMENT_JUSTIFIED is unimplemented. In future justification may be supported when printing or previewing, only. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="738" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a3d904c5febccbd613c732715df6cd21a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetBackgroundColour</definition>
        <argsstring>(const wxColour &amp;colBack)</argsstring>
        <name>SetBackgroundColour</name>
        <qualifiedname>wxTextAttr::SetBackgroundColour</qualifiedname>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colBack</declname>
        </param>
        <briefdescription>
<para>Sets the background colour. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="743" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a274986a65fd546e4218fa6a44aae7598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetBulletFont</definition>
        <argsstring>(const wxString &amp;font)</argsstring>
        <name>SetBulletFont</name>
        <qualifiedname>wxTextAttr::SetBulletFont</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Sets the name of the font associated with the bullet symbol. </para>
        </briefdescription>
        <detaileddescription>
<para>Only valid for attributes with wxTEXT_ATTR_BULLET_SYMBOL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="749" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a3b8e03167ff4decd0191c5bff1772edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetBulletName</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>SetBulletName</name>
        <qualifiedname>wxTextAttr::SetBulletName</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets the standard bullet name, applicable if the bullet style is wxTEXT_ATTR_BULLET_STYLE_STANDARD. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_text_attr_1a0d7734a6ccfd2ef8941187ad3f14cbcc" kindref="member">GetBulletName()</ref> for a list of supported names, and how to expand the range of supported types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="758" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ad6ac93c015e64cc539d319b69b8cc5da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetBulletNumber</definition>
        <argsstring>(int n)</argsstring>
        <name>SetBulletNumber</name>
        <qualifiedname>wxTextAttr::SetBulletNumber</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Sets the bullet number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="763" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a90b42b4243c71f3c9a7eb5a2bbdbbb3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetBulletStyle</definition>
        <argsstring>(int style)</argsstring>
        <name>SetBulletStyle</name>
        <qualifiedname>wxTextAttr::SetBulletStyle</qualifiedname>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Sets the bullet style. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="textctrl_8h_1a99ffd353a510e2b6aea0c58e27d25d16" kindref="member">wxTextAttrBulletStyle</ref> enumeration values are all supported, except for wxTEXT_ATTR_BULLET_STYLE_BITMAP. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="771" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ab11b0110911a8fe9784da56080ae1da2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetBulletText</definition>
        <argsstring>(const wxString &amp;text)</argsstring>
        <name>SetBulletText</name>
        <qualifiedname>wxTextAttr::SetBulletText</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Sets the bullet text, which could be a symbol, or (for example) cached outline text. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="777" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ac1bff41f48307ba58f2cc5713ca10bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetCharacterStyleName</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>SetCharacterStyleName</name>
        <qualifiedname>wxTextAttr::SetCharacterStyleName</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets the character style name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="782" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a315ebbc5a41840a0777a7716fc19f5f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFlags</definition>
        <argsstring>(long flags)</argsstring>
        <name>SetFlags</name>
        <qualifiedname>wxTextAttr::SetFlags</qualifiedname>
        <param>
          <type>long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Sets the flags determining which styles are being specified. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="textctrl_8h_1a5544b853914845e9d6453501951d60c2" kindref="member">wxTextAttrFlags</ref> values can be passed in a bitlist. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="788" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1aafa9ced6fc22a506b827636be3cefd00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFont</definition>
        <argsstring>(const wxFont &amp;font, int flags=wxTEXT_ATTR_FONT &amp;~wxTEXT_ATTR_FONT_PIXEL_SIZE)</argsstring>
        <name>SetFont</name>
        <qualifiedname>wxTextAttr::SetFont</qualifiedname>
        <param>
          <type>const <ref refid="classwx_font" kindref="compound">wxFont</ref> &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="textctrl_8h_1a5544b853914845e9d6453501951d60c2a2f294aa629dbe616483873a28b7daae6" kindref="member">wxTEXT_ATTR_FONT</ref> &amp;~<ref refid="textctrl_8h_1a5544b853914845e9d6453501951d60c2a444d0fb2023ca492e41425abfb3ee3f8" kindref="member">wxTEXT_ATTR_FONT_PIXEL_SIZE</ref></defval>
        </param>
        <briefdescription>
<para>Sets the attributes for the given font. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> does not store an actual <ref refid="classwx_font" kindref="compound">wxFont</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="794" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1adf26b0a5f9b8afe389821bfddf661a01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFontEncoding</definition>
        <argsstring>(wxFontEncoding encoding)</argsstring>
        <name>SetFontEncoding</name>
        <qualifiedname>wxTextAttr::SetFontEncoding</qualifiedname>
        <param>
          <type><ref refid="interface_2wx_2font_8h_1a09016a7497d1ec6defdf13fd6439acca" kindref="member">wxFontEncoding</ref></type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
<para>Sets the font encoding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="799" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a5465b67ad2924cbc4730a6c2343e6562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFontFaceName</definition>
        <argsstring>(const wxString &amp;faceName)</argsstring>
        <name>SetFontFaceName</name>
        <qualifiedname>wxTextAttr::SetFontFaceName</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>faceName</declname>
        </param>
        <briefdescription>
<para>Sets the font face name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="804" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a41aaad6d92c1bda6e3494878616dc940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFontFamily</definition>
        <argsstring>(wxFontFamily family)</argsstring>
        <name>SetFontFamily</name>
        <qualifiedname>wxTextAttr::SetFontFamily</qualifiedname>
        <param>
          <type><ref refid="interface_2wx_2font_8h_1a0cd7bfd21a4f901245d3c86d8ea0c080" kindref="member">wxFontFamily</ref></type>
          <declname>family</declname>
        </param>
        <briefdescription>
<para>Sets the font family. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="809" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a914d5bcb7725c7893d6fb938d9bf5e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFontSize</definition>
        <argsstring>(int pointSize)</argsstring>
        <name>SetFontSize</name>
        <qualifiedname>wxTextAttr::SetFontSize</qualifiedname>
        <param>
          <type>int</type>
          <declname>pointSize</declname>
        </param>
        <briefdescription>
<para>Sets the font size in points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="814" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ad184b2eef5ff569c7a4d95bd7ff994d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFontPointSize</definition>
        <argsstring>(int pointSize)</argsstring>
        <name>SetFontPointSize</name>
        <qualifiedname>wxTextAttr::SetFontPointSize</qualifiedname>
        <param>
          <type>int</type>
          <declname>pointSize</declname>
        </param>
        <briefdescription>
<para>Sets the font size in points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="819" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1aec4a709e538976888c5db8a43f2e1685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFontPixelSize</definition>
        <argsstring>(int pixelSize)</argsstring>
        <name>SetFontPixelSize</name>
        <qualifiedname>wxTextAttr::SetFontPixelSize</qualifiedname>
        <param>
          <type>int</type>
          <declname>pixelSize</declname>
        </param>
        <briefdescription>
<para>Sets the font size in pixels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="824" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a9be42b1260cdfa3af4cea0a60a76b3d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFontStyle</definition>
        <argsstring>(wxFontStyle fontStyle)</argsstring>
        <name>SetFontStyle</name>
        <qualifiedname>wxTextAttr::SetFontStyle</qualifiedname>
        <param>
          <type><ref refid="interface_2wx_2font_8h_1ab8f87d0b928ad1f8cba7d1c01f5f7a55" kindref="member">wxFontStyle</ref></type>
          <declname>fontStyle</declname>
        </param>
        <briefdescription>
<para>Sets the font style (normal, italic or slanted). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="829" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a9bdb4ac861b4892d57069d976c552fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFontUnderlined</definition>
        <argsstring>(bool underlined)</argsstring>
        <name>SetFontUnderlined</name>
        <qualifiedname>wxTextAttr::SetFontUnderlined</qualifiedname>
        <param>
          <type>bool</type>
          <declname>underlined</declname>
        </param>
        <briefdescription>
<para>Sets the font underlining (solid line, text colour). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="834" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a6f85e3d71097ee395b40c0f0c54784dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFontUnderlined</definition>
        <argsstring>(wxTextAttrUnderlineType type, const wxColour &amp;colour=wxNullColour)</argsstring>
        <name>SetFontUnderlined</name>
        <qualifiedname>wxTextAttr::SetFontUnderlined</qualifiedname>
        <param>
          <type><ref refid="textctrl_8h_1a282b2239c7cb6cda1c2f9cb513000645" kindref="member">wxTextAttrUnderlineType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
          <defval><ref refid="colour_8h_1a882fc9395ce82080f0c2c91ca04731d6" kindref="member">wxNullColour</ref></defval>
        </param>
        <briefdescription>
<para>Sets the font underlining. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of underline.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colour</parametername>
</parameternamelist>
<parameterdescription>
<para>Colour to use for underlining, text colour is used by default.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>On wxMSW, wxTEXT_ATTR_UNDERLINE_DOUBLE is shown as wxTEXT_ATTR_UNDERLINE_SOLID. There is only a limited number of colours supported, the RGB values are listed <ulink url="https://docs.microsoft.com/en-us/windows/win32/api/tom/nf-tom-itextdocument2-geteffectcolor">here</ulink>. wxTEXT_ATTR_UNDERLINE_SPECIAL is shown as a waved line.</para>
</simplesect>
<simplesect kind="note"><para>On wxGTK, underline colour is only supported by wxGTK3. wxTEXT_ATTR_UNDERLINE_SPECIAL is shown as a waved line. GTK might overrule the colour of wxTEXT_ATTR_UNDERLINE_SPECIAL.</para>
</simplesect>
<simplesect kind="note"><para>On wxOSX, wxTEXT_ATTR_UNDERLINE_SPECIAL is shown as a dotted line.</para>
</simplesect>
<simplesect kind="since"><para>3.1.3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="858" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ae26221f629f2ebc146ba1433a67d2b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetFontWeight</definition>
        <argsstring>(wxFontWeight fontWeight)</argsstring>
        <name>SetFontWeight</name>
        <qualifiedname>wxTextAttr::SetFontWeight</qualifiedname>
        <param>
          <type><ref refid="interface_2wx_2font_8h_1a7cc37d08c7e84370f4fcc175b557a022" kindref="member">wxFontWeight</ref></type>
          <declname>fontWeight</declname>
        </param>
        <briefdescription>
<para>Sets the font weight. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="863" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a090d97a13d48d9455d5d9e449f7a4072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetLeftIndent</definition>
        <argsstring>(int indent, int subIndent=0)</argsstring>
        <name>SetLeftIndent</name>
        <qualifiedname>wxTextAttr::SetLeftIndent</qualifiedname>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subIndent</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Sets the left indent and left subindent in tenths of a millimetre. </para>
        </briefdescription>
        <detaileddescription>
<para>The sub-indent is an offset from the left of the paragraph, and is used for all but the first line in a paragraph.</para>
<para>A positive value will cause the first line to appear to the left of the subsequent lines, and a negative value will cause the first line to be indented relative to the subsequent lines.</para>
<para><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> uses indentation to render a bulleted item. The left indent is the distance between the margin and the bullet. The content of the paragraph, including the first line, starts at leftMargin + leftSubIndent. So the distance between the left edge of the bullet and the left of the actual paragraph is leftSubIndent. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="881" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a469fe33ac4acd9f83a00d621c2bd6cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetLineSpacing</definition>
        <argsstring>(int spacing)</argsstring>
        <name>SetLineSpacing</name>
        <qualifiedname>wxTextAttr::SetLineSpacing</qualifiedname>
        <param>
          <type>int</type>
          <declname>spacing</declname>
        </param>
        <briefdescription>
<para>Sets the line spacing. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>spacing</emphasis> is a multiple, where 10 means single-spacing, 15 means 1.5 spacing, and 20 means double spacing. The <ref refid="textctrl_8h_1a52a6f973ecbac9d2a4249d1ca58bd172" kindref="member">wxTextAttrLineSpacing</ref> values are defined for convenience. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="888" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a9b7939948ed563c3ab0c02aa832cc743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetListStyleName</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>SetListStyleName</name>
        <qualifiedname>wxTextAttr::SetListStyleName</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets the list style name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="893" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a24d5f8a632dcd1a09eb3910207816963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetOutlineLevel</definition>
        <argsstring>(int level)</argsstring>
        <name>SetOutlineLevel</name>
        <qualifiedname>wxTextAttr::SetOutlineLevel</qualifiedname>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Specifies the outline level. </para>
        </briefdescription>
        <detaileddescription>
<para>Zero represents normal text. At present, the outline level is not used, but may be used in future for determining list levels and for applications that need to store document structure information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="901" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a47bf936ecf8d900eb6b5798cd45d8474" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetPageBreak</definition>
        <argsstring>(bool pageBreak=true)</argsstring>
        <name>SetPageBreak</name>
        <qualifiedname>wxTextAttr::SetPageBreak</qualifiedname>
        <param>
          <type>bool</type>
          <declname>pageBreak</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Specifies a page break before this paragraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="906" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1aaf87a0f02c53ded0a2b8a34e6ff6ff1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetParagraphSpacingAfter</definition>
        <argsstring>(int spacing)</argsstring>
        <name>SetParagraphSpacingAfter</name>
        <qualifiedname>wxTextAttr::SetParagraphSpacingAfter</qualifiedname>
        <param>
          <type>int</type>
          <declname>spacing</declname>
        </param>
        <briefdescription>
<para>Sets the spacing after a paragraph, in tenths of a millimetre. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="911" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a78f2cfaa80010b4470b42404d5fa7cb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetParagraphSpacingBefore</definition>
        <argsstring>(int spacing)</argsstring>
        <name>SetParagraphSpacingBefore</name>
        <qualifiedname>wxTextAttr::SetParagraphSpacingBefore</qualifiedname>
        <param>
          <type>int</type>
          <declname>spacing</declname>
        </param>
        <briefdescription>
<para>Sets the spacing before a paragraph, in tenths of a millimetre. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="916" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1adfa8e1c11e933576314546316d28e37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetParagraphStyleName</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>SetParagraphStyleName</name>
        <qualifiedname>wxTextAttr::SetParagraphStyleName</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets the name of the paragraph style. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="921" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a7fd4f5eb19852c6908ca173c4e350887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetRightIndent</definition>
        <argsstring>(int indent)</argsstring>
        <name>SetRightIndent</name>
        <qualifiedname>wxTextAttr::SetRightIndent</qualifiedname>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>Sets the right indent in tenths of a millimetre. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="926" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ad21e66c498c5a60e3603d71938b8c772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetTabs</definition>
        <argsstring>(const wxArrayInt &amp;tabs)</argsstring>
        <name>SetTabs</name>
        <qualifiedname>wxTextAttr::SetTabs</qualifiedname>
        <param>
          <type>const <ref refid="dynarray_8h_1add87f199292e36ee87efd6d7f0d4ee66" kindref="member">wxArrayInt</ref> &amp;</type>
          <declname>tabs</declname>
        </param>
        <briefdescription>
<para>Sets the tab stops, expressed in tenths of a millimetre. </para>
        </briefdescription>
        <detaileddescription>
<para>Each stop is measured from the left margin and therefore each value must be larger than the last. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="933" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1ae3d74ce2e7057146911eb0360d451082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetTextColour</definition>
        <argsstring>(const wxColour &amp;colText)</argsstring>
        <name>SetTextColour</name>
        <qualifiedname>wxTextAttr::SetTextColour</qualifiedname>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colText</declname>
        </param>
        <briefdescription>
<para>Sets the text foreground colour. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="938" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1aaa361390da3d932aaa6a1c67875aff02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetTextEffectFlags</definition>
        <argsstring>(int flags)</argsstring>
        <name>SetTextEffectFlags</name>
        <qualifiedname>wxTextAttr::SetTextEffectFlags</qualifiedname>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Sets the text effect bits of interest. </para>
        </briefdescription>
        <detaileddescription>
<para>You should also pass wxTEXT_ATTR_EFFECTS to <ref refid="classwx_text_attr_1a315ebbc5a41840a0777a7716fc19f5f0" kindref="member">SetFlags()</ref>. See <ref refid="classwx_text_attr_1a315ebbc5a41840a0777a7716fc19f5f0" kindref="member">SetFlags()</ref> for further information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="946" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a218521c1b968212fc97e474dd5a563ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetTextEffects</definition>
        <argsstring>(int effects)</argsstring>
        <name>SetTextEffects</name>
        <qualifiedname>wxTextAttr::SetTextEffects</qualifiedname>
        <param>
          <type>int</type>
          <declname>effects</declname>
        </param>
        <briefdescription>
<para>Sets the text effects, a bit list of styles. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="textctrl_8h_1a7c69f4858cb8754f2c36a03e86f8cb31" kindref="member">wxTextAttrEffects</ref> enumeration values can be used.</para>
<para>Of these, only wxTEXT_ATTR_EFFECT_CAPITALS, wxTEXT_ATTR_EFFECT_STRIKETHROUGH, wxTEXT_ATTR_EFFECT_SUPERSCRIPT and wxTEXT_ATTR_EFFECT_SUBSCRIPT are implemented.</para>
<para>wxTEXT_ATTR_EFFECT_CAPITALS capitalises text when displayed (leaving the case of the actual buffer text unchanged), and wxTEXT_ATTR_EFFECT_STRIKETHROUGH draws a line through text.</para>
<para>To set effects, you should also pass wxTEXT_ATTR_EFFECTS to <ref refid="classwx_text_attr_1a315ebbc5a41840a0777a7716fc19f5f0" kindref="member">SetFlags()</ref>, and call <ref refid="classwx_text_attr_1aaa361390da3d932aaa6a1c67875aff02" kindref="member">SetTextEffectFlags()</ref> with the styles (taken from the above set) that you are interested in setting. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="963" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1aad62bd5f3d6f1b9ea78360f06947a8c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::SetURL</definition>
        <argsstring>(const wxString &amp;url)</argsstring>
        <name>SetURL</name>
        <qualifiedname>wxTextAttr::SetURL</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>url</declname>
        </param>
        <briefdescription>
<para>Sets the URL for the content. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets the wxTEXT_ATTR_URL style; content with this style causes <ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> to show a hand cursor over it, and <ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> generates a <ref refid="classwx_text_url_event" kindref="compound">wxTextUrlEvent</ref> when the content is clicked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="970" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a164c2ebff039d5c4ed0dff275e15ad95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::operator=</definition>
        <argsstring>(const wxTextAttr &amp;attr)</argsstring>
        <name>operator=</name>
        <qualifiedname>wxTextAttr::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Assignment from a <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="978" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_text_attr_1a7870ad57a4430b83a9478adeda20c6ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTextAttr::wxTextAttr</definition>
        <argsstring>()</argsstring>
        <name>wxTextAttr</name>
        <qualifiedname>wxTextAttr::wxTextAttr</qualifiedname>
        <briefdescription>
<para>Constructors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="284" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a5b170edc90897e56fcf2b0338b3c2d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTextAttr::wxTextAttr</definition>
        <argsstring>(const wxColour &amp;colText, const wxColour &amp;colBack=wxNullColour, const wxFont &amp;font=wxNullFont, wxTextAttrAlignment alignment=wxTEXT_ALIGNMENT_DEFAULT)</argsstring>
        <name>wxTextAttr</name>
        <qualifiedname>wxTextAttr::wxTextAttr</qualifiedname>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colText</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colBack</declname>
          <defval><ref refid="colour_8h_1a882fc9395ce82080f0c2c91ca04731d6" kindref="member">wxNullColour</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_font" kindref="compound">wxFont</ref> &amp;</type>
          <declname>font</declname>
          <defval><ref refid="interface_2wx_2font_8h_1aa81b6e7b8f74356bfe604485a4be1066" kindref="member">wxNullFont</ref></defval>
        </param>
        <param>
          <type><ref refid="textctrl_8h_1acf93ad4eb51199602dc2af60ca78b4e5" kindref="member">wxTextAttrAlignment</ref></type>
          <declname>alignment</declname>
          <defval><ref refid="textctrl_8h_1acf93ad4eb51199602dc2af60ca78b4e5a492b446cd508f67eba9faf545cc2822b" kindref="member">wxTEXT_ALIGNMENT_DEFAULT</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="285" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a56e913249eb032aa4184f26ebdbca454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTextAttr::wxTextAttr</definition>
        <argsstring>(const wxTextAttr &amp;attr)</argsstring>
        <name>wxTextAttr</name>
        <qualifiedname>wxTextAttr::wxTextAttr</qualifiedname>
        <param>
          <type>const <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="289" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a9601bfb3fb57a4595f122617c525d9fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::Apply</definition>
        <argsstring>(const wxTextAttr &amp;style, const wxTextAttr *compareWith=NULL)</argsstring>
        <name>Apply</name>
        <qualifiedname>wxTextAttr::Apply</qualifiedname>
        <param>
          <type>const <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> *</type>
          <declname>compareWith</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Applies the attributes in <emphasis>style</emphasis> to the original object, but not those attributes from <emphasis>style</emphasis> that are the same as those in <emphasis>compareWith</emphasis> (if passed). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="296" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a591d90d4a675dcbdcd57bbef5557669b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextAttr::Merge</definition>
        <argsstring>(const wxTextAttr &amp;overlay)</argsstring>
        <name>Merge</name>
        <qualifiedname>wxTextAttr::Merge</qualifiedname>
        <param>
          <type>const <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> &amp;</type>
          <declname>overlay</declname>
        </param>
        <briefdescription>
<para>Copies all defined/valid properties from overlay to current object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="302" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_attr_1a7a479bbcae7149fc2aa69001d7f934ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextAttr::EqPartial</definition>
        <argsstring>(const wxTextAttr &amp;attr, bool weakTest=true) const</argsstring>
        <name>EqPartial</name>
        <qualifiedname>wxTextAttr::EqPartial</qualifiedname>
        <param>
          <type>const <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>weakTest</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Partial equality test. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>weakTest</emphasis> is true, attributes of this object do not have to be present if those attributes of <emphasis>attr</emphasis> are present. If <emphasis>weakTest</emphasis> is false, the function will fail if an attribute is present in <emphasis>attr</emphasis> but not in this object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="320" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_text_attr_1ad51cefa334bbfa1bdcff33c05bf0c6ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref></type>
        <definition>static wxTextAttr wxTextAttr::Merge</definition>
        <argsstring>(const wxTextAttr &amp;base, const wxTextAttr &amp;overlay)</argsstring>
        <name>Merge</name>
        <qualifiedname>wxTextAttr::Merge</qualifiedname>
        <param>
          <type>const <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> &amp;</type>
          <declname>overlay</declname>
        </param>
        <briefdescription>
<para>Creates a new <computeroutput><ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref></computeroutput> which is a merge of <emphasis>base</emphasis> and <emphasis>overlay</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Properties defined in <emphasis>overlay</emphasis> take precedence over those in <emphasis>base</emphasis>. Properties undefined/invalid in both are undefined in the result. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="310" column="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> represents the character and paragraph attributes, or style, for a range of text in a <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> or <ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>When setting up a <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> object, pass a bitlist mask to <ref refid="classwx_text_attr_1a315ebbc5a41840a0777a7716fc19f5f0" kindref="member">wxTextAttr::SetFlags()</ref> to indicate which style elements should be changed. As a convenience, when you call a setter such as SetFont, the relevant bit will be set.</para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__richtext" kindref="compound">Rich Text</ref></para>
<para><simplesect kind="see"><para><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref>, <ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>wxRichTextAttr</label>
        <link refid="classwx_rich_text_attr"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxTextAttr</label>
        <link refid="classwx_text_attr"/>
      </node>
    </inheritancegraph>
    <location file="interface/wx/textctrl.h" line="277" column="1" bodyfile="interface/wx/textctrl.h" bodystart="278" bodyend="979"/>
    <listofallmembers>
      <member refid="classwx_text_attr_1a9601bfb3fb57a4595f122617c525d9fc" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>Apply</name></member>
      <member refid="classwx_text_attr_1a7a479bbcae7149fc2aa69001d7f934ad" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>EqPartial</name></member>
      <member refid="classwx_text_attr_1a0240f208e908187fef44d39c94480729" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetAlignment</name></member>
      <member refid="classwx_text_attr_1a8e4e02b11235e6a907c3dc79c2eaf459" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetBackgroundColour</name></member>
      <member refid="classwx_text_attr_1a0e8ae61c6d922a0a117280eed86f5cba" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetBulletFont</name></member>
      <member refid="classwx_text_attr_1a0d7734a6ccfd2ef8941187ad3f14cbcc" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetBulletName</name></member>
      <member refid="classwx_text_attr_1a02eb1501badea0b1e87ea4c1532fa907" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetBulletNumber</name></member>
      <member refid="classwx_text_attr_1af01f5df0c258aae0e041c1008e0f9382" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetBulletStyle</name></member>
      <member refid="classwx_text_attr_1ac1afc5716128bd268657522f0b73bdd7" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetBulletText</name></member>
      <member refid="classwx_text_attr_1a315ee7c6b189327ab31c106b792662a1" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetCharacterStyleName</name></member>
      <member refid="classwx_text_attr_1a5e80b19e60410e0c1d57ab76b103128c" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetFlags</name></member>
      <member refid="classwx_text_attr_1a77addc57112a3d7c474648771616d7a3" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetFont</name></member>
      <member refid="classwx_text_attr_1a1d7e71c2dbee4ceb320befbef52db965" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetFontAttributes</name></member>
      <member refid="classwx_text_attr_1a2212acbc2da9d3f06307086ba952e948" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetFontEncoding</name></member>
      <member refid="classwx_text_attr_1a3f4a6cc1a0017c3bf5546d38c334a13d" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetFontFaceName</name></member>
      <member refid="classwx_text_attr_1a9420321f2cfb46cafdcbd96428c6332a" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetFontFamily</name></member>
      <member refid="classwx_text_attr_1ae48b943d09e4df7b0d05258931e8ff8e" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetFontSize</name></member>
      <member refid="classwx_text_attr_1ad0c047b2fb7ce54f82230d30ef480ed3" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetFontStyle</name></member>
      <member refid="classwx_text_attr_1af3b3bc97137977c7c1e3858fe30aa49f" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetFontUnderlined</name></member>
      <member refid="classwx_text_attr_1ad5961c70b47c4f7c2fdf3583b651aecb" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetFontWeight</name></member>
      <member refid="classwx_text_attr_1a7ee8ef4eeea7c7c9d7f6c4351a78e61b" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetLeftIndent</name></member>
      <member refid="classwx_text_attr_1a4a9cd45f3aa6c2370f3b06ecc9b8e637" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetLeftSubIndent</name></member>
      <member refid="classwx_text_attr_1ac908a34938fa782acd2dafa6cc326e63" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetLineSpacing</name></member>
      <member refid="classwx_text_attr_1afd4c9e6165d76f0ba4f651b34f73ba32" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetListStyleName</name></member>
      <member refid="classwx_text_attr_1a71c4d9cdc2281c783f6d14ee6f597127" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetOutlineLevel</name></member>
      <member refid="classwx_text_attr_1ab919f46fb92b00ce0d26233e65237250" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetParagraphSpacingAfter</name></member>
      <member refid="classwx_text_attr_1a14e7ac14917bc3353f875e1273ede195" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetParagraphSpacingBefore</name></member>
      <member refid="classwx_text_attr_1a3734989f897978b78b5680ebd53b424f" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetParagraphStyleName</name></member>
      <member refid="classwx_text_attr_1a231026bb23f90d0a52b56fdc32ab4cfe" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetRightIndent</name></member>
      <member refid="classwx_text_attr_1a58d46d58d8bd430078d86360381d30f1" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetTabs</name></member>
      <member refid="classwx_text_attr_1a3ee332af4536a29a894d202a532f9f89" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetTextColour</name></member>
      <member refid="classwx_text_attr_1ad111329eb3c7db34ec4727834f1c570a" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetTextEffectFlags</name></member>
      <member refid="classwx_text_attr_1a9d2638af4d70f9a9bd7ba740032bffa5" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetTextEffects</name></member>
      <member refid="classwx_text_attr_1aa7d3a1bd71a4bd65c62d4e07c36bdb3a" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetUnderlineColour</name></member>
      <member refid="classwx_text_attr_1ab66e2028ce3928d070dc694fd2f1cf46" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetUnderlineType</name></member>
      <member refid="classwx_text_attr_1a97d58feb54d09cf3ea03a2754f4e5af5" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>GetURL</name></member>
      <member refid="classwx_text_attr_1a811af45f03c213b05884c3db0e99566d" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasAlignment</name></member>
      <member refid="classwx_text_attr_1a11906776a4ea17da2b7cdd7cfe666c19" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasBackgroundColour</name></member>
      <member refid="classwx_text_attr_1aecd64878adea5b06d70372d30d94952c" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasBulletName</name></member>
      <member refid="classwx_text_attr_1a9950fbc6c9dca6fdaf20e93579a3914b" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasBulletNumber</name></member>
      <member refid="classwx_text_attr_1a21c5629c4ad6af42b779266be2b7e772" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasBulletStyle</name></member>
      <member refid="classwx_text_attr_1a6d76728cbf4ca1f5a63a3ba2051882e2" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasBulletText</name></member>
      <member refid="classwx_text_attr_1a2642afa237a1f435b1b903456d420f61" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasCharacterStyleName</name></member>
      <member refid="classwx_text_attr_1a2a04e327ad7baa9541a5364f30f40ba3" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasFlag</name></member>
      <member refid="classwx_text_attr_1abd60e04738892bf95b19357267454d05" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasFont</name></member>
      <member refid="classwx_text_attr_1a592574138c768142684651257c2fe6fe" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasFontEncoding</name></member>
      <member refid="classwx_text_attr_1ad56a9936370c194bdb57aeaba3af0150" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasFontFaceName</name></member>
      <member refid="classwx_text_attr_1a6144fac535a5b2aefbe53cb903519ec6" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasFontFamily</name></member>
      <member refid="classwx_text_attr_1ace03c90a8d5260242ea5ca4ac33497ac" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasFontItalic</name></member>
      <member refid="classwx_text_attr_1aa8e274c8233e617c6dd9ae3714e33758" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasFontPixelSize</name></member>
      <member refid="classwx_text_attr_1ab0690abb3b671a2bbbd523e85668de90" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasFontPointSize</name></member>
      <member refid="classwx_text_attr_1a494331f1a74f3fad1b6dc73ffe0d3d23" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasFontSize</name></member>
      <member refid="classwx_text_attr_1ac5726748a70161324b89beb8f90ccfc9" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasFontUnderlined</name></member>
      <member refid="classwx_text_attr_1a67ad510446a330c251dd14741d6b4bdf" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasFontWeight</name></member>
      <member refid="classwx_text_attr_1aae2a52b53e6a7571e4f33edd3b997a52" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasLeftIndent</name></member>
      <member refid="classwx_text_attr_1a5ca224c927865add3af7a3e6d224e791" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasLineSpacing</name></member>
      <member refid="classwx_text_attr_1ac2307f68de4e58a8e66c3323b1615f0b" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasListStyleName</name></member>
      <member refid="classwx_text_attr_1a25d81120bdfed25f55f82eea2446b504" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasOutlineLevel</name></member>
      <member refid="classwx_text_attr_1ae9ee4ecc100fe8bc9506e3c8b10e86fe" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasPageBreak</name></member>
      <member refid="classwx_text_attr_1aa09f0c32acc98ff5db3256538782038c" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasParagraphSpacingAfter</name></member>
      <member refid="classwx_text_attr_1ae5e7d21ac5ff421c1432a9d03fe204c7" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasParagraphSpacingBefore</name></member>
      <member refid="classwx_text_attr_1a998e6f5c580a08773c397ecfa8afad62" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasParagraphStyleName</name></member>
      <member refid="classwx_text_attr_1ac351274da47a699500209d807d6d2e86" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasRightIndent</name></member>
      <member refid="classwx_text_attr_1aee1562b0ca9aac4f585fce2b3d3e01f1" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasTabs</name></member>
      <member refid="classwx_text_attr_1a271b460ea7a59eb33b16d454089a1888" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasTextColour</name></member>
      <member refid="classwx_text_attr_1a1c53ce88e7f9b693f096ca32488f89dd" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasTextEffects</name></member>
      <member refid="classwx_text_attr_1a4aa1da1de9259cd08afd259ba608b666" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>HasURL</name></member>
      <member refid="classwx_text_attr_1ac7ad29aaefb48ca5b157fc59e6a82279" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>IsCharacterStyle</name></member>
      <member refid="classwx_text_attr_1a1889daa0cac5498416c927bf3234d5f6" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>IsDefault</name></member>
      <member refid="classwx_text_attr_1a59dd96564776775d6f9b8d77eb99b71b" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>IsParagraphStyle</name></member>
      <member refid="classwx_text_attr_1a591d90d4a675dcbdcd57bbef5557669b" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>Merge</name></member>
      <member refid="classwx_text_attr_1ad51cefa334bbfa1bdcff33c05bf0c6ef" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>Merge</name></member>
      <member refid="classwx_text_attr_1a164c2ebff039d5c4ed0dff275e15ad95" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>operator=</name></member>
      <member refid="classwx_text_attr_1ad22769d681321bd8b7d51bff12c238c3" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetAlignment</name></member>
      <member refid="classwx_text_attr_1a3d904c5febccbd613c732715df6cd21a" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetBackgroundColour</name></member>
      <member refid="classwx_text_attr_1a274986a65fd546e4218fa6a44aae7598" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetBulletFont</name></member>
      <member refid="classwx_text_attr_1a3b8e03167ff4decd0191c5bff1772edd" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetBulletName</name></member>
      <member refid="classwx_text_attr_1ad6ac93c015e64cc539d319b69b8cc5da" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetBulletNumber</name></member>
      <member refid="classwx_text_attr_1a90b42b4243c71f3c9a7eb5a2bbdbbb3f" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetBulletStyle</name></member>
      <member refid="classwx_text_attr_1ab11b0110911a8fe9784da56080ae1da2" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetBulletText</name></member>
      <member refid="classwx_text_attr_1ac1bff41f48307ba58f2cc5713ca10bd3" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetCharacterStyleName</name></member>
      <member refid="classwx_text_attr_1a315ebbc5a41840a0777a7716fc19f5f0" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFlags</name></member>
      <member refid="classwx_text_attr_1aafa9ced6fc22a506b827636be3cefd00" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFont</name></member>
      <member refid="classwx_text_attr_1adf26b0a5f9b8afe389821bfddf661a01" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFontEncoding</name></member>
      <member refid="classwx_text_attr_1a5465b67ad2924cbc4730a6c2343e6562" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFontFaceName</name></member>
      <member refid="classwx_text_attr_1a41aaad6d92c1bda6e3494878616dc940" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFontFamily</name></member>
      <member refid="classwx_text_attr_1aec4a709e538976888c5db8a43f2e1685" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFontPixelSize</name></member>
      <member refid="classwx_text_attr_1ad184b2eef5ff569c7a4d95bd7ff994d6" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFontPointSize</name></member>
      <member refid="classwx_text_attr_1a914d5bcb7725c7893d6fb938d9bf5e85" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFontSize</name></member>
      <member refid="classwx_text_attr_1a9be42b1260cdfa3af4cea0a60a76b3d6" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFontStyle</name></member>
      <member refid="classwx_text_attr_1a9bdb4ac861b4892d57069d976c552fdc" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFontUnderlined</name></member>
      <member refid="classwx_text_attr_1a6f85e3d71097ee395b40c0f0c54784dc" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFontUnderlined</name></member>
      <member refid="classwx_text_attr_1ae26221f629f2ebc146ba1433a67d2b6b" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetFontWeight</name></member>
      <member refid="classwx_text_attr_1a090d97a13d48d9455d5d9e449f7a4072" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetLeftIndent</name></member>
      <member refid="classwx_text_attr_1a469fe33ac4acd9f83a00d621c2bd6cf6" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetLineSpacing</name></member>
      <member refid="classwx_text_attr_1a9b7939948ed563c3ab0c02aa832cc743" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetListStyleName</name></member>
      <member refid="classwx_text_attr_1a24d5f8a632dcd1a09eb3910207816963" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetOutlineLevel</name></member>
      <member refid="classwx_text_attr_1a47bf936ecf8d900eb6b5798cd45d8474" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetPageBreak</name></member>
      <member refid="classwx_text_attr_1aaf87a0f02c53ded0a2b8a34e6ff6ff1c" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetParagraphSpacingAfter</name></member>
      <member refid="classwx_text_attr_1a78f2cfaa80010b4470b42404d5fa7cb8" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetParagraphSpacingBefore</name></member>
      <member refid="classwx_text_attr_1adfa8e1c11e933576314546316d28e37d" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetParagraphStyleName</name></member>
      <member refid="classwx_text_attr_1a7fd4f5eb19852c6908ca173c4e350887" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetRightIndent</name></member>
      <member refid="classwx_text_attr_1ad21e66c498c5a60e3603d71938b8c772" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetTabs</name></member>
      <member refid="classwx_text_attr_1ae3d74ce2e7057146911eb0360d451082" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetTextColour</name></member>
      <member refid="classwx_text_attr_1aaa361390da3d932aaa6a1c67875aff02" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetTextEffectFlags</name></member>
      <member refid="classwx_text_attr_1a218521c1b968212fc97e474dd5a563ef" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetTextEffects</name></member>
      <member refid="classwx_text_attr_1aad62bd5f3d6f1b9ea78360f06947a8c5" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>SetURL</name></member>
      <member refid="classwx_text_attr_1a7870ad57a4430b83a9478adeda20c6ec" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>wxTextAttr</name></member>
      <member refid="classwx_text_attr_1a5b170edc90897e56fcf2b0338b3c2d04" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>wxTextAttr</name></member>
      <member refid="classwx_text_attr_1a56e913249eb032aa4184f26ebdbca454" prot="public" virt="non-virtual"><scope>wxTextAttr</scope><name>wxTextAttr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
