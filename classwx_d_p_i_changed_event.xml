<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_d_p_i_changed_event" kind="class" language="C++" prot="public">
    <compoundname>wxDPIChangedEvent</compoundname>
    <basecompoundref refid="classwx_event" prot="public" virt="non-virtual">wxEvent</basecompoundref>
    <includes local="no">wx/event.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_d_p_i_changed_event_1a00ba96b4187ae78a97d70d83a0aef226" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxDPIChangedEvent::GetOldDPI</definition>
        <argsstring>() const</argsstring>
        <name>GetOldDPI</name>
        <qualifiedname>wxDPIChangedEvent::GetOldDPI</qualifiedname>
        <briefdescription>
<para>Returns the old DPI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="3467" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_p_i_changed_event_1a1dbcf256f7fd54cd70773e0795b678f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxDPIChangedEvent::GetNewDPI</definition>
        <argsstring>() const</argsstring>
        <name>GetNewDPI</name>
        <qualifiedname>wxDPIChangedEvent::GetNewDPI</qualifiedname>
        <briefdescription>
<para>Returns the new DPI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="3472" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_p_i_changed_event_1a72530f5b469c17c92c0087f292b4d2b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxDPIChangedEvent::Scale</definition>
        <argsstring>(wxSize sz) const</argsstring>
        <name>Scale</name>
        <qualifiedname>wxDPIChangedEvent::Scale</qualifiedname>
        <param>
          <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Rescale a value in pixels to match the new DPI. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a convenience function to use in wxEVT_DPI_CHANGED event handlers, as they often need to update some sizes to the new DPI. It simply calls <ref refid="math_8h_1ae6b58065b4f7328c09cbaf83a7d39acd" kindref="member">wxMulDivInt32()</ref> with new and old DPI values, but is more readable and less error-prone.</para>
<para>For example, the returned value will be twice bigger than the original one when switching from normal (96) DPI to high (2x, 192) DPI.</para>
<para><simplesect kind="since"><para>3.1.6 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="3487" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_p_i_changed_event_1a82d9505a284dbdfae14f1eea95d07788" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxDPIChangedEvent::ScaleX</definition>
        <argsstring>(int x) const</argsstring>
        <name>ScaleX</name>
        <qualifiedname>wxDPIChangedEvent::ScaleX</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Rescale horizontal component to match the new DPI. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the same as <ref refid="classwx_d_p_i_changed_event_1a72530f5b469c17c92c0087f292b4d2b4" kindref="member">Scale()</ref>, but for the horizontal component only.</para>
<para><simplesect kind="since"><para>3.1.6 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="3496" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_d_p_i_changed_event_1aa859a98fb77a09510cf4ec42fe2557f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxDPIChangedEvent::ScaleY</definition>
        <argsstring>(int y) const</argsstring>
        <name>ScaleY</name>
        <qualifiedname>wxDPIChangedEvent::ScaleY</qualifiedname>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Rescale vertical component to match the new DPI. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the same as <ref refid="classwx_d_p_i_changed_event_1a72530f5b469c17c92c0087f292b4d2b4" kindref="member">Scale()</ref>, but for the vertical component only.</para>
<para><simplesect kind="since"><para>3.1.6 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="3505" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Event sent when the display scale factor or pixel density (measured in dots-per-inch, or DPI) of the monitor a window is on changes. </para>
    </briefdescription>
    <detaileddescription>
<para>The event is sent to each <ref refid="classwx_top_level_window" kindref="compound">wxTopLevelWindow</ref> affected by the change, and all its children recursively (post-order traversal). For example, this event is sent to the window when it is moved, by the user, from a display using some DPI value to another display using a different DPI value. It also sent to all program windows on the given display if its DPI changes due to a change in the system settings.</para>
<para>If you define an event handler for this event, you should almost always call <computeroutput>event.Skip()</computeroutput> in it in order to allow the base class handler to execute, as many controls rely on processing this event in order to update their appearance when the DPI changes. However the default handler for the top level window itself only sets the new window size, by scaling the current size by the DPI ratio <ndash/> e.g. doubling it if the DPI has changed from normal to &quot;high&quot;, i.e. 200%, one <ndash/> and also ensuring that the window is still bigger than its best size, as returned by <ref refid="classwx_window_1ae507a81d682023383e465d8e913595b6" kindref="member">wxWindow::GetBestSize()</ref>. Note that in some cases this may cause the window size to grow unexpectedly and you may prefer to call <ref refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" kindref="member">wxWindow::SetSize()</ref> in your handler of this event for the top level window and <emphasis>not</emphasis> call <computeroutput>event.Skip()</computeroutput> to prevent the default handler from resizing the window.</para>
<para>Currently this event is generated by wxMSW port if only and only if the MSW application runs under Windows 10 Creators Update (v1703) or later and is marked as being &quot;per-monitor DPI aware&quot;, i.e. contains a <computeroutput>dpiAwareness</computeroutput> tag with the value &quot;PerMonitorV2&quot; in its manifest (see Microsoft <ulink url="https://docs.microsoft.com/en-us/windows/desktop/sbscs/application-manifests">&quot;Application Manifests&quot; documentation</ulink> for more details).</para>
<para><heading level="2">Events using this class</heading>
</para>
<para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_d_p_i_changed_event" kindref="compound">wxDPIChangedEvent</ref>&amp;<nonbreakablespace/>event)</para>
<para>Event macros: <itemizedlist>
<listitem><para>EVT_DPI_CHANGED(func): Process a <computeroutput>wxEVT_DPI_CHANGED</computeroutput> event. </para>
</listitem>
</itemizedlist>
<simplesect kind="since"><para>3.1.3</para>
</simplesect>
<heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__events" kindref="compound">Events</ref></para>
<para><simplesect kind="see"><para><ref refid="overview_events" kindref="compound">Events and Event Handling</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>wxDPIChangedEvent</label>
        <link refid="classwx_d_p_i_changed_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>wxDPIChangedEvent</label>
        <link refid="classwx_d_p_i_changed_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/event.h" line="3461" column="1" bodyfile="interface/wx/event.h" bodystart="3462" bodyend="3506"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_event_1a1458e0e59752bd8753ec20cb719e088b" prot="public" virt="pure-virtual"><scope>wxDPIChangedEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxDPIChangedEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxDPIChangedEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxDPIChangedEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_event_1ac4958ff6ec32b7f4b23066932d611131" prot="public" virt="virtual"><scope>wxDPIChangedEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1a1ed12f8a9b61af6a76c6746cb8acfeae" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1a01c89719ef6241a6e612a313a259c1c2" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_event_1aa46a14bdca4d0ebcd4f42e5805db1df9" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>GetEventUserData</name></member>
      <member refid="classwx_event_1ac5fa5c10d4845d903e58026a42b403c7" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>GetId</name></member>
      <member refid="classwx_d_p_i_changed_event_1a1dbcf256f7fd54cd70773e0795b678f5" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>GetNewDPI</name></member>
      <member refid="classwx_d_p_i_changed_event_1a00ba96b4187ae78a97d70d83a0aef226" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>GetOldDPI</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_event_1aa770dbcd0f1714ba097836af6534b4c5" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_event_1a48662230971127737d2500cef7be549d" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_event_1a31f6a4377d6d36964b8eae4e56ec43e0" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_d_p_i_changed_event_1a72530f5b469c17c92c0087f292b4d2b4" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>Scale</name></member>
      <member refid="classwx_d_p_i_changed_event_1a82d9505a284dbdfae14f1eea95d07788" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>ScaleX</name></member>
      <member refid="classwx_d_p_i_changed_event_1aa859a98fb77a09510cf4ec42fe2557f5" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>ScaleY</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>SetId</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>UnShare</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxDPIChangedEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxDPIChangedEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
