<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classwx_sizer_item" kind="class" language="C++" prot="public">
    <compoundname>wxSizerItem</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <derivedcompoundref refid="classwx_g_b_sizer_item" prot="public" virt="non-virtual">wxGBSizerItem</derivedcompoundref>
    <includes local="no">wx/sizer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_sizer_item_1ab07c608bd56283df5847c1e9bd4ebfa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSizerItem::wxSizerItem</definition>
        <argsstring>(int width, int height, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>wxSizerItem</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Construct a sizer item for tracking a spacer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1073" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a4c858f9b3ae6e1d9e96602959d5d7ff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSizerItem::wxSizerItem</definition>
        <argsstring>(wxWindow *window, const wxSizerFlags &amp;flags)</argsstring>
        <name>wxSizerItem</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Construct a sizer item for tracking a window. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1080" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1aaefc97a23300b948bab559e4e89638b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSizerItem::wxSizerItem</definition>
        <argsstring>(wxWindow *window, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>wxSizerItem</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1081" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1af321a97190675a193212131d5f11523f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSizerItem::wxSizerItem</definition>
        <argsstring>(wxSizer *sizer, const wxSizerFlags &amp;flags)</argsstring>
        <name>wxSizerItem</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Construct a sizer item for tracking a subsizer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1090" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a8678d88740bc5a9244338fd345502284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSizerItem::wxSizerItem</definition>
        <argsstring>(wxSizer *sizer, int proportion=0, int flag=0, int border=0, wxObject *userData=NULL)</argsstring>
        <name>wxSizerItem</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>border</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1091" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1aaecba04b2291dddf5576fd3bc8f52596" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxSizerItem::~wxSizerItem</definition>
        <argsstring>()</argsstring>
        <name>~wxSizerItem</name>
        <briefdescription>
<para>Deletes the user data and subsizer, if any. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1099" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a4dbc6292038eb7de978be98f8a4f802e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::AssignWindow</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>AssignWindow</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Set the window to be tracked by this item. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is a low-level method which is dangerous if used incorrectly, avoid using it if possible, i.e. if higher level methods such as <ref refid="classwx_sizer_1ade62512b74abfa0c6ff45825ea0c9d9d" kindref="member">wxSizer::Replace()</ref> can be used instead.</para>
</simplesect>
If the sizer item previously contained a window, it is dissociated from the sizer containing this sizer item (if any), but this object doesn&apos;t have the pointer to the containing sizer and so it&apos;s the caller&apos;s responsibility to call <ref refid="classwx_window_1a0ccf78fe06722b500adfb7f36b8ce443" kindref="member">wxWindow::SetContainingSizer()</ref> on <emphasis>window</emphasis>. Failure to do this can result in memory corruption when the window is destroyed later, so it is crucial to not forget to do it.</para>
<para>Also note that the previously contained window is <emphasis>not</emphasis> deleted, so it&apos;s also the callers responsibility to do it, if necessary. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1adfbb98b4173df43be52d9c25d4f842b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::AssignSizer</definition>
        <argsstring>(wxSizer *sizer)</argsstring>
        <name>AssignSizer</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <briefdescription>
<para>Set the sizer tracked by this item. </para>
        </briefdescription>
        <detaileddescription>
<para>Old sizer, if any, is deleted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1125" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1ad6e478ed2a645b8f18642d7d3194278a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::AssignSpacer</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>AssignSpacer</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the size of the spacer tracked by this item. </para>
        </briefdescription>
        <detaileddescription>
<para>Old spacer, if any, is deleted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1133" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1ac558c9e0615222292ba798963bb65286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::AssignSpacer</definition>
        <argsstring>(int w, int h)</argsstring>
        <name>AssignSpacer</name>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1134" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1adcb05eea89effd217d5f3431e6064c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxSizerItem::CalcMin</definition>
        <argsstring>()</argsstring>
        <name>CalcMin</name>
        <briefdescription>
<para>Calculates the minimum desired size for the item, including any space needed by borders. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1141" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1aa1bc12b256f01f8faee2b046415e4e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxSizerItem::DeleteWindows</definition>
        <argsstring>()</argsstring>
        <name>DeleteWindows</name>
        <briefdescription>
<para>Destroy the window or the windows in a subsizer, depending on the type of item. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1147" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a0b6971d562afba609a310828fdc53f03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::DetachSizer</definition>
        <argsstring>()</argsstring>
        <name>DetachSizer</name>
        <briefdescription>
<para>Enable deleting the SizerItem without destroying the contained sizer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1152" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a3b66f4ee5135370877029422eafc474e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxSizerItem::GetBorder</definition>
        <argsstring>() const</argsstring>
        <name>GetBorder</name>
        <briefdescription>
<para>Return the border attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1157" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a5a99cd5eb590c452319bdc50c34f8c27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxSizerItem::GetFlag</definition>
        <argsstring>() const</argsstring>
        <name>GetFlag</name>
        <briefdescription>
<para>Return the flags attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_sizer_1wxsizer_flags" kindref="member">wxSizer flags list</ref> for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1164" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a5a6a93ac781afdc146ae1b333624365d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxSizerItem::GetId</definition>
        <argsstring>() const</argsstring>
        <name>GetId</name>
        <briefdescription>
<para>Return the numeric id of <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref>, or <computeroutput>wxID_NONE</computeroutput> if the id has not been set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1170" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a310c33e0cd867e6ef4f825c0595ad797" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxSizerItem::GetMinSize</definition>
        <argsstring>() const</argsstring>
        <name>GetMinSize</name>
        <briefdescription>
<para>Get the minimum size needed for the item. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1175" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1ae81527c4eae65c1bdc491309df643d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetMinSize</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>SetMinSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Sets the minimum size to be allocated for this item. </para>
        </briefdescription>
        <detaileddescription>
<para>If this item is a window, the <emphasis>size</emphasis> is also passed to <ref refid="classwx_window_1a3fc066f4d8083319f004ac43811d545d" kindref="member">wxWindow::SetMinSize()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1183" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1ab989d3ce6d529c50dea6675454c1ab97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetMinSize</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>SetMinSize</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1188" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1afa84054e9e67aec9069e49a11abe39b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxSizerItem::GetPosition</definition>
        <argsstring>() const</argsstring>
        <name>GetPosition</name>
        <briefdescription>
<para>What is the current position of the item, as set in the last Layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1193" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1ad7db692d3831769a6a5c36dc0ee8e9f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxSizerItem::GetProportion</definition>
        <argsstring>() const</argsstring>
        <name>GetProportion</name>
        <briefdescription>
<para>Get the proportion item attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1198" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a2e060228f2e3da23671126e1f43b5c17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float wxSizerItem::GetRatio</definition>
        <argsstring>() const</argsstring>
        <name>GetRatio</name>
        <briefdescription>
<para>Get the ratio item attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1203" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a3c3a8e59193eb64cb6cf1e120c9ed544" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
        <definition>virtual wxRect wxSizerItem::GetRect</definition>
        <argsstring>()</argsstring>
        <name>GetRect</name>
        <briefdescription>
<para>Get the rectangle of the item on the parent window, excluding borders. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1208" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a6323e61953ac01ea0953cb4e8e2cc89d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxSizerItem::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Get the current size of the item, as set in the last Layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1213" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a36f107f2c1298471facd1e040f3ac7e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
        <definition>wxSizer * wxSizerItem::GetSizer</definition>
        <argsstring>() const</argsstring>
        <name>GetSizer</name>
        <briefdescription>
<para>If this item is tracking a sizer, return it. </para>
        </briefdescription>
        <detaileddescription>
<para>NULL otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1218" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a7026dd9e204575696f13950e313e52d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxSizerItem::GetSpacer</definition>
        <argsstring>() const</argsstring>
        <name>GetSpacer</name>
        <briefdescription>
<para>If this item is tracking a spacer, return its size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1223" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a54c2cebf0aba71694eefe2a39759f1e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
        <definition>wxObject * wxSizerItem::GetUserData</definition>
        <argsstring>() const</argsstring>
        <name>GetUserData</name>
        <briefdescription>
<para>Get the userData item attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1228" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a641c636f23a6671c5675d2aa65b8ed8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow * wxSizerItem::GetWindow</definition>
        <argsstring>() const</argsstring>
        <name>GetWindow</name>
        <briefdescription>
<para>If this item is tracking a window then return it. </para>
        </briefdescription>
        <detaileddescription>
<para>NULL otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1233" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1ac420ca8195328c899d3c4ffc482d177e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizerItem::IsShown</definition>
        <argsstring>() const</argsstring>
        <name>IsShown</name>
        <briefdescription>
<para>Returns true if this item is a window or a spacer and it is shown or if this item is a sizer and not all of its elements are hidden. </para>
        </briefdescription>
        <detaileddescription>
<para>In other words, for sizer items, all of the child elements must be hidden for the sizer itself to be considered hidden.</para>
<para>As an exception, if the <computeroutput>wxRESERVE_SPACE_EVEN_IF_HIDDEN</computeroutput> flag was used for this sizer item, then <ref refid="classwx_sizer_item_1ac420ca8195328c899d3c4ffc482d177e" kindref="member">IsShown()</ref> always returns true for it (see <ref refid="classwx_sizer_flags_1a8027f21a783c3974d1bd3d61d9d42512" kindref="member">wxSizerFlags::ReserveSpaceEvenIfHidden()</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1246" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a053daa7df2c1b9f879e7da9f354f5fa0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizerItem::IsSizer</definition>
        <argsstring>() const</argsstring>
        <name>IsSizer</name>
        <briefdescription>
<para>Is this item a sizer? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1251" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a6491635b3097a7c83e71b70f72245cdc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizerItem::IsSpacer</definition>
        <argsstring>() const</argsstring>
        <name>IsSpacer</name>
        <briefdescription>
<para>Is this item a spacer? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1256" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1affa6c39cb63b2a6c7552919530d09729" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSizerItem::IsWindow</definition>
        <argsstring>() const</argsstring>
        <name>IsWindow</name>
        <briefdescription>
<para>Is this item a window? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1261" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1af007095393ea60c2c2431e65ffe639db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetBorder</definition>
        <argsstring>(int border)</argsstring>
        <name>SetBorder</name>
        <param>
          <type>int</type>
          <declname>border</declname>
        </param>
        <briefdescription>
<para>Set the border item attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1266" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a4fc9c5889185d1c06665f47112663a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxSizerItem::SetDimension</definition>
        <argsstring>(const wxPoint &amp;pos, const wxSize &amp;size)</argsstring>
        <name>SetDimension</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the position and size of the space allocated to the sizer, and adjust the position and size of the item to be within that space taking alignment and borders into account. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1273" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1aa6e15409d4dcdf01ba88d5f44a1aadfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetFlag</definition>
        <argsstring>(int flag)</argsstring>
        <name>SetFlag</name>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Set the flag item attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1278" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a14b3da2cb04b9096f5c8888ca90ab858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetId</definition>
        <argsstring>(int id)</argsstring>
        <name>SetId</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Sets the numeric id of the <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> to <emphasis>id</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1283" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a39ddf1d7da5982d6fc21e4b57db9bd61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetInitSize</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>SetInitSize</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Sets the minimum size to be allocated for this item. </para>
        </briefdescription>
        <detaileddescription>
<para>This is identical to <ref refid="classwx_sizer_item_1ae81527c4eae65c1bdc491309df643d07" kindref="member">SetMinSize()</ref>, prefer to use the other function, as its name is more clear. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1291" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a7de372e08f991227d4105d24051d04a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetProportion</definition>
        <argsstring>(int proportion)</argsstring>
        <name>SetProportion</name>
        <param>
          <type>int</type>
          <declname>proportion</declname>
        </param>
        <briefdescription>
<para>Set the proportion item attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1296" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1ae761aa97de98f606d86419dbced0672d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetRatio</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>SetRatio</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Set the ratio item attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1302" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1acbb969c8df6f141dc479cc8123af3430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetRatio</definition>
        <argsstring>(wxSize size)</argsstring>
        <name>SetRatio</name>
        <param>
          <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1303" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a0cc088cb6755dc0df5633aeae8d05fa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetRatio</definition>
        <argsstring>(float ratio)</argsstring>
        <name>SetRatio</name>
        <param>
          <type>float</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1304" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a4c4af76c0686e00b50ff9a238288386c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetSizer</definition>
        <argsstring>(wxSizer *sizer)</argsstring>
        <name>SetSizer</name>
        <param>
          <type><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *</type>
          <declname>sizer</declname>
        </param>
        <briefdescription>
<para>Set the sizer tracked by this item. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000063"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function does not free the old sizer which may result in memory leaks, use <ref refid="classwx_sizer_item_1adfbb98b4173df43be52d9c25d4f842b4" kindref="member">AssignSizer()</ref> which does free it instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1313" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a83baa6835015e9ccd71ba290883db4f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetSpacer</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>SetSpacer</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the size of the spacer tracked by this item. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000064"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function does not free the old spacer which may result in memory leaks, use <ref refid="classwx_sizer_item_1ad6e478ed2a645b8f18642d7d3194278a" kindref="member">AssignSpacer()</ref> which does free it instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1321" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a5dde3d0ca94189848ad4ece129d6937a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetUserData</definition>
        <argsstring>(wxObject *userData)</argsstring>
        <name>SetUserData</name>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1323" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a9a310e236fa40720fe17a7d08ae4a1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::SetWindow</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>SetWindow</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Set the window to be tracked by this item. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000065"><xreftitle>Deprecated</xreftitle><xrefdescription></xrefdescription></xrefsect><xrefsect id="todo_1_todo000032"><xreftitle>Todo</xreftitle><xrefdescription><para>provide deprecation description </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1329" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_item_1a62baa1d528dabc001472de5b70786ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSizerItem::Show</definition>
        <argsstring>(bool show)</argsstring>
        <name>Show</name>
        <param>
          <type>bool</type>
          <declname>show</declname>
        </param>
        <briefdescription>
<para>Set the show item attribute, which sizers use to determine if the item is to be made part of the layout or not. </para>
        </briefdescription>
        <detaileddescription>
<para>If the item is tracking a window then it is shown or hidden as needed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1336" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classwx_sizer_item" kindref="compound">wxSizerItem</ref> class is used to track the position, size and other attributes of each item managed by a <ref refid="classwx_sizer" kindref="compound">wxSizer</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>It is not usually necessary to use this class because the sizer elements can also be identified by their positions or window or sizer pointers but sometimes it may be more convenient to use it directly.</para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt; </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>wxGBSizerItem</label>
        <link refid="classwx_g_b_sizer_item"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="1">
        <label>wxSizerItem</label>
        <link refid="classwx_sizer_item"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
      <node id="1">
        <label>wxSizerItem</label>
        <link refid="classwx_sizer_item"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/sizer.h" line="1067" column="1" bodyfile="interface/wx/sizer.h" bodystart="1068" bodyend="1337"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxSizerItem</scope><name>AllocExclusive</name></member>
      <member refid="classwx_sizer_item_1adfbb98b4173df43be52d9c25d4f842b4" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>AssignSizer</name></member>
      <member refid="classwx_sizer_item_1ad6e478ed2a645b8f18642d7d3194278a" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>AssignSpacer</name></member>
      <member refid="classwx_sizer_item_1ac558c9e0615222292ba798963bb65286" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>AssignSpacer</name></member>
      <member refid="classwx_sizer_item_1a4dbc6292038eb7de978be98f8a4f802e" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>AssignWindow</name></member>
      <member refid="classwx_sizer_item_1adcb05eea89effd217d5f3431e6064c36" prot="public" virt="virtual"><scope>wxSizerItem</scope><name>CalcMin</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxSizerItem</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxSizerItem</scope><name>CreateRefData</name></member>
      <member refid="classwx_sizer_item_1aa1bc12b256f01f8faee2b046415e4e82" prot="public" virt="virtual"><scope>wxSizerItem</scope><name>DeleteWindows</name></member>
      <member refid="classwx_sizer_item_1a0b6971d562afba609a310828fdc53f03" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>DetachSizer</name></member>
      <member refid="classwx_sizer_item_1a3b66f4ee5135370877029422eafc474e" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetBorder</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxSizerItem</scope><name>GetClassInfo</name></member>
      <member refid="classwx_sizer_item_1a5a99cd5eb590c452319bdc50c34f8c27" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetFlag</name></member>
      <member refid="classwx_sizer_item_1a5a6a93ac781afdc146ae1b333624365d" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetId</name></member>
      <member refid="classwx_sizer_item_1a310c33e0cd867e6ef4f825c0595ad797" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetMinSize</name></member>
      <member refid="classwx_sizer_item_1afa84054e9e67aec9069e49a11abe39b2" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetPosition</name></member>
      <member refid="classwx_sizer_item_1ad7db692d3831769a6a5c36dc0ee8e9f4" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetProportion</name></member>
      <member refid="classwx_sizer_item_1a2e060228f2e3da23671126e1f43b5c17" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetRatio</name></member>
      <member refid="classwx_sizer_item_1a3c3a8e59193eb64cb6cf1e120c9ed544" prot="public" virt="virtual"><scope>wxSizerItem</scope><name>GetRect</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetRefData</name></member>
      <member refid="classwx_sizer_item_1a6323e61953ac01ea0953cb4e8e2cc89d" prot="public" virt="virtual"><scope>wxSizerItem</scope><name>GetSize</name></member>
      <member refid="classwx_sizer_item_1a36f107f2c1298471facd1e040f3ac7e8" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetSizer</name></member>
      <member refid="classwx_sizer_item_1a7026dd9e204575696f13950e313e52d2" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetSpacer</name></member>
      <member refid="classwx_sizer_item_1a54c2cebf0aba71694eefe2a39759f1e2" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetUserData</name></member>
      <member refid="classwx_sizer_item_1a641c636f23a6671c5675d2aa65b8ed8c" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>GetWindow</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>IsSameAs</name></member>
      <member refid="classwx_sizer_item_1ac420ca8195328c899d3c4ffc482d177e" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>IsShown</name></member>
      <member refid="classwx_sizer_item_1a053daa7df2c1b9f879e7da9f354f5fa0" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>IsSizer</name></member>
      <member refid="classwx_sizer_item_1a6491635b3097a7c83e71b70f72245cdc" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>IsSpacer</name></member>
      <member refid="classwx_sizer_item_1affa6c39cb63b2a6c7552919530d09729" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>IsWindow</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxSizerItem</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>Ref</name></member>
      <member refid="classwx_sizer_item_1af007095393ea60c2c2431e65ffe639db" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetBorder</name></member>
      <member refid="classwx_sizer_item_1a4fc9c5889185d1c06665f47112663a75" prot="public" virt="virtual"><scope>wxSizerItem</scope><name>SetDimension</name></member>
      <member refid="classwx_sizer_item_1aa6e15409d4dcdf01ba88d5f44a1aadfb" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetFlag</name></member>
      <member refid="classwx_sizer_item_1a14b3da2cb04b9096f5c8888ca90ab858" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetId</name></member>
      <member refid="classwx_sizer_item_1a39ddf1d7da5982d6fc21e4b57db9bd61" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetInitSize</name></member>
      <member refid="classwx_sizer_item_1ae81527c4eae65c1bdc491309df643d07" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetMinSize</name></member>
      <member refid="classwx_sizer_item_1ab989d3ce6d529c50dea6675454c1ab97" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetMinSize</name></member>
      <member refid="classwx_sizer_item_1a7de372e08f991227d4105d24051d04a7" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetProportion</name></member>
      <member refid="classwx_sizer_item_1ae761aa97de98f606d86419dbced0672d" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetRatio</name></member>
      <member refid="classwx_sizer_item_1acbb969c8df6f141dc479cc8123af3430" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetRatio</name></member>
      <member refid="classwx_sizer_item_1a0cc088cb6755dc0df5633aeae8d05fa5" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetRatio</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetRefData</name></member>
      <member refid="classwx_sizer_item_1a4c4af76c0686e00b50ff9a238288386c" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetSizer</name></member>
      <member refid="classwx_sizer_item_1a83baa6835015e9ccd71ba290883db4f5" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetSpacer</name></member>
      <member refid="classwx_sizer_item_1a5dde3d0ca94189848ad4ece129d6937a" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetUserData</name></member>
      <member refid="classwx_sizer_item_1a9a310e236fa40720fe17a7d08ae4a1a6" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>SetWindow</name></member>
      <member refid="classwx_sizer_item_1a62baa1d528dabc001472de5b70786ac3" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>Show</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>wxObject</name></member>
      <member refid="classwx_sizer_item_1ab07c608bd56283df5847c1e9bd4ebfa9" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>wxSizerItem</name></member>
      <member refid="classwx_sizer_item_1a4c858f9b3ae6e1d9e96602959d5d7ff2" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>wxSizerItem</name></member>
      <member refid="classwx_sizer_item_1aaefc97a23300b948bab559e4e89638b1" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>wxSizerItem</name></member>
      <member refid="classwx_sizer_item_1af321a97190675a193212131d5f11523f" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>wxSizerItem</name></member>
      <member refid="classwx_sizer_item_1a8678d88740bc5a9244338fd345502284" prot="public" virt="non-virtual"><scope>wxSizerItem</scope><name>wxSizerItem</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxSizerItem</scope><name>~wxObject</name></member>
      <member refid="classwx_sizer_item_1aaecba04b2291dddf5576fd3bc8f52596" prot="public" virt="virtual"><scope>wxSizerItem</scope><name>~wxSizerItem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
