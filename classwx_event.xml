<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_event" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>wxEvent</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <derivedcompoundref refid="classwx_activate_event" prot="public" virt="non-virtual">wxActivateEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_aui_manager_event" prot="public" virt="non-virtual">wxAuiManagerEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_calculate_layout_event" prot="public" virt="non-virtual">wxCalculateLayoutEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_close_event" prot="public" virt="non-virtual">wxCloseEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_command_event" prot="public" virt="non-virtual">wxCommandEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_d_p_i_changed_event" prot="public" virt="non-virtual">wxDPIChangedEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_dial_up_event" prot="public" virt="non-virtual">wxDialUpEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_display_changed_event" prot="public" virt="non-virtual">wxDisplayChangedEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_drop_files_event" prot="public" virt="non-virtual">wxDropFilesEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_erase_event" prot="public" virt="non-virtual">wxEraseEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_file_system_watcher_event" prot="public" virt="non-virtual">wxFileSystemWatcherEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_focus_event" prot="public" virt="non-virtual">wxFocusEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_full_screen_event" prot="public" virt="non-virtual">wxFullScreenEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_gesture_event" prot="public" virt="non-virtual">wxGestureEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_iconize_event" prot="public" virt="non-virtual">wxIconizeEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_idle_event" prot="public" virt="non-virtual">wxIdleEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_init_dialog_event" prot="public" virt="non-virtual">wxInitDialogEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_joystick_event" prot="public" virt="non-virtual">wxJoystickEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_key_event" prot="public" virt="non-virtual">wxKeyEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_maximize_event" prot="public" virt="non-virtual">wxMaximizeEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_menu_event" prot="public" virt="non-virtual">wxMenuEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_mouse_capture_changed_event" prot="public" virt="non-virtual">wxMouseCaptureChangedEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_mouse_capture_lost_event" prot="public" virt="non-virtual">wxMouseCaptureLostEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_mouse_event" prot="public" virt="non-virtual">wxMouseEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_move_event" prot="public" virt="non-virtual">wxMoveEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_navigation_key_event" prot="public" virt="non-virtual">wxNavigationKeyEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_paint_event" prot="public" virt="non-virtual">wxPaintEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_palette_changed_event" prot="public" virt="non-virtual">wxPaletteChangedEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_power_event" prot="public" virt="non-virtual">wxPowerEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_process_event" prot="public" virt="non-virtual">wxProcessEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_query_layout_info_event" prot="public" virt="non-virtual">wxQueryLayoutInfoEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_query_new_palette_event" prot="public" virt="non-virtual">wxQueryNewPaletteEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_scroll_win_event" prot="public" virt="non-virtual">wxScrollWinEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_set_cursor_event" prot="public" virt="non-virtual">wxSetCursorEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_show_event" prot="public" virt="non-virtual">wxShowEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_size_event" prot="public" virt="non-virtual">wxSizeEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_socket_event" prot="public" virt="non-virtual">wxSocketEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_sys_colour_changed_event" prot="public" virt="non-virtual">wxSysColourChangedEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_task_bar_icon_event" prot="public" virt="non-virtual">wxTaskBarIconEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_thread_event" prot="public" virt="non-virtual">wxThreadEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_timer_event" prot="public" virt="non-virtual">wxTimerEvent</derivedcompoundref>
    <derivedcompoundref refid="classwx_web_request_event" prot="public" virt="non-virtual">wxWebRequestEvent</derivedcompoundref>
    <includes local="no">wx/event.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int wxEvent::m_propagationLevel</definition>
        <argsstring></argsstring>
        <name>m_propagationLevel</name>
        <qualifiedname>wxEvent::m_propagationLevel</qualifiedname>
        <briefdescription>
<para>Indicates how many levels the event can propagate. </para>
        </briefdescription>
        <detaileddescription>
<para>This member is protected and should typically only be set in the constructors of the derived classes. It may be temporarily changed by <ref refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" kindref="member">StopPropagation()</ref> and <ref refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" kindref="member">ResumePropagation()</ref> and tested with <ref refid="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" kindref="member">ShouldPropagate()</ref>.</para>
<para>The initial value is set to either <computeroutput>wxEVENT_PROPAGATE_NONE</computeroutput> (by default) meaning that the event shouldn&apos;t be propagated at all or to <computeroutput>wxEVENT_PROPAGATE_MAX</computeroutput> (for command events) meaning that it should be propagated as much as necessary.</para>
<para>Any positive number means that the event should be propagated but no more than the given number of times. E.g. the propagation level may be set to 1 to propagate the event to its parent only, but not to its grandparent. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="272" column="9" bodyfile="interface/wx/event.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxEvent::wxEvent</definition>
        <argsstring>(int id=0, wxEventType eventType=wxEVT_NULL)</argsstring>
        <name>wxEvent</name>
        <qualifiedname>wxEvent::wxEvent</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="event_8h_1a6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
          <declname>eventType</declname>
          <defval><ref refid="event_8h_1a310bc3f7977ae79ac1198c7a287dbffe" kindref="member">wxEVT_NULL</ref></defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Notice that events are usually created by wxWidgets itself and creating e.g. a <ref refid="classwx_paint_event" kindref="compound">wxPaintEvent</ref> in your code and sending it to e.g. a <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> will not usually affect it at all as native controls have no specific knowledge about wxWidgets events. However you may construct objects of specific types and pass them to <ref refid="classwx_evt_handler_1a65968dd27f3aac7718f2dd6b2ddd5a08" kindref="member">wxEvtHandler::ProcessEvent()</ref> if you want to create your own custom control and want to process its events in the same manner as the standard ones.</para>
<para>Also please notice that the order of parameters in this constructor is different from almost all the derived classes which specify the event type as the first argument.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the object (window, timer, ...) which generated this event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventType</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique type of event, e.g. <computeroutput>wxEVT_PAINT</computeroutput>, <computeroutput>wxEVT_SIZE</computeroutput> or <computeroutput>wxEVT_BUTTON</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="117" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1a1458e0e59752bd8753ec20cb719e088b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_event" kindref="compound">wxEvent</ref> *</type>
        <definition>virtual wxEvent * wxEvent::Clone</definition>
        <argsstring>() const =0</argsstring>
        <name>Clone</name>
        <qualifiedname>wxEvent::Clone</qualifiedname>
        <reimplementedby refid="classwx_window_modal_dialog_event_1ac4d11894eeb1ee365ed8d4ee646e78dd">Clone</reimplementedby>
        <reimplementedby refid="classwx_thread_event_1a12938fd82b6f61d33c6e7186abe492e0">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_event_1a9b7fda50fb412cef3b4d49bb48b19db5">Clone</reimplementedby>
        <reimplementedby refid="classwx_text_url_event_1a04115d2c38c2c054e18b047a9e728df2">Clone</reimplementedby>
        <briefdescription>
<para>Returns a copy of the event. </para>
        </briefdescription>
        <detaileddescription>
<para>Any event that is posted to the wxWidgets event system for later action (via <ref refid="classwx_evt_handler_1a0737c6d2cbcd5ded4b1ecdd53ed0def3" kindref="member">wxEvtHandler::AddPendingEvent</ref>, <ref refid="classwx_evt_handler_1acffd03bf407a856166ea71ef0318b59a" kindref="member">wxEvtHandler::QueueEvent</ref> or <ref refid="event_8h_1a0cf60a1ad3a5f1e659f7ae591570f58d" kindref="member">wxPostEvent()</ref>) must implement this method.</para>
<para>All wxWidgets events fully implement this method, but any derived events implemented by the user should also implement this method just in case they (or some event derived from them) are ever posted.</para>
<para>All wxWidgets events implement a copy constructor, so the easiest way of implementing the Clone function is to implement a copy constructor for a new event (call it MyEvent) and then define the Clone function like this:</para>
<para><programlisting><codeline><highlight class="normal"><ref refid="classwx_event" kindref="compound">wxEvent</ref><sp/>*<ref refid="classwx_event_1a1458e0e59752bd8753ec20cb719e088b" kindref="member">Clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MyEvent(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="138" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1a1ed12f8a9b61af6a76c6746cb8acfeae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
        <definition>wxObject * wxEvent::GetEventObject</definition>
        <argsstring>() const</argsstring>
        <name>GetEventObject</name>
        <qualifiedname>wxEvent::GetEventObject</qualifiedname>
        <briefdescription>
<para>Returns the object (usually a window) associated with the event, if any. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="143" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1a01c89719ef6241a6e612a313a259c1c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="event_8h_1a6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
        <definition>wxEventType wxEvent::GetEventType</definition>
        <argsstring>() const</argsstring>
        <name>GetEventType</name>
        <qualifiedname>wxEvent::GetEventType</qualifiedname>
        <briefdescription>
<para>Returns the identifier of the given event type, such as <computeroutput>wxEVT_BUTTON</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="148" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1ac4958ff6ec32b7f4b23066932d611131" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="event_8h_1a685cc8dc6176be3ab0d40e3f72719e7d" kindref="member">wxEventCategory</ref></type>
        <definition>virtual wxEventCategory wxEvent::GetEventCategory</definition>
        <argsstring>() const</argsstring>
        <name>GetEventCategory</name>
        <qualifiedname>wxEvent::GetEventCategory</qualifiedname>
        <reimplementedby refid="classwx_thread_event_1a5e991c0a3ac6bef54f2d1c3c77cff9a2">GetEventCategory</reimplementedby>
        <briefdescription>
<para>Returns a generic category for this event. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_event" kindref="compound">wxEvent</ref> implementation returns <computeroutput>wxEVT_CATEGORY_UI</computeroutput> by default.</para>
<para>This function is used to selectively process events in <ref refid="classwx_event_loop_base_1afb5ed08160c7e6b1364170af6115af55" kindref="member">wxEventLoopBase::YieldFor</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="156" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1ac5fa5c10d4845d903e58026a42b403c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxEvent::GetId</definition>
        <argsstring>() const</argsstring>
        <name>GetId</name>
        <qualifiedname>wxEvent::GetId</qualifiedname>
        <briefdescription>
<para>Returns the identifier associated with this event, such as a button command id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="161" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1aa46a14bdca4d0ebcd4f42e5805db1df9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
        <definition>wxObject * wxEvent::GetEventUserData</definition>
        <argsstring>() const</argsstring>
        <name>GetEventUserData</name>
        <qualifiedname>wxEvent::GetEventUserData</qualifiedname>
        <briefdescription>
<para>Return the user data associated with a dynamically connected event handler. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" kindref="member">wxEvtHandler::Connect()</ref> and <ref refid="classwx_evt_handler_1a0f30c8fa5583b4a5f661897d63de3b62" kindref="member">wxEvtHandler::Bind()</ref> allow associating optional <computeroutput>userData</computeroutput> pointer with the handler and this method returns the value of this pointer.</para>
<para>The returned pointer is owned by wxWidgets and must not be deleted.</para>
<para><simplesect kind="since"><para>2.9.5 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="174" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1aa770dbcd0f1714ba097836af6534b4c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxEvent::GetSkipped</definition>
        <argsstring>() const</argsstring>
        <name>GetSkipped</name>
        <qualifiedname>wxEvent::GetSkipped</qualifiedname>
        <briefdescription>
<para>Returns true if the event handler should be skipped, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="179" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1a48662230971127737d2500cef7be549d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxEvent::GetTimestamp</definition>
        <argsstring>() const</argsstring>
        <name>GetTimestamp</name>
        <qualifiedname>wxEvent::GetTimestamp</qualifiedname>
        <briefdescription>
<para>Gets the timestamp for the event. </para>
        </briefdescription>
        <detaileddescription>
<para>The timestamp is the time in milliseconds since some fixed moment (not necessarily the standard Unix Epoch, so only differences between the timestamps and not their absolute values usually make sense).</para>
<para><simplesect kind="warning"><para>wxWidgets returns a non-NULL timestamp only for mouse and key events (see <ref refid="classwx_mouse_event" kindref="compound">wxMouseEvent</ref> and <ref refid="classwx_key_event" kindref="compound">wxKeyEvent</ref>). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="190" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1a31f6a4377d6d36964b8eae4e56ec43e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxEvent::IsCommandEvent</definition>
        <argsstring>() const</argsstring>
        <name>IsCommandEvent</name>
        <qualifiedname>wxEvent::IsCommandEvent</qualifiedname>
        <briefdescription>
<para>Returns true if the event is or is derived from <ref refid="classwx_command_event" kindref="compound">wxCommandEvent</ref> else it returns false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>exists only for optimization purposes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="197" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxEvent::ResumePropagation</definition>
        <argsstring>(int propagationLevel)</argsstring>
        <name>ResumePropagation</name>
        <qualifiedname>wxEvent::ResumePropagation</qualifiedname>
        <param>
          <type>int</type>
          <declname>propagationLevel</declname>
        </param>
        <briefdescription>
<para>Sets the propagation level to the given value (for example returned from an earlier call to <ref refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" kindref="member">wxEvent::StopPropagation</ref>). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="203" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxEvent::SetEventObject</definition>
        <argsstring>(wxObject *object)</argsstring>
        <name>SetEventObject</name>
        <qualifiedname>wxEvent::SetEventObject</qualifiedname>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Sets the originating object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="208" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxEvent::SetEventType</definition>
        <argsstring>(wxEventType type)</argsstring>
        <name>SetEventType</name>
        <qualifiedname>wxEvent::SetEventType</qualifiedname>
        <param>
          <type><ref refid="event_8h_1a6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Sets the event type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="213" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxEvent::SetId</definition>
        <argsstring>(int id)</argsstring>
        <name>SetId</name>
        <qualifiedname>wxEvent::SetId</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Sets the identifier associated with this event, such as a button command id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="218" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxEvent::SetTimestamp</definition>
        <argsstring>(long timeStamp=0)</argsstring>
        <name>SetTimestamp</name>
        <qualifiedname>wxEvent::SetTimestamp</qualifiedname>
        <param>
          <type>long</type>
          <declname>timeStamp</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Sets the timestamp for the event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="223" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxEvent::ShouldPropagate</definition>
        <argsstring>() const</argsstring>
        <name>ShouldPropagate</name>
        <qualifiedname>wxEvent::ShouldPropagate</qualifiedname>
        <briefdescription>
<para>Test if this event should be propagated or not, i.e. if the propagation level is currently greater than 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="229" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxEvent::Skip</definition>
        <argsstring>(bool skip=true)</argsstring>
        <name>Skip</name>
        <qualifiedname>wxEvent::Skip</qualifiedname>
        <param>
          <type>bool</type>
          <declname>skip</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>This method can be used inside an event handler to control whether further event handlers bound to this event will be called after the current one returns. </para>
        </briefdescription>
        <detaileddescription>
<para>Without <ref refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" kindref="member">Skip()</ref> (or equivalently if Skip(false) is used), the event will not be processed any more. If Skip(true) is called, the event processing system continues searching for a further handler function for this event, even though it has been processed already in the current handler.</para>
<para>In general, it is recommended to skip all non-command events to allow the default handling to take place. The command events are, however, normally not skipped as usually a single command such as a button click or menu item selection must only be processed by one handler. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="245" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxEvent::StopPropagation</definition>
        <argsstring>()</argsstring>
        <name>StopPropagation</name>
        <qualifiedname>wxEvent::StopPropagation</qualifiedname>
        <briefdescription>
<para>Stop the event from propagating to its parent window. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the old propagation level value which may be later passed to <ref refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" kindref="member">ResumePropagation()</ref> to allow propagating the event again. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="253" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An event is a structure holding information about an event passed to a callback or member function. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classwx_event" kindref="compound">wxEvent</ref> used to be a multipurpose event object, and is an abstract base class for other event classes (see below).</para>
<para>For more information about events, see the <ref refid="overview_events" kindref="compound">Events and Event Handling</ref> overview.</para>
<para><bold>wxPerl Note:</bold> In wxPerl custom event classes should be derived from <computeroutput>Wx::PlEvent</computeroutput> and <computeroutput>Wx::PlCommandEvent</computeroutput>. </para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__events" kindref="compound">Events</ref></para>
<para><simplesect kind="see"><para><ref refid="classwx_command_event" kindref="compound">wxCommandEvent</ref>, <ref refid="classwx_mouse_event" kindref="compound">wxMouseEvent</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>wxActivateEvent</label>
        <link refid="classwx_activate_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>wxActiveXEvent</label>
        <link refid="classwx_active_x_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>wxAuiManagerEvent</label>
        <link refid="classwx_aui_manager_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>wxAuiNotebookEvent</label>
        <link refid="classwx_aui_notebook_event"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>wxAuiToolBarEvent</label>
        <link refid="classwx_aui_tool_bar_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>wxBookCtrlEvent</label>
        <link refid="classwx_book_ctrl_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>wxCalculateLayoutEvent</label>
        <link refid="classwx_calculate_layout_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>wxCalendarEvent</label>
        <link refid="classwx_calendar_event"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>wxChildFocusEvent</label>
        <link refid="classwx_child_focus_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>wxClipboardTextEvent</label>
        <link refid="classwx_clipboard_text_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>wxCloseEvent</label>
        <link refid="classwx_close_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>wxCollapsiblePaneEvent</label>
        <link refid="classwx_collapsible_pane_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>wxColourDialogEvent</label>
        <link refid="classwx_colour_dialog_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>wxColourPickerEvent</label>
        <link refid="classwx_colour_picker_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>wxContextMenuEvent</label>
        <link refid="classwx_context_menu_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>wxDPIChangedEvent</label>
        <link refid="classwx_d_p_i_changed_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>wxDataViewEvent</label>
        <link refid="classwx_data_view_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>wxDateEvent</label>
        <link refid="classwx_date_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>wxDialUpEvent</label>
        <link refid="classwx_dial_up_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>wxDisplayChangedEvent</label>
        <link refid="classwx_display_changed_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="62">
        <label>wxDropFilesEvent</label>
        <link refid="classwx_drop_files_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>wxEraseEvent</label>
        <link refid="classwx_erase_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>wxFileCtrlEvent</label>
        <link refid="classwx_file_ctrl_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>wxFileDirPickerEvent</label>
        <link refid="classwx_file_dir_picker_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>wxFileSystemWatcherEvent</label>
        <link refid="classwx_file_system_watcher_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>wxFindDialogEvent</label>
        <link refid="classwx_find_dialog_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>wxFocusEvent</label>
        <link refid="classwx_focus_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>wxFontPickerEvent</label>
        <link refid="classwx_font_picker_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="66">
        <label>wxFullScreenEvent</label>
        <link refid="classwx_full_screen_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>wxGestureEvent</label>
        <link refid="classwx_gesture_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>wxGridEditorCreatedEvent</label>
        <link refid="classwx_grid_editor_created_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>wxGridEvent</label>
        <link refid="classwx_grid_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>wxGridRangeSelectEvent</label>
        <link refid="classwx_grid_range_select_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>wxGridSizeEvent</label>
        <link refid="classwx_grid_size_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>wxHeaderCtrlEvent</label>
        <link refid="classwx_header_ctrl_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>wxHelpEvent</label>
        <link refid="classwx_help_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>wxHtmlCellEvent</label>
        <link refid="classwx_html_cell_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>wxHtmlLinkEvent</label>
        <link refid="classwx_html_link_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>wxHyperlinkEvent</label>
        <link refid="classwx_hyperlink_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="74">
        <label>wxIconizeEvent</label>
        <link refid="classwx_iconize_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>wxIdleEvent</label>
        <link refid="classwx_idle_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="76">
        <label>wxInitDialogEvent</label>
        <link refid="classwx_init_dialog_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>wxJoystickEvent</label>
        <link refid="classwx_joystick_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78">
        <label>wxKeyEvent</label>
        <link refid="classwx_key_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>wxListEvent</label>
        <link refid="classwx_list_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>wxLongPressEvent</label>
        <link refid="classwx_long_press_event"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="79">
        <label>wxMaximizeEvent</label>
        <link refid="classwx_maximize_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>wxMediaEvent</label>
        <link refid="classwx_media_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="80">
        <label>wxMenuEvent</label>
        <link refid="classwx_menu_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="81">
        <label>wxMouseCaptureChangedEvent</label>
        <link refid="classwx_mouse_capture_changed_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="82">
        <label>wxMouseCaptureLostEvent</label>
        <link refid="classwx_mouse_capture_lost_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="83">
        <label>wxMouseEvent</label>
        <link refid="classwx_mouse_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="84">
        <label>wxMoveEvent</label>
        <link refid="classwx_move_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="85">
        <label>wxNavigationKeyEvent</label>
        <link refid="classwx_navigation_key_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>wxNotifyEvent</label>
        <link refid="classwx_notify_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="86">
        <label>wxPaintEvent</label>
        <link refid="classwx_paint_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="87">
        <label>wxPaletteChangedEvent</label>
        <link refid="classwx_palette_changed_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>wxPanGestureEvent</label>
        <link refid="classwx_pan_gesture_event"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="88">
        <label>wxPowerEvent</label>
        <link refid="classwx_power_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>wxPressAndTapEvent</label>
        <link refid="classwx_press_and_tap_event"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="89">
        <label>wxProcessEvent</label>
        <link refid="classwx_process_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>wxPropertyGridEvent</label>
        <link refid="classwx_property_grid_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="90">
        <label>wxQueryLayoutInfoEvent</label>
        <link refid="classwx_query_layout_info_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="91">
        <label>wxQueryNewPaletteEvent</label>
        <link refid="classwx_query_new_palette_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>wxRibbonBarEvent</label>
        <link refid="classwx_ribbon_bar_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>wxRibbonButtonBarEvent</label>
        <link refid="classwx_ribbon_button_bar_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>wxRibbonGalleryEvent</label>
        <link refid="classwx_ribbon_gallery_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>wxRibbonPanelEvent</label>
        <link refid="classwx_ribbon_panel_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>wxRibbonToolBarEvent</label>
        <link refid="classwx_ribbon_tool_bar_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>wxRichTextEvent</label>
        <link refid="classwx_rich_text_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>wxRotateGestureEvent</label>
        <link refid="classwx_rotate_gesture_event"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>wxSashEvent</label>
        <link refid="classwx_sash_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>wxScrollEvent</label>
        <link refid="classwx_scroll_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>wxScrollWinEvent</label>
        <link refid="classwx_scroll_win_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="93">
        <label>wxSetCursorEvent</label>
        <link refid="classwx_set_cursor_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="94">
        <label>wxShowEvent</label>
        <link refid="classwx_show_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="95">
        <label>wxSizeEvent</label>
        <link refid="classwx_size_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="96">
        <label>wxSocketEvent</label>
        <link refid="classwx_socket_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>wxSpinDoubleEvent</label>
        <link refid="classwx_spin_double_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>wxSpinEvent</label>
        <link refid="classwx_spin_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>wxSplitterEvent</label>
        <link refid="classwx_splitter_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>wxStyledTextEvent</label>
        <link refid="classwx_styled_text_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="97">
        <label>wxSysColourChangedEvent</label>
        <link refid="classwx_sys_colour_changed_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="98">
        <label>wxTaskBarIconEvent</label>
        <link refid="classwx_task_bar_icon_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>wxTextUrlEvent</label>
        <link refid="classwx_text_url_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="99">
        <label>wxThreadEvent</label>
        <link refid="classwx_thread_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="100">
        <label>wxTimerEvent</label>
        <link refid="classwx_timer_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>wxTreeEvent</label>
        <link refid="classwx_tree_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>wxTreeListEvent</label>
        <link refid="classwx_tree_list_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="72">
        <label>wxTwoFingerTapEvent</label>
        <link refid="classwx_two_finger_tap_event"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>wxUpdateUIEvent</label>
        <link refid="classwx_update_u_i_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="101">
        <label>wxWebRequestEvent</label>
        <link refid="classwx_web_request_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>wxWebViewEvent</label>
        <link refid="classwx_web_view_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>wxWindowCreateEvent</label>
        <link refid="classwx_window_create_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>wxWindowDestroyEvent</label>
        <link refid="classwx_window_destroy_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>wxWindowModalDialogEvent</label>
        <link refid="classwx_window_modal_dialog_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>wxWizardEvent</label>
        <link refid="classwx_wizard_event"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>wxZoomGestureEvent</label>
        <link refid="classwx_zoom_gesture_event"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/event.h" line="92" column="1" bodyfile="interface/wx/event.h" bodystart="93" bodyend="273"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_event_1a1458e0e59752bd8753ec20cb719e088b" prot="public" virt="pure-virtual"><scope>wxEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_event_1ac4958ff6ec32b7f4b23066932d611131" prot="public" virt="virtual"><scope>wxEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1a1ed12f8a9b61af6a76c6746cb8acfeae" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1a01c89719ef6241a6e612a313a259c1c2" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_event_1aa46a14bdca4d0ebcd4f42e5805db1df9" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>GetEventUserData</name></member>
      <member refid="classwx_event_1ac5fa5c10d4845d903e58026a42b403c7" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>GetId</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_event_1aa770dbcd0f1714ba097836af6534b4c5" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_event_1a48662230971127737d2500cef7be549d" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_event_1a31f6a4377d6d36964b8eae4e56ec43e0" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>SetId</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>UnShare</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
