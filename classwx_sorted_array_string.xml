<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_sorted_array_string" kind="class" language="C++" prot="public">
    <compoundname>wxSortedArrayString</compoundname>
    <basecompoundref prot="public" virt="non-virtual">wxArray</basecompoundref>
    <includes local="no">wx/arrstr.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_sorted_array_string_1a8a7d2088d6d5f12db6122b58cda05257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSortedArrayString::wxSortedArrayString</definition>
        <argsstring>()</argsstring>
        <name>wxSortedArrayString</name>
        <qualifiedname>wxSortedArrayString::wxSortedArrayString</qualifiedname>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>The elements of the array are kept sorted in alphabetical order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="296" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sorted_array_string_1a95f10ad9c91ac925071527f9cc0e079c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSortedArrayString::wxSortedArrayString</definition>
        <argsstring>(CompareFunction compareFunction)</argsstring>
        <name>wxSortedArrayString</name>
        <qualifiedname>wxSortedArrayString::wxSortedArrayString</qualifiedname>
        <param>
          <type>CompareFunction</type>
          <declname>compareFunction</declname>
        </param>
        <briefdescription>
<para>Constructs a sorted array using the specified <emphasis>compareFunction</emphasis> for item comparison. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="arrstr_8h_1aafe883a59d855a0a1db611b69ad92646" kindref="member">wxStringSortAscending()</ref>, <ref refid="arrstr_8h_1aa20adedaec639a05419b9a33e765bc0d" kindref="member">wxDictionaryStringSortAscending()</ref></para>
</simplesect>
<simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="306" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sorted_array_string_1a749e5ba32eca259199472427eb29199f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSortedArrayString::wxSortedArrayString</definition>
        <argsstring>(const wxArrayString &amp;array)</argsstring>
        <name>wxSortedArrayString</name>
        <qualifiedname>wxSortedArrayString::wxSortedArrayString</qualifiedname>
        <param>
          <type>const <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
<para>Conversion constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructs a sorted array with the same contents as the (possibly unsorted) <emphasis>array</emphasis> argument. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="314" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sorted_array_string_1ae23142317aff290ee6363f02d67ca2cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxSortedArrayString::Add</definition>
        <argsstring>(const wxString &amp;str, size_t copies=1)</argsstring>
        <name>Add</name>
        <qualifiedname>wxSortedArrayString::Add</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>copies</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Appends the given number of <emphasis>copies</emphasis> of the new item <emphasis>str</emphasis> to the array and returns the index of the first new item in the array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_sorted_array_string_1ab9d85c1a7d21952209d6fc87dbb5be32" kindref="member">Insert()</ref></para>
</simplesect>
<simplesect kind="warning"><para>For sorted arrays, the index of the inserted item will not be, in general, equal to GetCount() - 1 because the item is inserted at the correct position to keep the array sorted and not appended. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="324" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sorted_array_string_1a71112be0d1794af82779e97180900e45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxSortedArrayString::Index</definition>
        <argsstring>(const wxString &amp;str, bool bCase=true, bool bFromEnd=false) const</argsstring>
        <name>Index</name>
        <qualifiedname>wxSortedArrayString::Index</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bCase</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>bFromEnd</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Searches the array for <emphasis>str</emphasis>, starting from the beginning if <emphasis>bFromEnd</emphasis> is false or from the end otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>bCase</emphasis>, comparison is case sensitive (default), otherwise the case is ignored.</para>
<para>This function uses linear search for <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref>. Returns the index of the first item matched or <computeroutput>wxNOT_FOUND</computeroutput> if there is no match.</para>
<para>This function uses binary search for <ref refid="classwx_sorted_array_string" kindref="compound">wxSortedArrayString</ref>, but it ignores the <emphasis>bCase</emphasis> and <emphasis>bFromEnd</emphasis> parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="333" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sorted_array_string_1ab9d85c1a7d21952209d6fc87dbb5be32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSortedArrayString::Insert</definition>
        <argsstring>(const wxString &amp;str, size_t nIndex, size_t copies=1)</argsstring>
        <name>Insert</name>
        <qualifiedname>wxSortedArrayString::Insert</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nIndex</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>copies</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This function should not be used with sorted arrays because it could break the order of items and, for example, subsequent calls to <ref refid="classwx_sorted_array_string_1a71112be0d1794af82779e97180900e45" kindref="member">Index()</ref> would then not work!</para>
</simplesect>
<simplesect kind="warning"><para>In STL mode, Insert is private and simply invokes wxFAIL_MSG. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="343" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sorted_array_string_1abecc9015c35ee342e594c5fa9f76a927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSortedArrayString::Sort</definition>
        <argsstring>(bool reverseOrder=false)</argsstring>
        <name>Sort</name>
        <qualifiedname>wxSortedArrayString::Sort</qualifiedname>
        <param>
          <type>bool</type>
          <declname>reverseOrder</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This function should not be used with sorted array because it could break the order of items and, for example, subsequent calls to <ref refid="classwx_sorted_array_string_1a71112be0d1794af82779e97180900e45" kindref="member">Index()</ref> would then not work! Also, sorting a <ref refid="classwx_sorted_array_string" kindref="compound">wxSortedArrayString</ref> doesn&apos;t make sense because its elements are always already sorted.</para>
</simplesect>
<simplesect kind="warning"><para>In STL mode, Sort is private and simply invokes wxFAIL_MSG. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="355" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sorted_array_string_1a0661fc0625d585d1bca263da7a14f608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSortedArrayString::Sort</definition>
        <argsstring>(CompareFunction compareFunction)</argsstring>
        <name>Sort</name>
        <qualifiedname>wxSortedArrayString::Sort</qualifiedname>
        <param>
          <type>CompareFunction</type>
          <declname>compareFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="356" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_sorted_array_string" kindref="compound">wxSortedArrayString</ref> is an efficient container for storing <ref refid="classwx_string" kindref="compound">wxString</ref> objects which always keeps the strings in alphabetical order. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classwx_sorted_array_string" kindref="compound">wxSortedArrayString</ref> uses binary search in its <ref refid="classwx_sorted_array_string_1a71112be0d1794af82779e97180900e45" kindref="member">wxSortedArrayString::Index()</ref> method (instead of linear search for <ref refid="classwx_array_string_1a17f9a83da09ec426fb4d885acf8fea78" kindref="member">wxArrayString::Index()</ref>) which makes it much more efficient if you add strings to the array rarely (because, of course, you have to pay for <ref refid="classwx_sorted_array_string_1a71112be0d1794af82779e97180900e45" kindref="member">Index()</ref> efficiency by having <ref refid="classwx_sorted_array_string_1ae23142317aff290ee6363f02d67ca2cc" kindref="member">Add()</ref> be slower) but search for them often. Several methods should not be used with sorted array (basically, all those which break the order of items) which is mentioned in their description.</para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__containers" kindref="compound">Containers</ref></para>
<para><simplesect kind="see"><para>wxArray, <ref refid="classwx_string" kindref="compound">wxString</ref>, <ref refid="overview_string" kindref="compound">wxString Overview</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>wxArray</label>
      </node>
      <node id="1">
        <label>wxSortedArrayString</label>
        <link refid="classwx_sorted_array_string"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>wxArray</label>
      </node>
      <node id="1">
        <label>wxSortedArrayString</label>
        <link refid="classwx_sorted_array_string"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/arrstr.h" line="288" column="1" bodyfile="interface/wx/arrstr.h" bodystart="289" bodyend="358"/>
    <listofallmembers>
      <member refid="classwx_sorted_array_string_1ae23142317aff290ee6363f02d67ca2cc" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>Add</name></member>
      <member refid="classwx_sorted_array_string_1a71112be0d1794af82779e97180900e45" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>Index</name></member>
      <member refid="classwx_sorted_array_string_1ab9d85c1a7d21952209d6fc87dbb5be32" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>Insert</name></member>
      <member refid="classwx_sorted_array_string_1abecc9015c35ee342e594c5fa9f76a927" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>Sort</name></member>
      <member refid="classwx_sorted_array_string_1a0661fc0625d585d1bca263da7a14f608" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>Sort</name></member>
      <member refid="classwx_sorted_array_string_1a8a7d2088d6d5f12db6122b58cda05257" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>wxSortedArrayString</name></member>
      <member refid="classwx_sorted_array_string_1a95f10ad9c91ac925071527f9cc0e079c" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>wxSortedArrayString</name></member>
      <member refid="classwx_sorted_array_string_1a749e5ba32eca259199472427eb29199f" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>wxSortedArrayString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
