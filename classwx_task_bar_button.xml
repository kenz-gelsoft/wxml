<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_task_bar_button" kind="class" language="C++" prot="public">
    <compoundname>wxTaskBarButton</compoundname>
    <includes local="no">wx/taskbarbutton.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_task_bar_button_1a9769950870b1487db192308c788e08b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTaskBarButton::SetProgressRange</definition>
        <argsstring>(int range)</argsstring>
        <name>SetProgressRange</name>
        <qualifiedname>wxTaskBarButton::SetProgressRange</qualifiedname>
        <param>
          <type>int</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Starts showing a determinate progress indicator. </para>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="classwx_task_bar_button_1a99bc9d110911eb88c8f2d40fb1bfd28f" kindref="member">SetProgressValue()</ref> after this call to update the progress indicator.</para>
<para>If <emphasis>range</emphasis> is 0, the progress indicator is dismissed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="205" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1a99bc9d110911eb88c8f2d40fb1bfd28f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTaskBarButton::SetProgressValue</definition>
        <argsstring>(int value)</argsstring>
        <name>SetProgressValue</name>
        <qualifiedname>wxTaskBarButton::SetProgressValue</qualifiedname>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Update the progress indicator, setting the progress to the new value . </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be in the range from 0 to the argument to the last <ref refid="classwx_task_bar_button_1a9769950870b1487db192308c788e08b3" kindref="member">SetProgressRange()</ref> call. When it is equal to the range, the progress bar is dismissed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="214" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1aa58638ebc82b9e96c9e04b303974b4df" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTaskBarButton::PulseProgress</definition>
        <argsstring>()</argsstring>
        <name>PulseProgress</name>
        <qualifiedname>wxTaskBarButton::PulseProgress</qualifiedname>
        <briefdescription>
<para>Makes the progress indicator run in indeterminate mode. </para>
        </briefdescription>
        <detaileddescription>
<para>The first call to this method starts showing the indeterminate progress indicator if it hadn&apos;t been shown yet.</para>
<para>Call SetProgressRange(0) to stop showing the progress indicator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="224" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1a04d69625a372b8cfbee4ea20eceb8c7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTaskBarButton::Show</definition>
        <argsstring>(bool show=true)</argsstring>
        <name>Show</name>
        <qualifiedname>wxTaskBarButton::Show</qualifiedname>
        <param>
          <type>bool</type>
          <declname>show</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Show in the taskbar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="229" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1a6601c68610dd6c56f058928365236c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTaskBarButton::Hide</definition>
        <argsstring>()</argsstring>
        <name>Hide</name>
        <qualifiedname>wxTaskBarButton::Hide</qualifiedname>
        <briefdescription>
<para>Hide in the taskbar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="234" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1ad81cef74d816d1021722e3790260c6c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTaskBarButton::SetThumbnailTooltip</definition>
        <argsstring>(const wxString &amp;tooltip)</argsstring>
        <name>SetThumbnailTooltip</name>
        <qualifiedname>wxTaskBarButton::SetThumbnailTooltip</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>tooltip</declname>
        </param>
        <briefdescription>
<para>Specifies or updates the text of the tooltip that is displayed when the mouse pointer rests on an individual preview thumbnail in a taskbar button flyout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="241" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1a69af2889c87f0b96a7dc8f6f765ee8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTaskBarButton::SetProgressState</definition>
        <argsstring>(wxTaskBarButtonState state)</argsstring>
        <name>SetProgressState</name>
        <qualifiedname>wxTaskBarButton::SetProgressState</qualifiedname>
        <param>
          <type><ref refid="taskbarbutton_8h_1a6ca6503c3f6b99285c8449951b520bbf" kindref="member">wxTaskBarButtonState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Set the state of the progress indicator displayed on a taskbar button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="taskbarbutton_8h_1a6ca6503c3f6b99285c8449951b520bbf" kindref="member">wxTaskBarButtonState</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="248" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1aed0e148f396d2f913fdca193000de300" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTaskBarButton::SetOverlayIcon</definition>
        <argsstring>(const wxIcon &amp;icon, const wxString &amp;description=wxString())</argsstring>
        <name>SetOverlayIcon</name>
        <qualifiedname>wxTaskBarButton::SetOverlayIcon</qualifiedname>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>description</declname>
          <defval><ref refid="classwx_string" kindref="compound">wxString</ref>()</defval>
        </param>
        <briefdescription>
<para>Set an overlay icon to indicate application status or a notification top the user. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>icon</parametername>
</parameternamelist>
<parameterdescription>
<para>This should be a small icon, measuring 16x16 pixels at 96 dpi. If an overlay icon is already applied to the taskbar button, that existing overlay is replaced. Setting with wxNullIcon to remove. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>The property holds the description of the overlay for accessibility purposes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="262" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1aacef6289026e8e58c88ad1448b54a55a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTaskBarButton::SetThumbnailClip</definition>
        <argsstring>(const wxRect &amp;rect)</argsstring>
        <name>SetThumbnailClip</name>
        <qualifiedname>wxTaskBarButton::SetThumbnailClip</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Selects a portion of a window&apos;s client area to display as that window&apos;s thumbnail in the taskbar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>The portion inside of the window. Setting with an empty <ref refid="classwx_rect" kindref="compound">wxRect</ref> will restore the default display of the thumbnail. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="273" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1aa2af3a78dc17149880d5c17edd209f9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTaskBarButton::SetThumbnailContents</definition>
        <argsstring>(const wxWindow *child)</argsstring>
        <name>SetThumbnailContents</name>
        <qualifiedname>wxTaskBarButton::SetThumbnailContents</qualifiedname>
        <param>
          <type>const <ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Selects the child window area to display as that window&apos;s thumbnail in the taskbar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="279" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1a783aefc3f94a8ee73f6deb7b8b02de5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTaskBarButton::InsertThumbBarButton</definition>
        <argsstring>(size_t pos, wxThumbBarButton *button)</argsstring>
        <name>InsertThumbBarButton</name>
        <qualifiedname>wxTaskBarButton::InsertThumbBarButton</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classwx_thumb_bar_button" kindref="compound">wxThumbBarButton</ref> *</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Inserts the given button before the position pos to the taskbar thumbnail toolbar. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The number of buttons and separators is limited to 7.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classwx_task_bar_button_1a481985692353dddfc5556b572979e5c2" kindref="member">AppendThumbBarButton()</ref>, <ref refid="classwx_task_bar_button_1ad3782569f57be7c56dce9ffb7351c55c" kindref="member">AppendSeparatorInThumbBar()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="289" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1a481985692353dddfc5556b572979e5c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTaskBarButton::AppendThumbBarButton</definition>
        <argsstring>(wxThumbBarButton *button)</argsstring>
        <name>AppendThumbBarButton</name>
        <qualifiedname>wxTaskBarButton::AppendThumbBarButton</qualifiedname>
        <param>
          <type><ref refid="classwx_thumb_bar_button" kindref="compound">wxThumbBarButton</ref> *</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Appends a button to the taskbar thumbnail toolbar. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The number of buttons and separators is limited to 7.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classwx_task_bar_button_1a783aefc3f94a8ee73f6deb7b8b02de5a" kindref="member">InsertThumbBarButton()</ref>, <ref refid="classwx_task_bar_button_1ad3782569f57be7c56dce9ffb7351c55c" kindref="member">AppendSeparatorInThumbBar()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="298" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1ad3782569f57be7c56dce9ffb7351c55c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTaskBarButton::AppendSeparatorInThumbBar</definition>
        <argsstring>()</argsstring>
        <name>AppendSeparatorInThumbBar</name>
        <qualifiedname>wxTaskBarButton::AppendSeparatorInThumbBar</qualifiedname>
        <briefdescription>
<para>Appends a separator to the taskbar thumbnail toolbar. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The number of buttons and separators is limited to 7.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classwx_task_bar_button_1a481985692353dddfc5556b572979e5c2" kindref="member">AppendThumbBarButton()</ref>, <ref refid="classwx_task_bar_button_1a783aefc3f94a8ee73f6deb7b8b02de5a" kindref="member">InsertThumbBarButton()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="307" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1a11ae449647d45a9ef6c6a4762fffc3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_thumb_bar_button" kindref="compound">wxThumbBarButton</ref> *</type>
        <definition>virtual wxThumbBarButton * wxTaskBarButton::RemoveThumbBarButton</definition>
        <argsstring>(wxThumbBarButton *button)</argsstring>
        <name>RemoveThumbBarButton</name>
        <qualifiedname>wxTaskBarButton::RemoveThumbBarButton</qualifiedname>
        <param>
          <type><ref refid="classwx_thumb_bar_button" kindref="compound">wxThumbBarButton</ref> *</type>
          <declname>button</declname>
        </param>
        <briefdescription>
<para>Removes the thumbnail toolbar button from the taskbar button but doesn&apos;t delete the associated c++ object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>The thumbnail toolbar button to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the button which was detached from the taskbar button. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="319" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_task_bar_button_1ab161fbdf94b2af0c170ac718b8deb808" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_thumb_bar_button" kindref="compound">wxThumbBarButton</ref> *</type>
        <definition>virtual wxThumbBarButton * wxTaskBarButton::RemoveThumbBarButton</definition>
        <argsstring>(int id)</argsstring>
        <name>RemoveThumbBarButton</name>
        <qualifiedname>wxTaskBarButton::RemoveThumbBarButton</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Removes the thumbnail toolbar button from the taskbar button but doesn&apos;t delete the associated c++ object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the thumbnail toolbar button to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the button which was detached from the taskbar button. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="331" column="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A taskbar button that associated with the window under Windows 7 or later. </para>
    </briefdescription>
    <detaileddescription>
<para>It is used to access the functionality including thumbnail representations, thumbnail toolbars, notification and status overlays, and progress indicators.</para>
<para><simplesect kind="note"><para>This class is only created and initialized in the internal implementation of <ref refid="classwx_frame" kindref="compound">wxFrame</ref> by design. You can only get the pointer of the instance which associated with the frame by calling <ref refid="classwx_frame_1a555acbda4f137bedaec8895262f1617a" kindref="member">wxFrame::MSWGetTaskBarButton()</ref>.</para>
</simplesect>
<heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__misc" kindref="compound">Miscellaneous</ref></para>
<para>Implementations:<nonbreakablespace/><nonbreakablespace/>native under <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref> port; a generic implementation is used elsewhere. Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref> port.  <onlyfor>wxmsw</onlyfor> </para>
<para><simplesect kind="see"><para><ref refid="classwx_frame_1a555acbda4f137bedaec8895262f1617a" kindref="member">wxFrame::MSWGetTaskBarButton()</ref> </para>
</simplesect>
<simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="interface/wx/taskbarbutton.h" line="194" column="1" bodyfile="interface/wx/taskbarbutton.h" bodystart="195" bodyend="332"/>
    <listofallmembers>
      <member refid="classwx_task_bar_button_1ad3782569f57be7c56dce9ffb7351c55c" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>AppendSeparatorInThumbBar</name></member>
      <member refid="classwx_task_bar_button_1a481985692353dddfc5556b572979e5c2" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>AppendThumbBarButton</name></member>
      <member refid="classwx_task_bar_button_1a6601c68610dd6c56f058928365236c42" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>Hide</name></member>
      <member refid="classwx_task_bar_button_1a783aefc3f94a8ee73f6deb7b8b02de5a" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>InsertThumbBarButton</name></member>
      <member refid="classwx_task_bar_button_1aa58638ebc82b9e96c9e04b303974b4df" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>PulseProgress</name></member>
      <member refid="classwx_task_bar_button_1a11ae449647d45a9ef6c6a4762fffc3b1" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>RemoveThumbBarButton</name></member>
      <member refid="classwx_task_bar_button_1ab161fbdf94b2af0c170ac718b8deb808" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>RemoveThumbBarButton</name></member>
      <member refid="classwx_task_bar_button_1aed0e148f396d2f913fdca193000de300" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>SetOverlayIcon</name></member>
      <member refid="classwx_task_bar_button_1a9769950870b1487db192308c788e08b3" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>SetProgressRange</name></member>
      <member refid="classwx_task_bar_button_1a69af2889c87f0b96a7dc8f6f765ee8c9" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>SetProgressState</name></member>
      <member refid="classwx_task_bar_button_1a99bc9d110911eb88c8f2d40fb1bfd28f" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>SetProgressValue</name></member>
      <member refid="classwx_task_bar_button_1aacef6289026e8e58c88ad1448b54a55a" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>SetThumbnailClip</name></member>
      <member refid="classwx_task_bar_button_1aa2af3a78dc17149880d5c17edd209f9a" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>SetThumbnailContents</name></member>
      <member refid="classwx_task_bar_button_1ad81cef74d816d1021722e3790260c6c1" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>SetThumbnailTooltip</name></member>
      <member refid="classwx_task_bar_button_1a04d69625a372b8cfbee4ea20eceb8c7d" prot="public" virt="virtual"><scope>wxTaskBarButton</scope><name>Show</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
