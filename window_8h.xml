<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="window_8h" kind="file" language="C++">
    <compoundname>window.h</compoundname>
    <innerclass refid="structwx_visual_attributes" prot="public">wxVisualAttributes</innerclass>
    <innerclass refid="classwx_window" prot="public">wxWindow</innerclass>
    <innerclass refid="classwx_window_1_1_children_repositioning_guard" prot="public">wxWindow::ChildrenRepositioningGuard</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="window_8h_1a49efebddb5cf706e0eb819b434bdf918" prot="public" static="no" strong="no">
        <type></type>
        <name>wxShowEffect</name>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918a870f3719cbef4f4b98e1f5f2719397df" prot="public">
          <name>wxSHOW_EFFECT_NONE</name>
          <briefdescription>
<para>No effect, equivalent to normal <ref refid="classwx_window_1a7fbc92ce240a8d4f6956b6e0276ef07f" kindref="member">wxWindow::Show()</ref> or Hide() call. </para>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="since"><para>2.9.1 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918a7155b4edc7c38b6bf843e70871d5bc68" prot="public">
          <name>wxSHOW_EFFECT_ROLL_TO_LEFT</name>
          <briefdescription>
<para>Roll window to the left. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918a2b6efeda37802b9a5d4df56f334e142b" prot="public">
          <name>wxSHOW_EFFECT_ROLL_TO_RIGHT</name>
          <briefdescription>
<para>Roll window to the right. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918a814303ddd579564cd73e4dc85955c8b1" prot="public">
          <name>wxSHOW_EFFECT_ROLL_TO_TOP</name>
          <briefdescription>
<para>Roll window to the top. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918ace2584cf0b52d0e3a8aa2770b98335dc" prot="public">
          <name>wxSHOW_EFFECT_ROLL_TO_BOTTOM</name>
          <briefdescription>
<para>Roll window to the bottom. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918a77ea56797bdcd2e348db385fa72061c3" prot="public">
          <name>wxSHOW_EFFECT_SLIDE_TO_LEFT</name>
          <briefdescription>
<para>Slide window to the left. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918a02433e6e63e9cdf4ce67b5934d1609e8" prot="public">
          <name>wxSHOW_EFFECT_SLIDE_TO_RIGHT</name>
          <briefdescription>
<para>Slide window to the right. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918a9d9d9a5ddd9400fc5f1f2c80374f1730" prot="public">
          <name>wxSHOW_EFFECT_SLIDE_TO_TOP</name>
          <briefdescription>
<para>Slide window to the top. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918ab0e20fdef413ed477d6c23a4bf9a3b53" prot="public">
          <name>wxSHOW_EFFECT_SLIDE_TO_BOTTOM</name>
          <briefdescription>
<para>Slide window to the bottom. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918a016edd6e26fcda4ed11e1e8e0b847c65" prot="public">
          <name>wxSHOW_EFFECT_BLEND</name>
          <briefdescription>
<para>Fade in or out effect. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918a52795141c658b5c5fb00a7ac0aa67487" prot="public">
          <name>wxSHOW_EFFECT_EXPAND</name>
          <briefdescription>
<para>Expanding or collapsing effect. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a49efebddb5cf706e0eb819b434bdf918a7d96cf4f12b51eec186dc7e70eed107e" prot="public">
          <name>wxSHOW_EFFECT_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Valid values for <ref refid="classwx_window_1a596b1715edfc7609f352b2e000ecbaec" kindref="member">wxWindow::ShowWithEffect()</ref> and <ref refid="classwx_window_1a5326fbb26557a224507a1c06e5640e89" kindref="member">wxWindow::HideWithEffect()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/window.h" line="12" column="1" bodyfile="interface/wx/window.h" bodystart="13" bodyend="52"/>
      </memberdef>
      <memberdef kind="enum" id="window_8h_1a1be3860693af99a6c1da72580097294c" prot="public" static="no" strong="no">
        <type></type>
        <name>@55</name>
        <enumvalue id="window_8h_1a1be3860693af99a6c1da72580097294cab2839f23f5c8a1d9ab468d04c31fc80d" prot="public">
          <name>wxTOUCH_NONE</name>
          <briefdescription>
<para>Don&apos;t generate any touch events. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a1be3860693af99a6c1da72580097294ca72c1914f8e9fc5aed8378578c62b84f5" prot="public">
          <name>wxTOUCH_VERTICAL_PAN_GESTURE</name>
          <briefdescription>
<para>Generate <ref refid="classwx_pan_gesture_event" kindref="compound">wxPanGestureEvent</ref> for vertical pans. </para>
          </briefdescription>
          <detaileddescription>
<para>Note that under macOS horizontal pan events are also enabled when this flag is specified. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a1be3860693af99a6c1da72580097294ca39c73e0f0620a6fa9bf5f5e8cd785a86" prot="public">
          <name>wxTOUCH_HORIZONTAL_PAN_GESTURE</name>
          <briefdescription>
<para>Generate <ref refid="classwx_pan_gesture_event" kindref="compound">wxPanGestureEvent</ref> for horizontal pans. </para>
          </briefdescription>
          <detaileddescription>
<para>Note that under macOS vertical pan events are also enabled when this flag is specified. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a1be3860693af99a6c1da72580097294ca46eb7cd92dfa4b5139d69de95961815c" prot="public">
          <name>wxTOUCH_PAN_GESTURES</name>
          <briefdescription>
<para>Generate <ref refid="classwx_pan_gesture_event" kindref="compound">wxPanGestureEvent</ref> for any pans. </para>
          </briefdescription>
          <detaileddescription>
<para>This is just a convenient combination of wxTOUCH_VERTICAL_PAN_GESTURE and wxTOUCH_HORIZONTAL_PAN_GESTURE. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a1be3860693af99a6c1da72580097294caadf9944b271ed1a85fa0e798a9e0a90b" prot="public">
          <name>wxTOUCH_ZOOM_GESTURE</name>
          <briefdescription>
<para>Generate <ref refid="classwx_zoom_gesture_event" kindref="compound">wxZoomGestureEvent</ref>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a1be3860693af99a6c1da72580097294ca6441697d774a3c0c56d231e03e4aded8" prot="public">
          <name>wxTOUCH_ROTATE_GESTURE</name>
          <briefdescription>
<para>Generate <ref refid="classwx_rotate_gesture_event" kindref="compound">wxRotateGestureEvent</ref>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a1be3860693af99a6c1da72580097294ca7a0e61a44b7e7c640e9a4cf7f390aa6b" prot="public">
          <name>wxTOUCH_PRESS_GESTURES</name>
          <briefdescription>
<para>Generate events for press or tap gestures such as <ref refid="classwx_two_finger_tap_event" kindref="compound">wxTwoFingerTapEvent</ref>, <ref refid="classwx_long_press_event" kindref="compound">wxLongPressEvent</ref> and <ref refid="classwx_press_and_tap_event" kindref="compound">wxPressAndTapEvent</ref>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a1be3860693af99a6c1da72580097294cac9db9326b1da3e8625ae09030d7b3a59" prot="public">
          <name>wxTOUCH_ALL_GESTURES</name>
          <briefdescription>
<para>Enable all supported gesture events. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Values for <ref refid="classwx_window_1ac1691c7a40e9245fe58430a1b8e3a998" kindref="member">wxWindow::EnableTouchEvents()</ref> mask. </para>
        </briefdescription>
        <detaileddescription>
<para>The values other than <ref refid="window_8h_1a1be3860693af99a6c1da72580097294cab2839f23f5c8a1d9ab468d04c31fc80d" kindref="member">wxTOUCH_NONE</ref> and <ref refid="window_8h_1a1be3860693af99a6c1da72580097294cac9db9326b1da3e8625ae09030d7b3a59" kindref="member">wxTOUCH_ALL_GESTURES</ref> can be combined together to request enabling events for the specified gestures and for them only.</para>
<para><simplesect kind="since"><para>3.1.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/window.h" line="64" column="1" bodyfile="interface/wx/window.h" bodystart="65" bodyend="115"/>
      </memberdef>
      <memberdef kind="enum" id="window_8h_1ac9420823bfeba78fce625fc105e3b01d" prot="public" static="no" strong="no">
        <type></type>
        <name>@56</name>
        <enumvalue id="window_8h_1ac9420823bfeba78fce625fc105e3b01daa49b1a81ab0660644d8f326d2cef9bf7" prot="public">
          <name>wxSEND_EVENT_POST</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>flags for SendSizeEvent() </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/window.h" line="120" column="1" bodyfile="interface/wx/window.h" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="enum" id="window_8h_1a879bccd2c987fedf06030a8abcbba8ac" prot="public" static="no" strong="no">
        <type></type>
        <name>wxWindowVariant</name>
        <enumvalue id="window_8h_1a879bccd2c987fedf06030a8abcbba8aca0e936e160cfb2b98d8a7bc38bfaee234" prot="public">
          <name>wxWINDOW_VARIANT_NORMAL</name>
          <briefdescription>
<para>Normal size. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a879bccd2c987fedf06030a8abcbba8acae2464600524a02b7703e33bf5d1ed1c7" prot="public">
          <name>wxWINDOW_VARIANT_SMALL</name>
          <briefdescription>
<para>Smaller size (about 25 % smaller than normal) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a879bccd2c987fedf06030a8abcbba8aca6478e4b1d493795db08ed3d2cbee7277" prot="public">
          <name>wxWINDOW_VARIANT_MINI</name>
          <briefdescription>
<para>Mini size (about 33 % smaller than normal) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a879bccd2c987fedf06030a8abcbba8aca5c060252b2e605be48966d5108c9dace" prot="public">
          <name>wxWINDOW_VARIANT_LARGE</name>
          <briefdescription>
<para>Large size (about 25 % larger than normal) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="window_8h_1a879bccd2c987fedf06030a8abcbba8aca27922d70ca63c45422a8e7a04382995f" prot="public">
          <name>wxWINDOW_VARIANT_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Different window variants, on platforms like eg mac uses different rendering sizes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/window.h" line="152" column="1" bodyfile="interface/wx/window.h" bodystart="153" bodyend="159"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="window_8h_1a095aa410477cf7c6897bacbea161f970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow * wxFindWindowAtPointer</definition>
        <argsstring>(wxPoint &amp;pt)</argsstring>
        <name>wxFindWindowAtPointer</name>
        <param>
          <type><ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Find the deepest window at the mouse pointer position, returning the window and current pointer position in screen coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para>Include file:<linebreak/>
 <verbatim>#include &lt;wx/window.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/window.h" line="4233" column="10" declfile="interface/wx/window.h" declline="4233" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="window_8h_1a6599d770196c74c80876314da9a6add6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow * wxGetActiveWindow</definition>
        <argsstring>()</argsstring>
        <name>wxGetActiveWindow</name>
        <briefdescription>
<para>Gets the currently active window (implemented for MSW and GTK only currently, always returns NULL in the other ports). </para>
        </briefdescription>
        <detaileddescription>
<para>Include file:<linebreak/>
 <verbatim>#include &lt;wx/window.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/window.h" line="4241" column="10" declfile="interface/wx/window.h" declline="4241" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="window_8h_1a1c7c9cfb1deeacc2669b836f69691654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow * wxGetTopLevelParent</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>wxGetTopLevelParent</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Returns the first top level parent of the given window, or in other words, the frame or dialog containing it, or NULL. </para>
        </briefdescription>
        <detaileddescription>
<para>Notice that if <emphasis>window</emphasis> is itself already a TLW, it is returned directly.</para>
<para>Include file:<linebreak/>
 <verbatim>#include &lt;wx/window.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/window.h" line="4251" column="10" declfile="interface/wx/window.h" declline="4251" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="interface/wx/window.h"/>
  </compounddef>
</doxygen>
