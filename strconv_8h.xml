<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="strconv_8h" kind="file" language="C++">
    <compoundname>strconv.h</compoundname>
    <innerclass refid="classwx_m_b_conv" prot="public">wxMBConv</innerclass>
    <innerclass refid="classwx_m_b_conv_u_t_f7" prot="public">wxMBConvUTF7</innerclass>
    <innerclass refid="classwx_m_b_conv_u_t_f8" prot="public">wxMBConvUTF8</innerclass>
    <innerclass refid="classwx_m_b_conv_u_t_f16" prot="public">wxMBConvUTF16</innerclass>
    <innerclass refid="classwx_m_b_conv_u_t_f32" prot="public">wxMBConvUTF32</innerclass>
    <innerclass refid="classwx_c_s_conv" prot="public">wxCSConv</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="strconv_8h_1ab91097a28adc811113c5c1bf9e4b3873" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> &amp;</type>
        <definition>wxMBConv&amp; wxConvWhateverWorks</definition>
        <argsstring></argsstring>
        <name>wxConvWhateverWorks</name>
        <briefdescription>
<para>Conversion object always producing non-empty output for non-empty input. </para>
        </briefdescription>
        <detaileddescription>
<para>Conversions done using this object never lose data, at the cost of possibly producing the output in an unwanted encoding or misinterpreting input encoding.</para>
<para>To be precise, converting Unicode to multibyte strings using this object tries to use the current locale encoding first but if this doesn&apos;t work, it falls back to using UTF-8. In the other direction, UTF-8 is tried first, then the current locale encoding and if this fails too, input is interpreted as using ISO 8859-1, which never fails.</para>
<para>It is almost always <emphasis>wrong</emphasis> to use this converter for multibyte-to-Unicode direction as the program should know which encoding the input data is supposed to use and use the appropriate converter instead. However it may be useful in the Unicode-to-multibyte direction if the goal is to produce the output in the current locale encoding if possible, but still output something, instead of nothing at all, even if the Unicode string is not representable in this encoding.</para>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/strconv.h" line="542" column="17" declfile="interface/wx/strconv.h" declline="542" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="group__group__class__conv_1gaaff591b5b6a10da01612f085e2ce0740" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> *</type>
        <definition>wxMBConv* wxConvFileName</definition>
        <argsstring></argsstring>
        <name>wxConvFileName</name>
        <briefdescription>
<para>Conversion object used for converting file names from their external representation to the one used inside the program. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>wxConvFileName</bold> converts filenames between filesystem multibyte encoding and Unicode. <bold>wxConvFileName</bold> can also be set to a something else at run-time which is used e.g. by wxGTK to use an object which checks the environment variable <bold>G_FILESYSTEM_ENCODING</bold> indicating that filenames should not be interpreted as UTF8 and also for converting invalid UTF8 characters (e.g. if there is a filename in iso8859_1) to strings with octal values.</para>
<para>Since some platforms (such as Win32) use Unicode in the filenames, and others (such as Unix) use multibyte encodings, this object should only be used directly if wxMBFILES is defined to 1. A convenience macro, <computeroutput>wxFNCONV</computeroutput>, is defined to <computeroutput>wxConvFileName-&gt;cWX2MB</computeroutput> in this case. You could use it like this:</para>
<para><programlisting><codeline><highlight class="normal">wxChar<sp/>*name<sp/>=<sp/>&quot;rawfile.doc&quot;;</highlight></codeline>
<codeline><highlight class="normal">FILE<sp/>*fil<sp/>=<sp/>fopen(wxFNCONV(name),<sp/>&quot;r&quot;);</highlight></codeline>
</programlisting></para>
<para>(although it would be better to just use wxFopen(name, &quot;r&quot;) in this particular case, you only need to use this object for functions taking file names not wrapped by wxWidgets.)</para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para>
<para><simplesect kind="see"><para><ref refid="overview_mbconv" kindref="compound">wxMBConv Overview</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/strconv.h" line="577" column="17" declfile="interface/wx/strconv.h" declline="577" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="interface/wx/strconv.h"/>
  </compounddef>
</doxygen>
