<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="interface_2wx_2app_8h" kind="file" language="C++">
    <compoundname>app.h</compoundname>
    <innerclass refid="classwx_app_console" prot="public">wxAppConsole</innerclass>
    <innerclass refid="classwx_app" prot="public">wxApp</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="interface_2wx_2app_8h_1a1523a2d553dea288d66cd35e8a0ffd5c" prot="public" static="no">
        <name>wxDECLARE_APP</name>
        <param><defname>className</defname></param>
        <briefdescription>
<para>This is used in headers to create a forward declaration of the <ref refid="interface_2wx_2app_8h_1a10e0a27ef33ad2abc9b862cef90b3e25" kindref="member">wxGetApp()</ref> function implemented by <ref refid="interface_2wx_2app_8h_1a967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>It creates the declaration <computeroutput>className&amp; <ref refid="interface_2wx_2app_8h_1a10e0a27ef33ad2abc9b862cef90b3e25" kindref="member">wxGetApp()</ref></computeroutput> (requires a final semicolon).</para>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim></para>
<para>Example:</para>
<para><programlisting><codeline><highlight class="normal">wxDECLARE_APP(MyApp);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1192" column="9" bodyfile="interface/wx/app.h" bodystart="1192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_2wx_2app_8h_1a967aafaa261481fe2d2e1cf599e3e003" prot="public" static="no">
        <name>wxIMPLEMENT_APP</name>
        <param><defname>className</defname></param>
        <briefdescription>
<para>This macro defines the application entry point and tells wxWidgets which application class should be used. </para>
        </briefdescription>
        <detaileddescription>
<para>The two tasks performed by this macro can be done separately by using wxIMPLEMENT_APP_NO_MAIN() and <ref refid="interface_2wx_2app_8h_1a7168119c9f38c6d0ed4d86e1b050a565" kindref="member">wxIMPLEMENT_WXWIN_MAIN()</ref> macros, but in a typical GUI application it&apos;s simpler and more convenient to use this macro to do both together.</para>
<para>The <emphasis>className</emphasis> passed to this macro must be a name of the class deriving from <ref refid="classwx_app" kindref="compound">wxApp</ref>.</para>
<para>Note that this macro requires a final semicolon.</para>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim></para>
<para>Example:</para>
<para><programlisting><codeline><highlight class="normal">wxIMPLEMENT_APP(MyApp);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><ref refid="interface_2wx_2app_8h_1a1523a2d553dea288d66cd35e8a0ffd5c" kindref="member">wxDECLARE_APP()</ref>, <ref refid="interface_2wx_2app_8h_1af9321ce8991049f1a434b0bb3f7dd193" kindref="member">wxIMPLEMENT_APP_CONSOLE()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1218" column="9" bodyfile="interface/wx/app.h" bodystart="1218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_2wx_2app_8h_1af9321ce8991049f1a434b0bb3f7dd193" prot="public" static="no">
        <name>wxIMPLEMENT_APP_CONSOLE</name>
        <param><defname>className</defname></param>
        <briefdescription>
<para>This macro defines the application entry point for non-GUI applications and tells wxWidgets which application class should be used. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro is provided for symmetry with <ref refid="interface_2wx_2app_8h_1a967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref> for the console (non-GUI) applications and is equivalent to using wxIMPLEMENT_APP_NO_MAIN() and <ref refid="interface_2wx_2app_8h_1a5d89ca248272a7281974607b3fc50b71" kindref="member">wxIMPLEMENT_WXWIN_MAIN_CONSOLE()</ref>.</para>
<para>The <emphasis>className</emphasis> passed to this macro must be a name of the class deriving from <ref refid="classwx_app" kindref="compound">wxApp</ref>.</para>
<para>Note that this macro requires a final semicolon.</para>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim></para>
<para>Example:</para>
<para><programlisting><codeline><highlight class="normal">wxIMPLEMENT_APP_CONSOLE(MyApp);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><ref refid="interface_2wx_2app_8h_1a967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1243" column="9" bodyfile="interface/wx/app.h" bodystart="1243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_2wx_2app_8h_1a7168119c9f38c6d0ed4d86e1b050a565" prot="public" static="no">
        <name>wxIMPLEMENT_WXWIN_MAIN</name>
        <briefdescription>
<para>This macro defines the application entry point appropriate for the current platform. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that usually <ref refid="interface_2wx_2app_8h_1a967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref> is used instead of this macro.</para>
<para>For most platforms, it defines <computeroutput>main()</computeroutput> function, but for GUI Windows applications, it defines <computeroutput>WinMain()</computeroutput> instead.</para>
<para>In either case, the macro expansion includes the call to <ref refid="interface_2wx_2app_8h_1a8db18cbe95b3b42c3017a8bf048b0839" kindref="member">wxDISABLE_DEBUG_SUPPORT()</ref> which disables debugging code in release builds. If you don&apos;t use this macro, but define the entry point yourself, you probably want to call <ref refid="interface_2wx_2app_8h_1a8db18cbe95b3b42c3017a8bf048b0839" kindref="member">wxDISABLE_DEBUG_SUPPORT()</ref> explicitly.</para>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1261" column="9" bodyfile="interface/wx/app.h" bodystart="1261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_2wx_2app_8h_1a5d89ca248272a7281974607b3fc50b71" prot="public" static="no">
        <name>wxIMPLEMENT_WXWIN_MAIN_CONSOLE</name>
        <briefdescription>
<para>This macro defines the application entry point for console applications. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro is provided mostly for symmetry with <ref refid="interface_2wx_2app_8h_1a7168119c9f38c6d0ed4d86e1b050a565" kindref="member">wxIMPLEMENT_WXWIN_MAIN()</ref> but is less useful, as it is also simple enough to define <computeroutput>main()</computeroutput> function directly.</para>
<para>Please note, however, that this macro, as well as <ref refid="interface_2wx_2app_8h_1af9321ce8991049f1a434b0bb3f7dd193" kindref="member">wxIMPLEMENT_APP_CONSOLE()</ref> which uses it, contains the call to <ref refid="interface_2wx_2app_8h_1a8db18cbe95b3b42c3017a8bf048b0839" kindref="member">wxDISABLE_DEBUG_SUPPORT()</ref> which disables debugging code in release builds and that if you don&apos;t use this macro, but define <computeroutput>main()</computeroutput> yourself, you probably want to call <ref refid="interface_2wx_2app_8h_1a8db18cbe95b3b42c3017a8bf048b0839" kindref="member">wxDISABLE_DEBUG_SUPPORT()</ref> from it explicitly.</para>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1278" column="9" bodyfile="interface/wx/app.h" bodystart="1278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="interface_2wx_2app_8h_1a8db18cbe95b3b42c3017a8bf048b0839" prot="public" static="no">
        <name>wxDISABLE_DEBUG_SUPPORT</name>
        <param></param>
        <initializer>    <ref refid="debug_8h_1a96e17e1bb37bec44a6608d0521abe22e" kindref="member">wxDISABLE_ASSERTS_IN_RELEASE_BUILD</ref>(); \
    <ref refid="interface_2wx_2log_8h_1ac3ef2e94c74050aa3098ae22a49bf7c7" kindref="member">wxDISABLE_DEBUG_LOGGING_IN_RELEASE_BUILD</ref>()</initializer>
        <briefdescription>
<para>Use this macro to disable all debugging code in release build when not using <ref refid="interface_2wx_2app_8h_1a967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Currently this macro disables assert checking and debug and trace level logging messages in release build (i.e. when <computeroutput>NDEBUG</computeroutput> is defined). It is used by <ref refid="interface_2wx_2app_8h_1a967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref> macro so you only need to use it explicitly if you don&apos;t use this macro but initialize wxWidgets directly (e.g. calls <ref refid="interface_2wx_2app_8h_1a7d3eefb35631a5d8dfce97eb17340b21" kindref="member">wxEntry()</ref> or <ref refid="init_8h_1ac81f7fea72a17cc744d8c8785864c78a" kindref="member">wxEntryStart()</ref> itself).</para>
<para>If you do not want to disable debugging code even in release build of your application, you can use <ref refid="debug_8h_1a56835907381132cfc64135d7fbf9d883" kindref="member">wxSetDefaultAssertHandler()</ref> and <ref refid="classwx_log_1a4ea68379469ca27f645d5f91c2d42b3b" kindref="member">wxLog::SetLogLevel()</ref> with <computeroutput>wxLOG_Max</computeroutput> parameter to enable assertions and debug logging respectively.</para>
<para><simplesect kind="see"><para><ref refid="debug_8h_1a96e17e1bb37bec44a6608d0521abe22e" kindref="member">wxDISABLE_ASSERTS_IN_RELEASE_BUILD()</ref>, <ref refid="interface_2wx_2log_8h_1ac3ef2e94c74050aa3098ae22a49bf7c7" kindref="member">wxDISABLE_DEBUG_LOGGING_IN_RELEASE_BUILD()</ref>, <ref refid="overview_debugging" kindref="compound">Debugging</ref></para>
</simplesect>
<simplesect kind="since"><para>2.9.1</para>
</simplesect>
Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1477" column="9" bodyfile="interface/wx/app.h" bodystart="1477" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="interface_2wx_2app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_app" kindref="compound">wxApp</ref> *</type>
        <definition>wxApp* wxTheApp</definition>
        <argsstring></argsstring>
        <name>wxTheApp</name>
        <briefdescription>
<para>The global pointer to the singleton <ref refid="classwx_app" kindref="compound">wxApp</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>This pointer can only be used in the GUI applications.</para>
<para><simplesect kind="see"><para><ref refid="classwx_app_console_1ad417e3d46817d6fcfccda1392f333aee" kindref="member">wxAppConsole::GetInstance()</ref>, <ref refid="classwx_app_1a830cbdf6a1f68092792531deade59a73" kindref="member">wxApp::GetGUIInstance()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1291" column="7" bodyfile="interface/wx/app.h" bodystart="1291" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="interface_2wx_2app_8h_1a10e0a27ef33ad2abc9b862cef90b3e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxAppDerivedClass &amp;</type>
        <definition>wxAppDerivedClass &amp; wxGetApp</definition>
        <argsstring>()</argsstring>
        <name>wxGetApp</name>
        <briefdescription>
<para>This function doesn&apos;t exist in wxWidgets but it is created by using the <ref refid="interface_2wx_2app_8h_1a967aafaa261481fe2d2e1cf599e3e003" kindref="member">wxIMPLEMENT_APP()</ref> macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Thus, before using it anywhere but in the same module where this macro is used, you must make it available using <ref refid="interface_2wx_2app_8h_1a1523a2d553dea288d66cd35e8a0ffd5c" kindref="member">wxDECLARE_APP()</ref>.</para>
<para>The advantage of using this function compared to directly using the global <ref refid="interface_2wx_2app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref> pointer is that the latter is of type wxApp* and so wouldn&apos;t allow you to access the functions specific to your application class but not present in <ref refid="classwx_app" kindref="compound">wxApp</ref> while <ref refid="interface_2wx_2app_8h_1a10e0a27ef33ad2abc9b862cef90b3e25" kindref="member">wxGetApp()</ref> returns the object of the right type.</para>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1312" column="19" declfile="interface/wx/app.h" declline="1312" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="interface_2wx_2app_8h_1a28a4fb827b93fa6bac18c9666c23ee10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxHandleFatalExceptions</definition>
        <argsstring>(bool doIt=true)</argsstring>
        <name>wxHandleFatalExceptions</name>
        <param>
          <type>bool</type>
          <declname>doIt</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>If <emphasis>doIt</emphasis> is true, the fatal exceptions (also known as general protection faults under Windows or segmentation violations in the Unix world) will be caught and passed to <ref refid="classwx_app_console_1a927931aafbb7aec4debdfc02ee6f6f9d" kindref="member">wxApp::OnFatalException</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, i.e. before this function is called, they will be handled in the normal way which usually just means that the application will be terminated. Calling <ref refid="interface_2wx_2app_8h_1a28a4fb827b93fa6bac18c9666c23ee10" kindref="member">wxHandleFatalExceptions()</ref> with <emphasis>doIt</emphasis> equal to false will restore this default behaviour.</para>
<para>Notice that this function is only available if <computeroutput>wxUSE_ON_FATAL_EXCEPTION</computeroutput> is 1 and under Windows platform this requires a compiler with support for SEH (structured exception handling) which currently means only Microsoft Visual C++.</para>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1331" column="6" declfile="interface/wx/app.h" declline="1331" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="interface_2wx_2app_8h_1aa7b284f57a94442126d1e45faca5b4ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxInitialize</definition>
        <argsstring>()</argsstring>
        <name>wxInitialize</name>
        <briefdescription>
<para>This function is used in wxBase only and only if you don&apos;t create <ref refid="classwx_app" kindref="compound">wxApp</ref> object at all. </para>
        </briefdescription>
        <detaileddescription>
<para>In this case you must call it from your <computeroutput>main()</computeroutput> function before calling any other wxWidgets functions.</para>
<para>If the function returns false the initialization could not be performed, in this case the library cannot be used and <ref refid="interface_2wx_2app_8h_1a6aa1674945da924183f65de703aeafa3" kindref="member">wxUninitialize()</ref> shouldn&apos;t be called neither.</para>
<para>This function may be called several times but <ref refid="interface_2wx_2app_8h_1a6aa1674945da924183f65de703aeafa3" kindref="member">wxUninitialize()</ref> must be called for each successful call to this function.</para>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1347" column="6" declfile="interface/wx/app.h" declline="1347" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="interface_2wx_2app_8h_1a6aa1674945da924183f65de703aeafa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxUninitialize</definition>
        <argsstring>()</argsstring>
        <name>wxUninitialize</name>
        <briefdescription>
<para>This function is for use in console (wxBase) programs only. </para>
        </briefdescription>
        <detaileddescription>
<para>It must be called once for each previous successful call to <ref refid="interface_2wx_2app_8h_1aa7b284f57a94442126d1e45faca5b4ad" kindref="member">wxInitialize()</ref>.</para>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1355" column="6" declfile="interface/wx/app.h" declline="1355" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="interface_2wx_2app_8h_1a97206743f70b5382f9e2615217604d15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxWakeUpIdle</definition>
        <argsstring>()</argsstring>
        <name>wxWakeUpIdle</name>
        <briefdescription>
<para>This function wakes up the (internal and platform dependent) idle system, i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>it will force the system to send an idle event even if the system currently <emphasis>is</emphasis> idle and thus would not send any idle event until after some other event would get sent. This is also useful for sending events between two threads and is used by the corresponding functions <ref refid="event_8h_1a0cf60a1ad3a5f1e659f7ae591570f58d" kindref="member">wxPostEvent()</ref> and <ref refid="classwx_evt_handler_1a0737c6d2cbcd5ded4b1ecdd53ed0def3" kindref="member">wxEvtHandler::AddPendingEvent()</ref>.</para>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1367" column="6" declfile="interface/wx/app.h" declline="1367" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="interface_2wx_2app_8h_1ac386c89a04e364afc07edce6d848c27a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxYield</definition>
        <argsstring>()</argsstring>
        <name>wxYield</name>
        <briefdescription>
<para>Calls <ref refid="classwx_app_console_1a302adeb701f247bf8cac1570efc25020" kindref="member">wxAppConsole::Yield</ref> if there is an existing application object. </para>
        </briefdescription>
        <detaileddescription>
<para>Does nothing if there is no application (which typically only happens early during the program startup or late during its shutdown).</para>
<para><simplesect kind="see"><para>wxEvtLoopBase::Yield()</para>
</simplesect>
Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1379" column="6" declfile="interface/wx/app.h" declline="1379" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="interface_2wx_2app_8h_1a25abb4004fac0bcc0b937d93657c8cba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeYield</definition>
        <argsstring>(wxWindow *win=NULL, bool onlyIfNeeded=false)</argsstring>
        <name>wxSafeYield</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>onlyIfNeeded</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Calls <ref refid="classwx_app_1a81cc0e2724a7adbc0cc8b0aeeb5a072f" kindref="member">wxApp::SafeYield</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1386" column="6" declfile="interface/wx/app.h" declline="1386" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="interface_2wx_2app_8h_1a7d3eefb35631a5d8dfce97eb17340b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxEntry</definition>
        <argsstring>(int &amp;argc, wxChar **argv)</argsstring>
        <name>wxEntry</name>
        <param>
          <type>int &amp;</type>
          <declname>argc</declname>
        </param>
        <param>
          <type><ref refid="chartype_8h_1ad42f64d8c82f1ce4ae58773a89b2d6a7" kindref="member">wxChar</ref> **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>This function initializes wxWidgets in a platform-dependent way. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this if you are not using the default wxWidgets entry code (e.g. main or WinMain).</para>
<para>For example, you can initialize wxWidgets from a Microsoft Foundation Classes (MFC) application using this function.</para>
<para><simplesect kind="note"><para>This overload of wxEntry is available under all platforms.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="init_8h_1ac81f7fea72a17cc744d8c8785864c78a" kindref="member">wxEntryStart()</ref></para>
</simplesect>
Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1401" column="5" declfile="interface/wx/app.h" declline="1401" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="interface_2wx_2app_8h_1a087409a444cb50f75f5819d6d57389af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxEntry</definition>
        <argsstring>(HINSTANCE hInstance, HINSTANCE hPrevInstance=NULL, char *pCmdLine=NULL, int nCmdShow=SW_SHOWNORMAL)</argsstring>
        <name>wxEntry</name>
        <param>
          <type>HINSTANCE</type>
          <declname>hInstance</declname>
        </param>
        <param>
          <type>HINSTANCE</type>
          <declname>hPrevInstance</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>char *</type>
          <declname>pCmdLine</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nCmdShow</declname>
          <defval>SW_SHOWNORMAL</defval>
        </param>
        <briefdescription>
<para>See <ref refid="interface_2wx_2app_8h_1a7d3eefb35631a5d8dfce97eb17340b21" kindref="member">wxEntry(int&amp;,wxChar**)</ref> for more info about this function. </para>
        </briefdescription>
        <detaileddescription>
<para>Notice that the type of <emphasis>pCmdLine</emphasis> is <computeroutput>char</computeroutput> *, even in Unicode build.</para>
<para><simplesect kind="remark"><para>To clean up wxWidgets, call <ref refid="classwx_app_console_1a5ee60051c92b0b2933258799626a0485" kindref="member">wxApp::OnExit</ref> followed by the static function wxApp::CleanUp. For example, if exiting from an MFC application that also uses wxWidgets: <programlisting><codeline><highlight class="normal">int<sp/>CTheApp::ExitInstance()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>//<sp/>OnExit<sp/>isn&apos;t<sp/>called<sp/>by<sp/>CleanUp<sp/>so<sp/>must<sp/>be<sp/>called<sp/>explicitly.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>wxTheApp-&gt;OnExit();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>wxApp::CleanUp();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>return<sp/>CWinApp::ExitInstance();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
</simplesect>
Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1424" column="5" declfile="interface/wx/app.h" declline="1424" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="interface_2wx_2app_8h_1a3770f7ff142dab558f10ae354350874d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxExit</definition>
        <argsstring>()</argsstring>
        <name>wxExit</name>
        <briefdescription>
<para>Exits application after calling <ref refid="classwx_app_console_1a5ee60051c92b0b2933258799626a0485" kindref="member">wxApp::OnExit</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Should only be used in an emergency: normally the top-level frame should be deleted (after deleting all other frames) to terminate the application. See <ref refid="classwx_close_event" kindref="compound">wxCloseEvent</ref> and <ref refid="classwx_app" kindref="compound">wxApp</ref>.</para>
<para>Include file: <verbatim>#include &lt;wx/app.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/app.h" line="1445" column="6" declfile="interface/wx/app.h" declline="1445" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="interface/wx/app.h"/>
  </compounddef>
</doxygen>
