<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classwx_graphics_context" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>wxGraphicsContext</compoundname>
    <basecompoundref refid="classwx_graphics_object" prot="public" virt="non-virtual">wxGraphicsObject</basecompoundref>
    <includes local="no">wx/graphics.h</includes>
      <sectiondef kind="user-defined">
      <header>Creating a context</header>
      <memberdef kind="function" id="classwx_graphics_context_1ae8720ba0ce3401fe236449858b7cf950" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> *</type>
        <definition>static wxGraphicsContext * wxGraphicsContext::Create</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> from a <ref refid="classwx_window" kindref="compound">wxWindow</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_renderer_1a8e9d88060d2f305050007fa0e0f1b5f5" kindref="member">wxGraphicsRenderer::CreateContext()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="426" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a25dca87b498a8fe9fa23a702fa3a384e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> *</type>
        <definition>static wxGraphicsContext * wxGraphicsContext::Create</definition>
        <argsstring>(const wxWindowDC &amp;windowDC)</argsstring>
        <name>Create</name>
        <param>
          <type>const <ref refid="classwx_window_d_c" kindref="compound">wxWindowDC</ref> &amp;</type>
          <declname>windowDC</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> from a <ref refid="classwx_window_d_c" kindref="compound">wxWindowDC</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_renderer_1a8e9d88060d2f305050007fa0e0f1b5f5" kindref="member">wxGraphicsRenderer::CreateContext()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="433" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1af544047a78a2cb0f1bb216e27ace1d0c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> *</type>
        <definition>static wxGraphicsContext * wxGraphicsContext::Create</definition>
        <argsstring>(const wxMemoryDC &amp;memoryDC)</argsstring>
        <name>Create</name>
        <param>
          <type>const <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref> &amp;</type>
          <declname>memoryDC</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> from a <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_renderer_1a8e9d88060d2f305050007fa0e0f1b5f5" kindref="member">wxGraphicsRenderer::CreateContext()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="440" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a53bf5d1b2961d3ee31f1d73aeaa88378" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> *</type>
        <definition>static wxGraphicsContext * wxGraphicsContext::Create</definition>
        <argsstring>(const wxPrinterDC &amp;printerDC)</argsstring>
        <name>Create</name>
        <param>
          <type>const <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref> &amp;</type>
          <declname>printerDC</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> from a <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Under GTK+, this will only work when using the GtkPrint printing backend which is available since GTK+ 2.10.</para>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_renderer_1a8e9d88060d2f305050007fa0e0f1b5f5" kindref="member">wxGraphicsRenderer::CreateContext()</ref>, <ref refid="overview_unixprinting" kindref="compound">Printing Under Unix (GTK+)</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="449" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a9a5091dadfe615f0b26825d3389ec734" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> *</type>
        <definition>static wxGraphicsContext * wxGraphicsContext::Create</definition>
        <argsstring>(const wxEnhMetaFileDC &amp;metaFileDC)</argsstring>
        <name>Create</name>
        <param>
          <type>const wxEnhMetaFileDC &amp;</type>
          <declname>metaFileDC</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> from a wxEnhMetaFileDC. </para>
        </briefdescription>
        <detaileddescription>
<para>This function, as wxEnhMetaFileDC class itself, is only available only under MSW.</para>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_renderer_1a8e9d88060d2f305050007fa0e0f1b5f5" kindref="member">wxGraphicsRenderer::CreateContext()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="459" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1aa8000f79cb2123da46b31c15246c7383" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> *</type>
        <definition>static wxGraphicsContext * wxGraphicsContext::CreateFromUnknownDC</definition>
        <argsstring>(wxDC &amp;dc)</argsstring>
        <name>CreateFromUnknownDC</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> from a DC of unknown specific type. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> if <emphasis>dc</emphasis> is a supported type (i.e. has a corresponding <ref refid="classwx_graphics_context_1a5be9099dbe7c3ca825aa55bdcc541cf5" kindref="member">Create()</ref> method, e.g. <ref refid="classwx_window_d_c" kindref="compound">wxWindowDC</ref> or <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref>). Returns NULL if the DC is unsupported.</para>
<para>This method is only useful as a helper in generic code that operates with <ref refid="classwx_d_c" kindref="compound">wxDC</ref> and doesn&apos;t known its exact type. Use <ref refid="classwx_graphics_context_1a5be9099dbe7c3ca825aa55bdcc541cf5" kindref="member">Create()</ref> instead if you know that the DC is e.g. <ref refid="classwx_window_d_c" kindref="compound">wxWindowDC</ref>.</para>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_renderer_1a013783b6a162aa69b2fa3bee00df447a" kindref="member">wxGraphicsRenderer::CreateContextFromUnknownDC()</ref></para>
</simplesect>
<simplesect kind="since"><para>3.1.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="476" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a91dbb89974c189fa4b743ee7dc9ae7cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> *</type>
        <definition>static wxGraphicsContext * wxGraphicsContext::Create</definition>
        <argsstring>(wxImage &amp;image)</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="classwx_image" kindref="compound">wxImage</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> associated with a <ref refid="classwx_image" kindref="compound">wxImage</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The image specifies the size of the context as well as whether alpha is supported (if <ref refid="classwx_image_1accd85932f27036014ca00997897e1040" kindref="member">wxImage::HasAlpha()</ref>) or not and the initial contents of the context. The <emphasis>image</emphasis> object must have a life time greater than that of the new context as the context copies its contents back to the image when it is destroyed.</para>
<para><simplesect kind="since"><para>2.9.3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="489" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1ad74196005aaf6c1e346a52eb042a623f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> *</type>
        <definition>static wxGraphicsContext * wxGraphicsContext::CreateFromNative</definition>
        <argsstring>(void *context)</argsstring>
        <name>CreateFromNative</name>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> from a native context. </para>
        </briefdescription>
        <detaileddescription>
<para>This native context must be a CGContextRef for Core Graphics, a Graphics pointer for GDIPlus, or a cairo_t pointer for cairo.</para>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_renderer_1a876136ecca42eec1221262423dd480cb" kindref="member">wxGraphicsRenderer::CreateContextFromNativeContext()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="498" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a538b8d96804b12f6f32d159eef03d919" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> *</type>
        <definition>static wxGraphicsContext * wxGraphicsContext::CreateFromNativeWindow</definition>
        <argsstring>(void *window)</argsstring>
        <name>CreateFromNativeWindow</name>
        <param>
          <type>void *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> from a native window. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_renderer_1a1fc536e8ad3ae87cd5979cbb50edc02a" kindref="member">wxGraphicsRenderer::CreateContextFromNativeWindow()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="505" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a151169c27b86af5cdf505ae2531ff8e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> *</type>
        <definition>static wxGraphicsContext * wxGraphicsContext::CreateFromNativeHDC</definition>
        <argsstring>(WXHDC dc)</argsstring>
        <name>CreateFromNativeHDC</name>
        <param>
          <type>WXHDC</type>
          <declname>dc</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> from a native DC handle. </para>
        </briefdescription>
        <detaileddescription>
<para>Windows only.</para>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_renderer_1ad146fd4828656b79b1094016fc3b9110" kindref="member">wxGraphicsRenderer::CreateContextFromNativeHDC()</ref></para>
</simplesect>
<simplesect kind="since"><para>3.1.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="514" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a5be9099dbe7c3ca825aa55bdcc541cf5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> *</type>
        <definition>static wxGraphicsContext * wxGraphicsContext::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <briefdescription>
<para>Create a lightweight context that can be used only for measuring text. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="519" column="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Clipping region functions</header>
      <memberdef kind="function" id="classwx_graphics_context_1a41edbc852f1f3a1393059e44e29d500d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::ResetClip</definition>
        <argsstring>()=0</argsstring>
        <name>ResetClip</name>
        <briefdescription>
<para>Resets the clipping to original shape. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="533" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1aacdbd6d9f656007791cc57192d5a3d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::Clip</definition>
        <argsstring>(const wxRegion &amp;region)=0</argsstring>
        <name>Clip</name>
        <param>
          <type>const <ref refid="classwx_region" kindref="compound">wxRegion</ref> &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
<para>Sets the clipping region to the intersection of the given region and the previously set clipping region. </para>
        </briefdescription>
        <detaileddescription>
<para>The clipping region is an area to which drawing is restricted.</para>
<para><simplesect kind="remark"><para><itemizedlist>
<listitem><para>Clipping region should be given in logical coordinates.</para>
</listitem><listitem><para>Calling this function can only make the clipping region smaller, never larger.</para>
</listitem><listitem><para>You need to call <ref refid="classwx_graphics_context_1a41edbc852f1f3a1393059e44e29d500d" kindref="member">ResetClip()</ref> first if you want to set the clipping region exactly to the region specified.</para>
</listitem><listitem><para>If resulting clipping region is empty, then all drawing upon the context is clipped out (all changes made by drawing operations are masked out). </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="552" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a137c2acff86b0ef6d68f8dd09fd077ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::Clip</definition>
        <argsstring>(wxDouble x, wxDouble y, wxDouble w, wxDouble h)=0</argsstring>
        <name>Clip</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="557" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a25eac8ed5203b7b696a42982a6c31aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::GetClipBox</definition>
        <argsstring>(wxDouble *x, wxDouble *y, wxDouble *w, wxDouble *h)=0</argsstring>
        <name>GetClipBox</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Returns bounding box of the current clipping region. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para><itemizedlist>
<listitem><para>If clipping region is empty, then empty rectangle is returned (<emphasis>x</emphasis>, <emphasis>y</emphasis>, <emphasis>w</emphasis>, <emphasis>h</emphasis> are set to zero).</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="since"><para>3.1.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="568" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Transformation matrix</header>
      <memberdef kind="function" id="classwx_graphics_context_1ab3a310ba7b406775758a099fb6f6db51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_graphics_matrix" kindref="compound">wxGraphicsMatrix</ref></type>
        <definition>virtual wxGraphicsMatrix wxGraphicsContext::CreateMatrix</definition>
        <argsstring>(wxDouble a=1.0, wxDouble b=0.0, wxDouble c=0.0, wxDouble d=1.0, wxDouble tx=0.0, wxDouble ty=0.0) const</argsstring>
        <name>CreateMatrix</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>a</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>b</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>c</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>d</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>tx</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>ty</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Creates a native affine transformation matrix from the passed in values. </para>
        </briefdescription>
        <detaileddescription>
<para>The default parameters result in an identity matrix. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="583" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a299bf382fd5f22e11d9955db5574381a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_matrix" kindref="compound">wxGraphicsMatrix</ref></type>
        <definition>wxGraphicsMatrix wxGraphicsContext::CreateMatrix</definition>
        <argsstring>(const wxAffineMatrix2DBase &amp;mat) const</argsstring>
        <name>CreateMatrix</name>
        <param>
          <type>const <ref refid="classwx_affine_matrix2_d_base" kindref="compound">wxAffineMatrix2DBase</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>Creates a native affine transformation matrix from the passed generic one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="594" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a27a0d32bd48956ffac1acc4b44f268e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::ConcatTransform</definition>
        <argsstring>(const wxGraphicsMatrix &amp;matrix)=0</argsstring>
        <name>ConcatTransform</name>
        <param>
          <type>const <ref refid="classwx_graphics_matrix" kindref="compound">wxGraphicsMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
<para>Concatenates the passed in transform with the current transform of this context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="600" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1af9352912c014c93414f99d39761f5682" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_graphics_matrix" kindref="compound">wxGraphicsMatrix</ref></type>
        <definition>virtual wxGraphicsMatrix wxGraphicsContext::GetTransform</definition>
        <argsstring>() const =0</argsstring>
        <name>GetTransform</name>
        <briefdescription>
<para>Gets the current transformation matrix of this context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="605" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1affca88cad88a2d8a7612ab9e50e4da70" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::Rotate</definition>
        <argsstring>(wxDouble angle)=0</argsstring>
        <name>Rotate</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Rotates the current transformation matrix (in radians). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="610" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a4b890911d4798cbda7bf80f2076e9bf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::Scale</definition>
        <argsstring>(wxDouble xScale, wxDouble yScale)=0</argsstring>
        <name>Scale</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>xScale</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>yScale</declname>
        </param>
        <briefdescription>
<para>Scales the current transformation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="615" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a1d3eb969a3973525523b2e7fadb59f51" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::SetTransform</definition>
        <argsstring>(const wxGraphicsMatrix &amp;matrix)=0</argsstring>
        <name>SetTransform</name>
        <param>
          <type>const <ref refid="classwx_graphics_matrix" kindref="compound">wxGraphicsMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
<para>Sets the current transformation matrix of this context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="620" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a3fcc8a79248f192c637ff89466939916" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::Translate</definition>
        <argsstring>(wxDouble dx, wxDouble dy)=0</argsstring>
        <name>Translate</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>dx</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>dy</declname>
        </param>
        <briefdescription>
<para>Translates the current transformation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="625" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Brush and pen functions</header>
      <memberdef kind="function" id="classwx_graphics_context_1a4516ae09c39b5cf1e1f4e65761fb3a19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_graphics_brush" kindref="compound">wxGraphicsBrush</ref></type>
        <definition>virtual wxGraphicsBrush wxGraphicsContext::CreateBrush</definition>
        <argsstring>(const wxBrush &amp;brush) const</argsstring>
        <name>CreateBrush</name>
        <param>
          <type>const <ref refid="classwx_brush" kindref="compound">wxBrush</ref> &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
<para>Creates a native brush from a <ref refid="classwx_brush" kindref="compound">wxBrush</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="639" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1aff2163dce621092f6af618713ec29d93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_brush" kindref="compound">wxGraphicsBrush</ref></type>
        <definition>wxGraphicsBrush wxGraphicsContext::CreateLinearGradientBrush</definition>
        <argsstring>(wxDouble x1, wxDouble y1, wxDouble x2, wxDouble y2, const wxColour &amp;c1, const wxColour &amp;c2, const wxGraphicsMatrix &amp;matrix=wxNullGraphicsMatrix) const</argsstring>
        <name>CreateLinearGradientBrush</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x1</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y1</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x2</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y2</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>c2</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_graphics_matrix" kindref="compound">wxGraphicsMatrix</ref> &amp;</type>
          <declname>matrix</declname>
          <defval><ref refid="graphics_8h_1a07954c042dc231f9f0edbfa558a7d2cb" kindref="member">wxNullGraphicsMatrix</ref></defval>
        </param>
        <briefdescription>
<para>Creates a native brush with a linear gradient. </para>
        </briefdescription>
        <detaileddescription>
<para>The brush starts at (<emphasis>x1</emphasis>, <emphasis>y1</emphasis>) and ends at (<emphasis>x2</emphasis>, <emphasis>y2</emphasis>). Either just the start and end gradient colours (<emphasis>c1</emphasis> and <emphasis>c2</emphasis>) or full set of gradient <emphasis>stops</emphasis> can be specified.</para>
<para>The version taking <ref refid="classwx_graphics_gradient_stops" kindref="compound">wxGraphicsGradientStops</ref> is new in wxWidgets 2.9.1.</para>
<para>The <emphasis>matrix</emphasis> parameter was added in wxWidgets 3.1.3 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="653" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1abcf38485a56abcb102ad73101e1ec1d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_brush" kindref="compound">wxGraphicsBrush</ref></type>
        <definition>wxGraphicsBrush wxGraphicsContext::CreateLinearGradientBrush</definition>
        <argsstring>(wxDouble x1, wxDouble y1, wxDouble x2, wxDouble y2, const wxGraphicsGradientStops &amp;stops, const wxGraphicsMatrix &amp;matrix=wxNullGraphicsMatrix) const</argsstring>
        <name>CreateLinearGradientBrush</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x1</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y1</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x2</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y2</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_graphics_gradient_stops" kindref="compound">wxGraphicsGradientStops</ref> &amp;</type>
          <declname>stops</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_graphics_matrix" kindref="compound">wxGraphicsMatrix</ref> &amp;</type>
          <declname>matrix</declname>
          <defval><ref refid="graphics_8h_1a07954c042dc231f9f0edbfa558a7d2cb" kindref="member">wxNullGraphicsMatrix</ref></defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="662" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a8959d953dd046e0cd53e17be23e2a700" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_graphics_brush" kindref="compound">wxGraphicsBrush</ref></type>
        <definition>virtual wxGraphicsBrush wxGraphicsContext::CreateRadialGradientBrush</definition>
        <argsstring>(wxDouble startX, wxDouble startY, wxDouble endX, wxDouble endY, wxDouble radius, const wxColour &amp;oColor, const wxColour &amp;cColor, const wxGraphicsMatrix &amp;matrix=wxNullGraphicsMatrix) const</argsstring>
        <name>CreateRadialGradientBrush</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>startX</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>startY</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>endX</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>endY</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>oColor</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>cColor</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_graphics_matrix" kindref="compound">wxGraphicsMatrix</ref> &amp;</type>
          <declname>matrix</declname>
          <defval><ref refid="graphics_8h_1a07954c042dc231f9f0edbfa558a7d2cb" kindref="member">wxNullGraphicsMatrix</ref></defval>
        </param>
        <briefdescription>
<para>Creates a native brush with a radial gradient. </para>
        </briefdescription>
        <detaileddescription>
<para>The brush originates at (<emphasis>startX</emphasis>, <emphasis>startY</emphasis>) and ends on a circle around (<emphasis>endX</emphasis>, <emphasis>endY</emphasis>) with the given <emphasis>radius</emphasis>.</para>
<para>The gradient may be specified either by its start and end colours <emphasis>oColor</emphasis> and <emphasis>cColor</emphasis> or by a full set of gradient <emphasis>stops</emphasis>.</para>
<para>The version taking <ref refid="classwx_graphics_gradient_stops" kindref="compound">wxGraphicsGradientStops</ref> is new in wxWidgets 2.9.1.</para>
<para>The ability to apply a transformation matrix to the gradient was added in 3.1.3 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="681" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1ac6148d3bca9aa526c2acd8aeee7b8961" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_graphics_brush" kindref="compound">wxGraphicsBrush</ref></type>
        <definition>virtual wxGraphicsBrush wxGraphicsContext::CreateRadialGradientBrush</definition>
        <argsstring>(wxDouble startX, wxDouble startY, wxDouble endX, wxDouble endY, wxDouble radius, const wxGraphicsGradientStops &amp;stops, const wxGraphicsMatrix &amp;matrix=wxNullGraphicsMatrix)=0</argsstring>
        <name>CreateRadialGradientBrush</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>startX</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>startY</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>endX</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>endY</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_graphics_gradient_stops" kindref="compound">wxGraphicsGradientStops</ref> &amp;</type>
          <declname>stops</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_graphics_matrix" kindref="compound">wxGraphicsMatrix</ref> &amp;</type>
          <declname>matrix</declname>
          <defval><ref refid="graphics_8h_1a07954c042dc231f9f0edbfa558a7d2cb" kindref="member">wxNullGraphicsMatrix</ref></defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="692" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a622c7f2349d0df34482f47983e2de2fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGraphicsContext::SetBrush</definition>
        <argsstring>(const wxBrush &amp;brush)</argsstring>
        <name>SetBrush</name>
        <param>
          <type>const <ref refid="classwx_brush" kindref="compound">wxBrush</ref> &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
<para>Sets the brush for filling paths. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="701" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1ae7f43bd73c7212db2763c1a0535adb84" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::SetBrush</definition>
        <argsstring>(const wxGraphicsBrush &amp;brush)</argsstring>
        <name>SetBrush</name>
        <param>
          <type>const <ref refid="classwx_graphics_brush" kindref="compound">wxGraphicsBrush</ref> &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
<para>Sets the brush for filling paths. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="706" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1ad0fcb2f41fd517e417e9bb7ac74587a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_pen" kindref="compound">wxGraphicsPen</ref></type>
        <definition>wxGraphicsPen wxGraphicsContext::CreatePen</definition>
        <argsstring>(const wxPen &amp;pen) const</argsstring>
        <name>CreatePen</name>
        <param>
          <type>const <ref refid="classwx_pen" kindref="compound">wxPen</ref> &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
<para>Creates a native pen from a <ref refid="classwx_pen" kindref="compound">wxPen</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Prefer to use the overload taking <ref refid="classwx_graphics_pen_info" kindref="compound">wxGraphicsPenInfo</ref> unless you already have a <ref refid="classwx_pen" kindref="compound">wxPen</ref> as constructing one only to pass it to this method is wasteful. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="715" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a03a0886ccc898a79e70aa55c22e6bf81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_pen" kindref="compound">wxGraphicsPen</ref></type>
        <definition>wxGraphicsPen wxGraphicsContext::CreatePen</definition>
        <argsstring>(const wxGraphicsPenInfo &amp;info) const</argsstring>
        <name>CreatePen</name>
        <param>
          <type>const <ref refid="classwx_graphics_pen_info" kindref="compound">wxGraphicsPenInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Creates a native pen from a <ref refid="classwx_graphics_pen_info" kindref="compound">wxGraphicsPenInfo</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>3.1.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="722" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1ac34d6320c2777fe2afcf8777868e37d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGraphicsContext::SetPen</definition>
        <argsstring>(const wxPen &amp;pen)</argsstring>
        <name>SetPen</name>
        <param>
          <type>const <ref refid="classwx_pen" kindref="compound">wxPen</ref> &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
<para>Sets the pen used for stroking. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="727" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1acc15194eea4192f622d560bd33233cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::SetPen</definition>
        <argsstring>(const wxGraphicsPen &amp;pen)</argsstring>
        <name>SetPen</name>
        <param>
          <type>const <ref refid="classwx_graphics_pen" kindref="compound">wxGraphicsPen</ref> &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
<para>Sets the pen used for stroking. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="732" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Drawing functions</header>
      <memberdef kind="function" id="classwx_graphics_context_1aee61e2fbc580d7f6a344daa1d1e13296" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::DrawBitmap</definition>
        <argsstring>(const wxGraphicsBitmap &amp;bmp, wxDouble x, wxDouble y, wxDouble w, wxDouble h)=0</argsstring>
        <name>DrawBitmap</name>
        <param>
          <type>const <ref refid="classwx_graphics_bitmap" kindref="compound">wxGraphicsBitmap</ref> &amp;</type>
          <declname>bmp</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Draws the bitmap. </para>
        </briefdescription>
        <detaileddescription>
<para>In case of a mono bitmap, this is treated as a mask and the current brushed is used for filling. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="747" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1abe877acef8a07c423e68dd7844ec255c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::DrawBitmap</definition>
        <argsstring>(const wxBitmap &amp;bmp, wxDouble x, wxDouble y, wxDouble w, wxDouble h)=0</argsstring>
        <name>DrawBitmap</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmp</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="754" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a8c02b7104bf6dca1bef3f37e012008ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::DrawEllipse</definition>
        <argsstring>(wxDouble x, wxDouble y, wxDouble w, wxDouble h)</argsstring>
        <name>DrawEllipse</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Draws an ellipse. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="761" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a4f512c4bc3b646b983b74387c0ccc6e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::DrawIcon</definition>
        <argsstring>(const wxIcon &amp;icon, wxDouble x, wxDouble y, wxDouble w, wxDouble h)=0</argsstring>
        <name>DrawIcon</name>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Draws the icon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="766" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a9f2ff291f576a5b6aa59f088598d7cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::DrawLines</definition>
        <argsstring>(size_t n, const wxPoint2DDouble *points, wxPolygonFillMode fillStyle=wxODDEVEN_RULE)</argsstring>
        <name>DrawLines</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point2_d_double" kindref="compound">wxPoint2DDouble</ref> *</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a771e5c5703eb406b19fb50bb718eee05" kindref="member">wxPolygonFillMode</ref></type>
          <declname>fillStyle</declname>
          <defval><ref refid="gdicmn_8h_1a771e5c5703eb406b19fb50bb718eee05a8845ab62cc357dfde27baf7ebf10ffac" kindref="member">wxODDEVEN_RULE</ref></defval>
        </param>
        <briefdescription>
<para>Draws a polygon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="772" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1aafc07428a486bd6a1daf4853389c2e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::DrawPath</definition>
        <argsstring>(const wxGraphicsPath &amp;path, wxPolygonFillMode fillStyle=wxODDEVEN_RULE)</argsstring>
        <name>DrawPath</name>
        <param>
          <type>const <ref refid="classwx_graphics_path" kindref="compound">wxGraphicsPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a771e5c5703eb406b19fb50bb718eee05" kindref="member">wxPolygonFillMode</ref></type>
          <declname>fillStyle</declname>
          <defval><ref refid="gdicmn_8h_1a771e5c5703eb406b19fb50bb718eee05a8845ab62cc357dfde27baf7ebf10ffac" kindref="member">wxODDEVEN_RULE</ref></defval>
        </param>
        <briefdescription>
<para>Draws the path by first filling and then stroking. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="778" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a300ea068aecf0b7c96546f8d084534cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::DrawRectangle</definition>
        <argsstring>(wxDouble x, wxDouble y, wxDouble w, wxDouble h)</argsstring>
        <name>DrawRectangle</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Draws a rectangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="784" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a123baf346513b26823b15336ef05018e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::DrawRoundedRectangle</definition>
        <argsstring>(wxDouble x, wxDouble y, wxDouble w, wxDouble h, wxDouble radius)</argsstring>
        <name>DrawRoundedRectangle</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Draws a rounded rectangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="789" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a6fc49c0c082ea2e9f08e5546843888a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGraphicsContext::DrawText</definition>
        <argsstring>(const wxString &amp;str, wxDouble x, wxDouble y)</argsstring>
        <name>DrawText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Draws text at the defined position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="795" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a4720793e4671b711299177749cda6327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGraphicsContext::DrawText</definition>
        <argsstring>(const wxString &amp;str, wxDouble x, wxDouble y, wxDouble angle)</argsstring>
        <name>DrawText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Draws text at the defined position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate position to draw the text at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate position to draw the text at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>The angle, in radians, relative to the (default) horizontal direction to draw the string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="810" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a9c20fee21f6ad25a692072d362d24909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGraphicsContext::DrawText</definition>
        <argsstring>(const wxString &amp;str, wxDouble x, wxDouble y, const wxGraphicsBrush &amp;backgroundBrush)</argsstring>
        <name>DrawText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_graphics_brush" kindref="compound">wxGraphicsBrush</ref> &amp;</type>
          <declname>backgroundBrush</declname>
        </param>
        <briefdescription>
<para>Draws text at the defined position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate position to draw the text at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate position to draw the text at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backgroundBrush</parametername>
</parameternamelist>
<parameterdescription>
<para>Brush to fill the text with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="824" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a37efc3d9b9d0fc69132e806ca8e0c01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGraphicsContext::DrawText</definition>
        <argsstring>(const wxString &amp;str, wxDouble x, wxDouble y, wxDouble angle, const wxGraphicsBrush &amp;backgroundBrush)</argsstring>
        <name>DrawText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>angle</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_graphics_brush" kindref="compound">wxGraphicsBrush</ref> &amp;</type>
          <declname>backgroundBrush</declname>
        </param>
        <briefdescription>
<para>Draws text at the defined position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x coordinate position to draw the text at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y coordinate position to draw the text at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>The angle, in radians, relative to the (default) horizontal direction to draw the string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backgroundBrush</parametername>
</parameternamelist>
<parameterdescription>
<para>Brush to fill the text with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="841" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1acf166e67b5a0b02e418e46d39123e0ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_graphics_path" kindref="compound">wxGraphicsPath</ref></type>
        <definition>wxGraphicsPath wxGraphicsContext::CreatePath</definition>
        <argsstring>() const</argsstring>
        <name>CreatePath</name>
        <briefdescription>
<para>Creates a native graphics path which is initially empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="847" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a225c90d767a6c26989d85ac8463d029f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::FillPath</definition>
        <argsstring>(const wxGraphicsPath &amp;path, wxPolygonFillMode fillStyle=wxODDEVEN_RULE)=0</argsstring>
        <name>FillPath</name>
        <param>
          <type>const <ref refid="classwx_graphics_path" kindref="compound">wxGraphicsPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a771e5c5703eb406b19fb50bb718eee05" kindref="member">wxPolygonFillMode</ref></type>
          <declname>fillStyle</declname>
          <defval><ref refid="gdicmn_8h_1a771e5c5703eb406b19fb50bb718eee05a8845ab62cc357dfde27baf7ebf10ffac" kindref="member">wxODDEVEN_RULE</ref></defval>
        </param>
        <briefdescription>
<para>Fills the path with the current brush. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="852" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a871e2e9ed868df0b1acbbfd4822479a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::StrokeLine</definition>
        <argsstring>(wxDouble x1, wxDouble y1, wxDouble x2, wxDouble y2)</argsstring>
        <name>StrokeLine</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x1</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y1</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x2</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y2</declname>
        </param>
        <briefdescription>
<para>Strokes a single line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="858" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1acfb6d98806247a5d06b5b2f5f57972ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::StrokeLines</definition>
        <argsstring>(size_t n, const wxPoint2DDouble *beginPoints, const wxPoint2DDouble *endPoints)</argsstring>
        <name>StrokeLines</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point2_d_double" kindref="compound">wxPoint2DDouble</ref> *</type>
          <declname>beginPoints</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point2_d_double" kindref="compound">wxPoint2DDouble</ref> *</type>
          <declname>endPoints</declname>
        </param>
        <briefdescription>
<para>Stroke disconnected lines from begin to end points, fastest method available for this purpose. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="865" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a08055b131515a6fb39868ad7c2bf25fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::StrokeLines</definition>
        <argsstring>(size_t n, const wxPoint2DDouble *points)</argsstring>
        <name>StrokeLines</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point2_d_double" kindref="compound">wxPoint2DDouble</ref> *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Stroke lines connecting all the points. </para>
        </briefdescription>
        <detaileddescription>
<para>Unlike the other overload of this function, this method draws a single polyline and not a number of disconnected lines. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="873" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a4f7f8f768e84dcdf50493f0e7ef0c00a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::StrokePath</definition>
        <argsstring>(const wxGraphicsPath &amp;path)=0</argsstring>
        <name>StrokePath</name>
        <param>
          <type>const <ref refid="classwx_graphics_path" kindref="compound">wxGraphicsPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Strokes along a path with the current pen. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="878" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Text functions</header>
      <memberdef kind="function" id="classwx_graphics_context_1a27be36e04ed80b0ac7aac5b657d496cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_graphics_font" kindref="compound">wxGraphicsFont</ref></type>
        <definition>virtual wxGraphicsFont wxGraphicsContext::CreateFont</definition>
        <argsstring>(const wxFont &amp;font, const wxColour &amp;col= *wxBLACK) const</argsstring>
        <name>CreateFont</name>
        <param>
          <type>const <ref refid="classwx_font" kindref="compound">wxFont</ref> &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>col</declname>
          <defval>*<ref refid="colour_8h_1a28c9e9208c4907063eb9869ff2332776" kindref="member">wxBLACK</ref></defval>
        </param>
        <briefdescription>
<para>Creates a native graphics font from a <ref refid="classwx_font" kindref="compound">wxFont</ref> and a text colour. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>For Direct2D graphics fonts can be created from TrueType fonts only. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="895" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1ac1d467c23ea43d1a402d63b674bcd18e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_graphics_font" kindref="compound">wxGraphicsFont</ref></type>
        <definition>virtual wxGraphicsFont wxGraphicsContext::CreateFont</definition>
        <argsstring>(double sizeInPixels, const wxString &amp;facename, int flags=wxFONTFLAG_DEFAULT, const wxColour &amp;col= *wxBLACK) const</argsstring>
        <name>CreateFont</name>
        <param>
          <type>double</type>
          <declname>sizeInPixels</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>facename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="interface_2wx_2font_8h_1a332098a83a5d888d2e1169b4bd9565daa7d4aeb5a9cd61d36185166643cbe59ad" kindref="member">wxFONTFLAG_DEFAULT</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>col</declname>
          <defval>*<ref refid="colour_8h_1a28c9e9208c4907063eb9869ff2332776" kindref="member">wxBLACK</ref></defval>
        </param>
        <briefdescription>
<para>Creates a font object with the specified attributes. </para>
        </briefdescription>
        <detaileddescription>
<para>The use of overload taking <ref refid="classwx_font" kindref="compound">wxFont</ref> is preferred, see <ref refid="classwx_graphics_renderer_1afebce1c20aa5d61fffb91b968e2d630d" kindref="member">wxGraphicsRenderer::CreateFont()</ref> for more details.</para>
<para><simplesect kind="remark"><para>For Direct2D graphics fonts can be created from TrueType fonts only.</para>
</simplesect>
<simplesect kind="since"><para>2.9.3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="909" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a8a1756278f0a3f7125280ac1aeedd135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGraphicsContext::SetFont</definition>
        <argsstring>(const wxFont &amp;font, const wxColour &amp;colour)</argsstring>
        <name>SetFont</name>
        <param>
          <type>const <ref refid="classwx_font" kindref="compound">wxFont</ref> &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <briefdescription>
<para>Sets the font for drawing text. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>For Direct2D only TrueType fonts can be used. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="920" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1adcd4539f8db8200d9ddc47385a142328" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::SetFont</definition>
        <argsstring>(const wxGraphicsFont &amp;font)</argsstring>
        <name>SetFont</name>
        <param>
          <type>const <ref refid="classwx_graphics_font" kindref="compound">wxGraphicsFont</ref> &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Sets the font for drawing text. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="925" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a833d7b036804e46cd2f1fd7bacb1db62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::GetPartialTextExtents</definition>
        <argsstring>(const wxString &amp;text, wxArrayDouble &amp;widths) const =0</argsstring>
        <name>GetPartialTextExtents</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="dynarray_8h_1a84411c7d20ee889cd887dd10ef12b1a7" kindref="member">wxArrayDouble</ref> &amp;</type>
          <declname>widths</declname>
        </param>
        <briefdescription>
<para>Fills the <emphasis>widths</emphasis> array with the widths from the beginning of <emphasis>text</emphasis> to the corresponding character of <emphasis>text</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="931" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a32afcb5c7ed4d75d473c47c5b567198a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::GetTextExtent</definition>
        <argsstring>(const wxString &amp;text, wxDouble *width, wxDouble *height, wxDouble *descent, wxDouble *externalLeading) const =0</argsstring>
        <name>GetTextExtent</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>descent</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>externalLeading</declname>
        </param>
        <briefdescription>
<para>Gets the dimensions of the string using the currently selected font. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text string to measure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the total calculated width of the text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the total calculated height of the text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>descent</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the dimension from the baseline of the font to the bottom of the descender. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>externalLeading</parametername>
</parameternamelist>
<parameterdescription>
<para>Any extra vertical space added to the font by the font designer (usually is zero). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="950" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Page and document start/end functions</header>
      <memberdef kind="function" id="classwx_graphics_context_1aafa1fe3a6e692dde741505e0bf1c90c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxGraphicsContext::StartDoc</definition>
        <argsstring>(const wxString &amp;message)</argsstring>
        <name>StartDoc</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Begin a new document (relevant only for printing / pdf etc.) If there is a progress dialog, message will be shown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="967" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a21d6014bb8529002eff2be6bcd2572f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::EndDoc</definition>
        <argsstring>()</argsstring>
        <name>EndDoc</name>
        <briefdescription>
<para>Done with that document (relevant only for printing / pdf etc.) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="972" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1ab7c6ecebaf95556f90527437299193c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::StartPage</definition>
        <argsstring>(wxDouble width=0, wxDouble height=0)</argsstring>
        <name>StartPage</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>width</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>height</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Opens a new page (relevant only for printing / pdf etc.) with the given size in points. </para>
        </briefdescription>
        <detaileddescription>
<para>(If both are null the default page size will be used.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="978" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a33b54026827258d12aa9a7c64a69464e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::EndPage</definition>
        <argsstring>()</argsstring>
        <name>EndPage</name>
        <briefdescription>
<para>Ends the current page (relevant only for printing / pdf etc.) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="983" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Bitmap functions</header>
      <memberdef kind="function" id="classwx_graphics_context_1ac53693504979f5378e24b01a3fc3deaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_graphics_bitmap" kindref="compound">wxGraphicsBitmap</ref></type>
        <definition>virtual wxGraphicsBitmap wxGraphicsContext::CreateBitmap</definition>
        <argsstring>(const wxBitmap &amp;bitmap)=0</argsstring>
        <name>CreateBitmap</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bitmap</declname>
        </param>
        <briefdescription>
<para>Creates <ref refid="classwx_graphics_bitmap" kindref="compound">wxGraphicsBitmap</ref> from an existing <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns an invalid wxNullGraphicsBitmap on failure. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="999" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1aa9cac3d795e0ac80f501b2da73fa70c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_graphics_bitmap" kindref="compound">wxGraphicsBitmap</ref></type>
        <definition>virtual wxGraphicsBitmap wxGraphicsContext::CreateBitmapFromImage</definition>
        <argsstring>(const wxImage &amp;image)</argsstring>
        <name>CreateBitmapFromImage</name>
        <param>
          <type>const <ref refid="classwx_image" kindref="compound">wxImage</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>Creates <ref refid="classwx_graphics_bitmap" kindref="compound">wxGraphicsBitmap</ref> from an existing <ref refid="classwx_image" kindref="compound">wxImage</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is more efficient than converting <ref refid="classwx_image" kindref="compound">wxImage</ref> to <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> first and then calling <ref refid="classwx_graphics_context_1ac53693504979f5378e24b01a3fc3deaa" kindref="member">CreateBitmap()</ref> but otherwise has the same effect.</para>
<para>Returns an invalid wxNullGraphicsBitmap on failure.</para>
<para><simplesect kind="since"><para>2.9.3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1011" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1ab20045381f093685cf8cb115c27b2c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_graphics_bitmap" kindref="compound">wxGraphicsBitmap</ref></type>
        <definition>virtual wxGraphicsBitmap wxGraphicsContext::CreateSubBitmap</definition>
        <argsstring>(const wxGraphicsBitmap &amp;bitmap, wxDouble x, wxDouble y, wxDouble w, wxDouble h)=0</argsstring>
        <name>CreateSubBitmap</name>
        <param>
          <type>const <ref refid="classwx_graphics_bitmap" kindref="compound">wxGraphicsBitmap</ref> &amp;</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Extracts a sub-bitmap from an existing bitmap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1016" column="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifying the state</header>
      <memberdef kind="function" id="classwx_graphics_context_1a14cca9fef8391d46f54259caa097ca1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::BeginLayer</definition>
        <argsstring>(wxDouble opacity)=0</argsstring>
        <name>BeginLayer</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref></type>
          <declname>opacity</declname>
        </param>
        <briefdescription>
<para>All rendering will be done into a fully transparent temporary context. </para>
        </briefdescription>
        <detaileddescription>
<para>Layers can be nested by making balanced calls to <ref refid="classwx_graphics_context_1a14cca9fef8391d46f54259caa097ca1f" kindref="member">BeginLayer()</ref>/EndLayer(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1033" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a5135c2f7c70eab04fe68532ccf3d6f95" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::EndLayer</definition>
        <argsstring>()=0</argsstring>
        <name>EndLayer</name>
        <briefdescription>
<para>Composites back the drawings into the context with the opacity given at the <ref refid="classwx_graphics_context_1a14cca9fef8391d46f54259caa097ca1f" kindref="member">BeginLayer()</ref> call. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1039" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1af2548831583e900dd74462c7d58fec47" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::PushState</definition>
        <argsstring>()=0</argsstring>
        <name>PushState</name>
        <briefdescription>
<para>Push the current state (like transformations, clipping region and quality settings) of the context on a stack. </para>
        </briefdescription>
        <detaileddescription>
<para>Multiple balanced calls to <ref refid="classwx_graphics_context_1af2548831583e900dd74462c7d58fec47" kindref="member">PushState()</ref> and <ref refid="classwx_graphics_context_1a396b928674376f503aa3b2959e39c473" kindref="member">PopState()</ref> can be nested.</para>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_context_1a396b928674376f503aa3b2959e39c473" kindref="member">PopState()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1048" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a396b928674376f503aa3b2959e39c473" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::PopState</definition>
        <argsstring>()=0</argsstring>
        <name>PopState</name>
        <briefdescription>
<para>Sets current state of the context to the state saved by a preceding call to <ref refid="classwx_graphics_context_1af2548831583e900dd74462c7d58fec47" kindref="member">PushState()</ref> and removes that state from the stack of saved states. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_context_1af2548831583e900dd74462c7d58fec47" kindref="member">PushState()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1056" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1aebfbc516794756202ebfc2d4e153c9e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::Flush</definition>
        <argsstring>()</argsstring>
        <name>Flush</name>
        <briefdescription>
<para>Make sure that the current content of this context is immediately visible. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1061" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getting/setting parameters</header>
      <memberdef kind="function" id="classwx_graphics_context_1a530df82b84aa33456bf5d24990a2e031" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void *</type>
        <definition>virtual void * wxGraphicsContext::GetNativeContext</definition>
        <argsstring>()=0</argsstring>
        <name>GetNativeContext</name>
        <briefdescription>
<para>Returns the native context (CGContextRef for Core Graphics, Graphics pointer for GDIPlus and cairo_t pointer for cairo). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1076" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a51e968476c72d3d77424cb8e11a14d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxGraphicsContext::SetAntialiasMode</definition>
        <argsstring>(wxAntialiasMode antialias)=0</argsstring>
        <name>SetAntialiasMode</name>
        <param>
          <type><ref refid="graphics_8h_1a2163cc0b26553eee0e9e7da270518c97" kindref="member">wxAntialiasMode</ref></type>
          <declname>antialias</declname>
        </param>
        <briefdescription>
<para>Sets the antialiasing mode, returns true if it supported. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1081" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a4e15e27f5c8f4489571d1677e54d314d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="graphics_8h_1a2163cc0b26553eee0e9e7da270518c97" kindref="member">wxAntialiasMode</ref></type>
        <definition>virtual wxAntialiasMode wxGraphicsContext::GetAntialiasMode</definition>
        <argsstring>() const</argsstring>
        <name>GetAntialiasMode</name>
        <briefdescription>
<para>Returns the current shape antialiasing mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1086" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1af6ecb449cb732632a8d9b5c285d01b91" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxGraphicsContext::SetInterpolationQuality</definition>
        <argsstring>(wxInterpolationQuality interpolation)=0</argsstring>
        <name>SetInterpolationQuality</name>
        <param>
          <type><ref refid="graphics_8h_1aec2ef7cc43f841ab74155becb8185e18" kindref="member">wxInterpolationQuality</ref></type>
          <declname>interpolation</declname>
        </param>
        <briefdescription>
<para>Sets the interpolation quality, returns true if it is supported. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Not implemented in Cairo backend currently. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1094" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1ac9c0e729ede66c3550850d724fc74b6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="graphics_8h_1aec2ef7cc43f841ab74155becb8185e18" kindref="member">wxInterpolationQuality</ref></type>
        <definition>virtual wxInterpolationQuality wxGraphicsContext::GetInterpolationQuality</definition>
        <argsstring>() const</argsstring>
        <name>GetInterpolationQuality</name>
        <briefdescription>
<para>Returns the current interpolation quality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1099" column="36"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a08a80e457f7bb28d0394c248de1742ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxGraphicsContext::SetCompositionMode</definition>
        <argsstring>(wxCompositionMode op)=0</argsstring>
        <name>SetCompositionMode</name>
        <param>
          <type><ref refid="graphics_8h_1af26ae47387aa983f2a975b3f85cb9668" kindref="member">wxCompositionMode</ref></type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Sets the compositing operator, returns true if it supported. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1104" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a900cd213e1e5101bc9f2114855714738" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="graphics_8h_1af26ae47387aa983f2a975b3f85cb9668" kindref="member">wxCompositionMode</ref></type>
        <definition>virtual wxCompositionMode wxGraphicsContext::GetCompositionMode</definition>
        <argsstring>() const</argsstring>
        <name>GetCompositionMode</name>
        <briefdescription>
<para>Returns the current compositing operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1109" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a018be4882b4a89f5a3dc33debb4337af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGraphicsContext::GetSize</definition>
        <argsstring>(wxDouble *width, wxDouble *height) const</argsstring>
        <name>GetSize</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Returns the size of the graphics context in device coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1114" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1afbc39e0316871a429748b0567ed92112" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::GetDPI</definition>
        <argsstring>(wxDouble *dpiX, wxDouble *dpiY) const</argsstring>
        <name>GetDPI</name>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>dpiX</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a75a450a943d1f217d7cf24f2b9eeed2e" kindref="member">wxDouble</ref> *</type>
          <declname>dpiY</declname>
        </param>
        <briefdescription>
<para>Returns the resolution of the graphics context in device points per inch. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1119" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a1cad810a6544ed6c624a145c61061c10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow * wxGraphicsContext::GetWindow</definition>
        <argsstring>() const</argsstring>
        <name>GetWindow</name>
        <briefdescription>
<para>Returns the associated window if any. </para>
        </briefdescription>
        <detaileddescription>
<para>If this context was created using <ref refid="classwx_graphics_context_1a5be9099dbe7c3ca825aa55bdcc541cf5" kindref="member">Create()</ref> overload taking <ref refid="classwx_window" kindref="compound">wxWindow</ref> or <ref refid="classwx_window_d_c" kindref="compound">wxWindowDC</ref>, this method returns the corresponding window. Otherwise returns NULL.</para>
<para><simplesect kind="return"><para>A possibly NULL window pointer.</para>
</simplesect>
<simplesect kind="since"><para>3.1.2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1132" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Offset management</header>
      <memberdef kind="function" id="classwx_graphics_context_1ae63c8f7649b2b3df71b5e4bc867f4186" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxGraphicsContext::ShouldOffset</definition>
        <argsstring>() const</argsstring>
        <name>ShouldOffset</name>
        <briefdescription>
<para>Helper to determine if a 0.5 offset should be applied for the drawing operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1147" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1a80d7a1215921597ef049b224708fb321" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGraphicsContext::EnableOffset</definition>
        <argsstring>(bool enable=true)</argsstring>
        <name>EnableOffset</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Indicates whether the context should try to offset for pixel boundaries. </para>
        </briefdescription>
        <detaileddescription>
<para>This only makes sense on bitmap devices like screen. By default this is turned off. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1154" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1aab2095c1335c9b9476f73220aacd1f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGraphicsContext::DisableOffset</definition>
        <argsstring>()</argsstring>
        <name>DisableOffset</name>
        <briefdescription>
<para>Helper to determine if a 0.5 offset should be applied for the drawing operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1156" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_context_1ae6acf61cd09fd305c99692d340c93e76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxGraphicsContext::OffsetEnabled</definition>
        <argsstring>() const</argsstring>
        <name>OffsetEnabled</name>
        <briefdescription>
<para>Helper to determine if a 0.5 offset should be applied for the drawing operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="1157" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> instance is the object that is drawn upon. </para>
    </briefdescription>
    <detaileddescription>
<para>It is created by a renderer using <ref refid="classwx_graphics_renderer_1a8e9d88060d2f305050007fa0e0f1b5f5" kindref="member">wxGraphicsRenderer::CreateContext()</ref>. This can be either directly using a renderer instance, or indirectly using the static convenience <ref refid="classwx_graphics_context_1a5be9099dbe7c3ca825aa55bdcc541cf5" kindref="member">Create()</ref> functions of <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> that always delegate the task to the default renderer.</para>
<para><programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MyCanvas::OnPaint(<ref refid="classwx_paint_event" kindref="compound">wxPaintEvent</ref><sp/>&amp;event)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>paint<sp/>DC</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_paint_d_c" kindref="compound">wxPaintDC</ref><sp/>dc(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>graphics<sp/>context<sp/>from<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref><sp/>*gc<sp/>=<sp/><ref refid="classwx_graphics_context_1a5be9099dbe7c3ca825aa55bdcc541cf5" kindref="member">wxGraphicsContext::Create</ref>(<sp/>dc<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>a<sp/>path<sp/>that<sp/>contains<sp/>a<sp/>circle<sp/>and<sp/>some<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gc-&gt;<ref refid="classwx_graphics_context_1ac34d6320c2777fe2afcf8777868e37d3" kindref="member">SetPen</ref>(<sp/>*<ref refid="pen_8h_1a62930a76d6d75371553b90661f8d9d30" kindref="member">wxRED_PEN</ref><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classwx_graphics_path" kindref="compound">wxGraphicsPath</ref><sp/>path<sp/>=<sp/>gc-&gt;<ref refid="classwx_graphics_context_1acf166e67b5a0b02e418e46d39123e0ca" kindref="member">CreatePath</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.<ref refid="classwx_graphics_path_1a1dedee16234c079524b51db8e0395f68" kindref="member">AddCircle</ref>(<sp/>50.0,<sp/>50.0,<sp/>50.0<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.<ref refid="classwx_graphics_path_1a62c899479b6bd2105507317a1246978e" kindref="member">MoveToPoint</ref>(0.0,<sp/>50.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.<ref refid="classwx_graphics_path_1abd69d09ad6fe10af99a675ac79d2717a" kindref="member">AddLineToPoint</ref>(100.0,<sp/>50.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.<ref refid="classwx_graphics_path_1a62c899479b6bd2105507317a1246978e" kindref="member">MoveToPoint</ref>(50.0,<sp/>0.0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.<ref refid="classwx_graphics_path_1abd69d09ad6fe10af99a675ac79d2717a" kindref="member">AddLineToPoint</ref>(50.0,<sp/>100.0<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.<ref refid="classwx_graphics_path_1a93ee08b5acd2a2aa82dceb4bbd9cc819" kindref="member">CloseSubpath</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.<ref refid="classwx_graphics_path_1ac257fef3393f29b2705438fdc08b28a0" kindref="member">AddRectangle</ref>(25.0,<sp/>25.0,<sp/>50.0,<sp/>50.0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gc-&gt;<ref refid="classwx_graphics_context_1a4f7f8f768e84dcdf50493f0e7ef0c00a" kindref="member">StrokePath</ref>(path);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>gc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><simplesect kind="remark"><para>For some renderers (like Direct2D or Cairo) processing of drawing operations may be deferred (Direct2D render target normally builds up a batch of rendering commands but defers processing of these commands, Cairo operates on a separate surface) so to make drawing results visible you need to update the content of the context by calling <ref refid="classwx_graphics_context_1aebfbc516794756202ebfc2d4e153c9e9" kindref="member">wxGraphicsContext::Flush()</ref> or by destroying the context.</para>
</simplesect>
<heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ , \ &lt;/&gt;&lt;/&gt;</para>
<para><simplesect kind="see"><para><ref refid="classwx_graphics_renderer_1a8e9d88060d2f305050007fa0e0f1b5f5" kindref="member">wxGraphicsRenderer::CreateContext()</ref>, <ref refid="classwx_g_c_d_c" kindref="compound">wxGCDC</ref>, <ref refid="classwx_d_c" kindref="compound">wxDC</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>wxGraphicsContext</label>
        <link refid="classwx_graphics_context"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxGraphicsObject</label>
        <link refid="classwx_graphics_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>wxGraphicsContext</label>
        <link refid="classwx_graphics_context"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxGraphicsObject</label>
        <link refid="classwx_graphics_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/graphics.h" line="412" column="1" bodyfile="interface/wx/graphics.h" bodystart="413" bodyend="1161"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxGraphicsContext</scope><name>AllocExclusive</name></member>
      <member refid="classwx_graphics_context_1a14cca9fef8391d46f54259caa097ca1f" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>BeginLayer</name></member>
      <member refid="classwx_graphics_context_1aacdbd6d9f656007791cc57192d5a3d7a" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>Clip</name></member>
      <member refid="classwx_graphics_context_1a137c2acff86b0ef6d68f8dd09fd077ef" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>Clip</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxGraphicsContext</scope><name>CloneRefData</name></member>
      <member refid="classwx_graphics_context_1a27a0d32bd48956ffac1acc4b44f268e9" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>ConcatTransform</name></member>
      <member refid="classwx_graphics_context_1ae8720ba0ce3401fe236449858b7cf950" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>Create</name></member>
      <member refid="classwx_graphics_context_1a25dca87b498a8fe9fa23a702fa3a384e" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>Create</name></member>
      <member refid="classwx_graphics_context_1af544047a78a2cb0f1bb216e27ace1d0c" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>Create</name></member>
      <member refid="classwx_graphics_context_1a53bf5d1b2961d3ee31f1d73aeaa88378" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>Create</name></member>
      <member refid="classwx_graphics_context_1a9a5091dadfe615f0b26825d3389ec734" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>Create</name></member>
      <member refid="classwx_graphics_context_1a91dbb89974c189fa4b743ee7dc9ae7cf" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>Create</name></member>
      <member refid="classwx_graphics_context_1a5be9099dbe7c3ca825aa55bdcc541cf5" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>Create</name></member>
      <member refid="classwx_graphics_context_1ac53693504979f5378e24b01a3fc3deaa" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>CreateBitmap</name></member>
      <member refid="classwx_graphics_context_1aa9cac3d795e0ac80f501b2da73fa70c1" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>CreateBitmapFromImage</name></member>
      <member refid="classwx_graphics_context_1a4516ae09c39b5cf1e1f4e65761fb3a19" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>CreateBrush</name></member>
      <member refid="classwx_graphics_context_1a27be36e04ed80b0ac7aac5b657d496cd" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>CreateFont</name></member>
      <member refid="classwx_graphics_context_1ac1d467c23ea43d1a402d63b674bcd18e" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>CreateFont</name></member>
      <member refid="classwx_graphics_context_1ad74196005aaf6c1e346a52eb042a623f" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>CreateFromNative</name></member>
      <member refid="classwx_graphics_context_1a151169c27b86af5cdf505ae2531ff8e7" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>CreateFromNativeHDC</name></member>
      <member refid="classwx_graphics_context_1a538b8d96804b12f6f32d159eef03d919" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>CreateFromNativeWindow</name></member>
      <member refid="classwx_graphics_context_1aa8000f79cb2123da46b31c15246c7383" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>CreateFromUnknownDC</name></member>
      <member refid="classwx_graphics_context_1aff2163dce621092f6af618713ec29d93" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>CreateLinearGradientBrush</name></member>
      <member refid="classwx_graphics_context_1abcf38485a56abcb102ad73101e1ec1d6" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>CreateLinearGradientBrush</name></member>
      <member refid="classwx_graphics_context_1ab3a310ba7b406775758a099fb6f6db51" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>CreateMatrix</name></member>
      <member refid="classwx_graphics_context_1a299bf382fd5f22e11d9955db5574381a" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>CreateMatrix</name></member>
      <member refid="classwx_graphics_context_1acf166e67b5a0b02e418e46d39123e0ca" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>CreatePath</name></member>
      <member refid="classwx_graphics_context_1ad0fcb2f41fd517e417e9bb7ac74587a8" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>CreatePen</name></member>
      <member refid="classwx_graphics_context_1a03a0886ccc898a79e70aa55c22e6bf81" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>CreatePen</name></member>
      <member refid="classwx_graphics_context_1a8959d953dd046e0cd53e17be23e2a700" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>CreateRadialGradientBrush</name></member>
      <member refid="classwx_graphics_context_1ac6148d3bca9aa526c2acd8aeee7b8961" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>CreateRadialGradientBrush</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxGraphicsContext</scope><name>CreateRefData</name></member>
      <member refid="classwx_graphics_context_1ab20045381f093685cf8cb115c27b2c0c" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>CreateSubBitmap</name></member>
      <member refid="classwx_graphics_context_1aab2095c1335c9b9476f73220aacd1f0e" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>DisableOffset</name></member>
      <member refid="classwx_graphics_context_1aee61e2fbc580d7f6a344daa1d1e13296" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>DrawBitmap</name></member>
      <member refid="classwx_graphics_context_1abe877acef8a07c423e68dd7844ec255c" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>DrawBitmap</name></member>
      <member refid="classwx_graphics_context_1a8c02b7104bf6dca1bef3f37e012008ab" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>DrawEllipse</name></member>
      <member refid="classwx_graphics_context_1a4f512c4bc3b646b983b74387c0ccc6e5" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>DrawIcon</name></member>
      <member refid="classwx_graphics_context_1a9f2ff291f576a5b6aa59f088598d7cdb" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>DrawLines</name></member>
      <member refid="classwx_graphics_context_1aafc07428a486bd6a1daf4853389c2e81" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>DrawPath</name></member>
      <member refid="classwx_graphics_context_1a300ea068aecf0b7c96546f8d084534cd" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>DrawRectangle</name></member>
      <member refid="classwx_graphics_context_1a123baf346513b26823b15336ef05018e" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>DrawRoundedRectangle</name></member>
      <member refid="classwx_graphics_context_1a6fc49c0c082ea2e9f08e5546843888a9" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>DrawText</name></member>
      <member refid="classwx_graphics_context_1a4720793e4671b711299177749cda6327" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>DrawText</name></member>
      <member refid="classwx_graphics_context_1a9c20fee21f6ad25a692072d362d24909" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>DrawText</name></member>
      <member refid="classwx_graphics_context_1a37efc3d9b9d0fc69132e806ca8e0c01f" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>DrawText</name></member>
      <member refid="classwx_graphics_context_1a80d7a1215921597ef049b224708fb321" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>EnableOffset</name></member>
      <member refid="classwx_graphics_context_1a21d6014bb8529002eff2be6bcd2572f1" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>EndDoc</name></member>
      <member refid="classwx_graphics_context_1a5135c2f7c70eab04fe68532ccf3d6f95" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>EndLayer</name></member>
      <member refid="classwx_graphics_context_1a33b54026827258d12aa9a7c64a69464e" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>EndPage</name></member>
      <member refid="classwx_graphics_context_1a225c90d767a6c26989d85ac8463d029f" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>FillPath</name></member>
      <member refid="classwx_graphics_context_1aebfbc516794756202ebfc2d4e153c9e9" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>Flush</name></member>
      <member refid="classwx_graphics_context_1a4e15e27f5c8f4489571d1677e54d314d" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>GetAntialiasMode</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>GetClassInfo</name></member>
      <member refid="classwx_graphics_context_1a25eac8ed5203b7b696a42982a6c31aae" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>GetClipBox</name></member>
      <member refid="classwx_graphics_context_1a900cd213e1e5101bc9f2114855714738" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>GetCompositionMode</name></member>
      <member refid="classwx_graphics_context_1afbc39e0316871a429748b0567ed92112" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>GetDPI</name></member>
      <member refid="classwx_graphics_context_1ac9c0e729ede66c3550850d724fc74b6c" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>GetInterpolationQuality</name></member>
      <member refid="classwx_graphics_context_1a530df82b84aa33456bf5d24990a2e031" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>GetNativeContext</name></member>
      <member refid="classwx_graphics_context_1a833d7b036804e46cd2f1fd7bacb1db62" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>GetPartialTextExtents</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>GetRefData</name></member>
      <member refid="classwx_graphics_object_1a0c39cbf592f20ac90b3718d399210e1e" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>GetRenderer</name></member>
      <member refid="classwx_graphics_context_1a018be4882b4a89f5a3dc33debb4337af" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>GetSize</name></member>
      <member refid="classwx_graphics_context_1a32afcb5c7ed4d75d473c47c5b567198a" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>GetTextExtent</name></member>
      <member refid="classwx_graphics_context_1af9352912c014c93414f99d39761f5682" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>GetTransform</name></member>
      <member refid="classwx_graphics_context_1a1cad810a6544ed6c624a145c61061c10" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>GetWindow</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>IsKindOf</name></member>
      <member refid="classwx_graphics_object_1a217fe7a511a2a20f4a39089329e5b6e5" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>IsNull</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxGraphicsContext</scope><name>m_refData</name></member>
      <member refid="classwx_graphics_context_1ae6acf61cd09fd305c99692d340c93e76" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>OffsetEnabled</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>operator new</name></member>
      <member refid="classwx_graphics_context_1a396b928674376f503aa3b2959e39c473" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>PopState</name></member>
      <member refid="classwx_graphics_context_1af2548831583e900dd74462c7d58fec47" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>PushState</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>Ref</name></member>
      <member refid="classwx_graphics_context_1a41edbc852f1f3a1393059e44e29d500d" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>ResetClip</name></member>
      <member refid="classwx_graphics_context_1affca88cad88a2d8a7612ab9e50e4da70" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>Rotate</name></member>
      <member refid="classwx_graphics_context_1a4b890911d4798cbda7bf80f2076e9bf1" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>Scale</name></member>
      <member refid="classwx_graphics_context_1a51e968476c72d3d77424cb8e11a14d65" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>SetAntialiasMode</name></member>
      <member refid="classwx_graphics_context_1a622c7f2349d0df34482f47983e2de2fd" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>SetBrush</name></member>
      <member refid="classwx_graphics_context_1ae7f43bd73c7212db2763c1a0535adb84" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>SetBrush</name></member>
      <member refid="classwx_graphics_context_1a08a80e457f7bb28d0394c248de1742ef" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>SetCompositionMode</name></member>
      <member refid="classwx_graphics_context_1a8a1756278f0a3f7125280ac1aeedd135" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>SetFont</name></member>
      <member refid="classwx_graphics_context_1adcd4539f8db8200d9ddc47385a142328" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>SetFont</name></member>
      <member refid="classwx_graphics_context_1af6ecb449cb732632a8d9b5c285d01b91" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>SetInterpolationQuality</name></member>
      <member refid="classwx_graphics_context_1ac34d6320c2777fe2afcf8777868e37d3" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>SetPen</name></member>
      <member refid="classwx_graphics_context_1acc15194eea4192f622d560bd33233cee" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>SetPen</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>SetRefData</name></member>
      <member refid="classwx_graphics_context_1a1d3eb969a3973525523b2e7fadb59f51" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>SetTransform</name></member>
      <member refid="classwx_graphics_context_1ae63c8f7649b2b3df71b5e4bc867f4186" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>ShouldOffset</name></member>
      <member refid="classwx_graphics_context_1aafa1fe3a6e692dde741505e0bf1c90c8" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>StartDoc</name></member>
      <member refid="classwx_graphics_context_1ab7c6ecebaf95556f90527437299193c6" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>StartPage</name></member>
      <member refid="classwx_graphics_context_1a871e2e9ed868df0b1acbbfd4822479a2" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>StrokeLine</name></member>
      <member refid="classwx_graphics_context_1acfb6d98806247a5d06b5b2f5f57972ac" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>StrokeLines</name></member>
      <member refid="classwx_graphics_context_1a08055b131515a6fb39868ad7c2bf25fd" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>StrokeLines</name></member>
      <member refid="classwx_graphics_context_1a4f7f8f768e84dcdf50493f0e7ef0c00a" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>StrokePath</name></member>
      <member refid="classwx_graphics_context_1a3fcc8a79248f192c637ff89466939916" prot="public" virt="pure-virtual"><scope>wxGraphicsContext</scope><name>Translate</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxGraphicsContext</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxGraphicsContext</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
