<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_safe_array_3_01var_type_01_4" kind="class" language="C++" prot="public">
    <compoundname>wxSafeArray&lt; varType &gt;</compoundname>
    <includes local="no">wx/msw/ole/safearray.h</includes>
    <templateparamlist>
      <param>
        <type>VARTYPE</type>
        <declname>varType</declname>
        <defname>varType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a7e93e4a4b46a2e6de6c8a0fb33eba953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSafeArray&lt; varType &gt;::wxSafeArray</definition>
        <argsstring>()</argsstring>
        <name>wxSafeArray</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::wxSafeArray</qualifiedname>
        <briefdescription>
<para>The default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a03f512eab5a90bb6535ed94e33b7aa7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSafeArray&lt; varType &gt;::~wxSafeArray</definition>
        <argsstring>()</argsstring>
        <name>~wxSafeArray</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::~wxSafeArray</qualifiedname>
        <briefdescription>
<para>The destructor unlocks and destroys the owned <computeroutput>SAFEARRAY</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="45" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a41ec0271c171ff259a4ed308b23e8eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::Create</definition>
        <argsstring>(size_t count)</argsstring>
        <name>Create</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::Create</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Creates and locks a zero-based one-dimensional <computeroutput>SAFEARRAY</computeroutput> with the given number of elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="51" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a72140b2c0c640b131b58793ebb053164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::Create</definition>
        <argsstring>(SAFEARRAYBOUND *bound, size_t dimensions)</argsstring>
        <name>Create</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::Create</qualifiedname>
        <param>
          <type>SAFEARRAYBOUND *</type>
          <declname>bound</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dimensions</declname>
        </param>
        <briefdescription>
<para>Creates and locks a <computeroutput>SAFEARRAY</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>See <computeroutput>SafeArrayCreate()</computeroutput> in MSDN documentation for more information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="58" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1afee5f9cc52dbc6c007946d7ac2abceb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::CreateFromListVariant</definition>
        <argsstring>(const wxVariant &amp;variant)</argsstring>
        <name>CreateFromListVariant</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::CreateFromListVariant</qualifiedname>
        <param>
          <type>const <ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
<para>Creates a zero-based one-dimensional <computeroutput>SAFEARRAY</computeroutput> from <ref refid="classwx_variant" kindref="compound">wxVariant</ref> with the list type. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be called only for wxSafeArray&lt;<computeroutput>VT_VARIANT&gt;</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="66" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a694049bf478856b4c43c356299f796b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::CreateFromArrayString</definition>
        <argsstring>(const wxArrayString &amp;strings)</argsstring>
        <name>CreateFromArrayString</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::CreateFromArrayString</qualifiedname>
        <param>
          <type>const <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref> &amp;</type>
          <declname>strings</declname>
        </param>
        <briefdescription>
<para>Creates a zero-based one-dimensional <computeroutput>SAFEARRAY</computeroutput> from <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be called only for wxSafeArray&lt;<computeroutput>VT_BSTR&gt;</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="73" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1adac18a0ea292b8b3c54aed9cf28924d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::Attach</definition>
        <argsstring>(SAFEARRAY *array)</argsstring>
        <name>Attach</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::Attach</qualifiedname>
        <param>
          <type>SAFEARRAY *</type>
          <declname>array</declname>
        </param>
        <briefdescription>
<para>Attaches and locks an existing <computeroutput>SAFEARRAY</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The array must have the same <computeroutput>VARTYPE</computeroutput> as this wxSafeArray was instantiated with. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="81" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a88a2c2e6edfe5c23de785f51d7bb0bd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SAFEARRAY *</type>
        <definition>SAFEARRAY * wxSafeArray&lt; varType &gt;::Detach</definition>
        <argsstring>()</argsstring>
        <name>Detach</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::Detach</qualifiedname>
        <briefdescription>
<para>Unlocks the owned <computeroutput>SAFEARRAY</computeroutput>, returns it and gives up its ownership. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="86" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a6a2ead587814de3db97d606618e6b754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSafeArray&lt; varType &gt;::Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::Destroy</qualifiedname>
        <briefdescription>
<para>Unlocks and destroys the owned <computeroutput>SAFEARRAY</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="91" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1abbb48b08c1c5ce49b5d2149aad62dccc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::HasArray</definition>
        <argsstring>() const</argsstring>
        <name>HasArray</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::HasArray</qualifiedname>
        <briefdescription>
<para>Returns true if it has a valid <computeroutput>SAFEARRAY</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="96" column="10" bodyfile="interface/wx/msw/ole/safearray.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a1b59367de1244801c0e4601d9eab285b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxSafeArray&lt; varType &gt;::GetDim</definition>
        <argsstring>() const</argsstring>
        <name>GetDim</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::GetDim</qualifiedname>
        <briefdescription>
<para>Returns the number of dimensions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="101" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1ac9cf4ca71810ce3622fc8f7057dc10f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::GetLBound</definition>
        <argsstring>(size_t dim, long &amp;bound) const</argsstring>
        <name>GetLBound</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::GetLBound</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>bound</declname>
        </param>
        <briefdescription>
<para>Returns lower bound for dimension <emphasis>dim</emphasis> in <emphasis>bound</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Dimensions start at <computeroutput>1</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1ade1ff559375f40292aab0fd8a1ee446a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::GetUBound</definition>
        <argsstring>(size_t dim, long &amp;bound) const</argsstring>
        <name>GetUBound</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::GetUBound</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>bound</declname>
        </param>
        <briefdescription>
<para>Returns upper bound for dimension <emphasis>dim</emphasis> in <emphasis>bound</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Dimensions start at <computeroutput>1</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="115" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a0b0fc0ca18727fcb12d5796133a1dee1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxSafeArray&lt; varType &gt;::GetCount</definition>
        <argsstring>(size_t dim) const</argsstring>
        <name>GetCount</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::GetCount</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Returns element count for dimension <emphasis>dim</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Dimensions start at <computeroutput>1</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="120" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1ae0e22e41caf3e910355e692d2d503c14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::SetElement</definition>
        <argsstring>(long *indices, const externT &amp;element)</argsstring>
        <name>SetElement</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::SetElement</qualifiedname>
        <param>
          <type>long *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const externT &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Change the value of the specified element. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>indices</emphasis> have the same row-column order as <computeroutput>rgIndices</computeroutput> i <computeroutput>SafeArrayPutElement()</computeroutput>, i.e., the right-most dimension is <computeroutput>rgIndices[0]</computeroutput> and the left-most dimension is stored at <computeroutput>rgIndices[</computeroutput><ref refid="classwx_safe_array_3_01var_type_01_4_1a1b59367de1244801c0e4601d9eab285b" kindref="member">GetDim()</ref><computeroutput> – 1]</computeroutput>.</para>
<para><emphasis>element</emphasis> must be of type matching <computeroutput>varType</computeroutput> this wxSafeArray was created with. For example, <ref refid="classwx_string" kindref="compound">wxString</ref> for wxSafeArray&lt;<computeroutput>VT_BSTR&gt;</computeroutput>, <ref refid="classwx_variant" kindref="compound">wxVariant</ref> for wxSafeArray&lt;<computeroutput>VT_VARIANT&gt;</computeroutput>, or <computeroutput>double</computeroutput> for wxSafeArray&lt;<computeroutput>VT_R8&gt;</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="135" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a25b6aa274e6caea7b5b3545378dae370" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::GetElement</definition>
        <argsstring>(long *indices, externT &amp;element) const</argsstring>
        <name>GetElement</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::GetElement</qualifiedname>
        <param>
          <type>long *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>externT &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Retrieve the value of the specified element. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>indices</emphasis> have the same row-column order as <computeroutput>rgIndices</computeroutput> in <computeroutput>SafeArrayGetElement()</computeroutput>, i.e., the right-most dimension is <computeroutput>rgIndices[0]</computeroutput> and the left-most dimension is stored at <computeroutput>rgIndices[</computeroutput><ref refid="classwx_safe_array_3_01var_type_01_4_1a1b59367de1244801c0e4601d9eab285b" kindref="member">GetDim()</ref><computeroutput> – 1]</computeroutput>.</para>
<para><emphasis>element</emphasis> must be of type matching <computeroutput>varType</computeroutput> this wxSafeArray was created with. For example, <ref refid="classwx_string" kindref="compound">wxString</ref> for wxSafeArray&lt;<computeroutput>VT_BSTR&gt;</computeroutput>, <ref refid="classwx_variant" kindref="compound">wxVariant</ref> for wxSafeArray&lt;<computeroutput>VT_VARIANT&gt;</computeroutput>, or <computeroutput>double</computeroutput> for wxSafeArray&lt;<computeroutput>VT_R8&gt;</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="150" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a6347d01f0d23b52ec0717d8c12242e21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::ConvertToVariant</definition>
        <argsstring>(wxVariant &amp;variant) const</argsstring>
        <name>ConvertToVariant</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::ConvertToVariant</qualifiedname>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
<para>Converts the array to a <ref refid="classwx_variant" kindref="compound">wxVariant</ref> with the list type, regardless of the underlying <computeroutput>SAFEARRAY</computeroutput> type. </para>
        </briefdescription>
        <detaileddescription>
<para>If the array is multidimensional, it is flattened using the algorithm originally employed in wxConvertOleToVariant(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="159" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1af2607a82bce8ef51740050ae6a6cc3b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSafeArray&lt; varType &gt;::ConvertToArrayString</definition>
        <argsstring>(wxArrayString &amp;strings) const</argsstring>
        <name>ConvertToArrayString</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::ConvertToArrayString</qualifiedname>
        <param>
          <type><ref refid="classwx_array_string" kindref="compound">wxArrayString</ref> &amp;</type>
          <declname>strings</declname>
        </param>
        <briefdescription>
<para>Converts an array to <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be called only for wxSafeArray&lt;<computeroutput>VT_BSTR&gt;</computeroutput>. If the array is multidimensional, it is flattened using the algorithm originally employed in wxConvertOleToVariant(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="168" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1a76771eb7295a97eccb2af0d225d8e51a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxSafeArray&lt; varType &gt;::ConvertToVariant</definition>
        <argsstring>(SAFEARRAY *psa, wxVariant &amp;variant)</argsstring>
        <name>ConvertToVariant</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::ConvertToVariant</qualifiedname>
        <param>
          <type>SAFEARRAY *</type>
          <declname>psa</declname>
        </param>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
<para>Converts <emphasis>psa</emphasis> to <ref refid="classwx_variant" kindref="compound">wxVariant</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_safe_array_3_01var_type_01_4_1a6347d01f0d23b52ec0717d8c12242e21" kindref="member">wxSafeArray&lt;varType&gt;::ConvertToVariant(wxVariant&amp;) const</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="175" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classwx_safe_array_3_01var_type_01_4_1ad421568c16fd88a5d3b7b9991c658d2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxSafeArray&lt; varType &gt;::ConvertToArrayString</definition>
        <argsstring>(SAFEARRAY *psa, wxArrayString &amp;strings)</argsstring>
        <name>ConvertToArrayString</name>
        <qualifiedname>wxSafeArray&lt; varType &gt;::ConvertToArrayString</qualifiedname>
        <param>
          <type>SAFEARRAY *</type>
          <declname>psa</declname>
        </param>
        <param>
          <type><ref refid="classwx_array_string" kindref="compound">wxArrayString</ref> &amp;</type>
          <declname>strings</declname>
        </param>
        <briefdescription>
<para>Converts <emphasis>psa</emphasis> to <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_safe_array_3_01var_type_01_4_1af2607a82bce8ef51740050ae6a6cc3b2" kindref="member">wxSafeArray&lt;varType&gt;::ConvertToArrayString(wxArrayString&amp;) const</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/msw/ole/safearray.h" line="183" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_safe_array_3_01var_type_01_4" kindref="compound">wxSafeArray&lt;varType&gt;</ref> is wxWidgets wrapper for working with MS Windows <computeroutput>SAFEARRAY</computeroutput> used in Component Object Model (COM) and OLE Automation APIs. </para>
    </briefdescription>
    <detaileddescription>
<para>It also has convenience functions for converting between <computeroutput>SAFEARRAY</computeroutput> and <ref refid="classwx_variant" kindref="compound">wxVariant</ref> with list type or <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref>.</para>
<para>wxSafeArray is a template class which must be created with an appropriate type matching the underlying <computeroutput>VARIANT</computeroutput> type (such as <computeroutput>VT_VARIANT</computeroutput> or <computeroutput>VT_BSTR</computeroutput>).</para>
<para>See <ref refid="classwx_variant_data_safe_array" kindref="compound">wxVariantDataSafeArray</ref> documentation for examples of using it.</para>
<para>Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref> port.  <onlyfor>wxmsw</onlyfor>  <simplesect kind="since"><para>3.0</para>
</simplesect>
<heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__data" kindref="compound">Data Structures</ref></para>
<para><simplesect kind="see"><para><ref refid="classwx_automation_object" kindref="compound">wxAutomationObject</ref>, <ref refid="classwx_variant_data_safe_array" kindref="compound">wxVariantDataSafeArray</ref>, <ref refid="classwx_variant" kindref="compound">wxVariant</ref> <linebreak/>
 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="interface/wx/msw/ole/safearray.h" line="33" column="1" bodyfile="interface/wx/msw/ole/safearray.h" bodystart="34" bodyend="184"/>
    <listofallmembers>
      <member refid="classwx_safe_array_3_01var_type_01_4_1adac18a0ea292b8b3c54aed9cf28924d1" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>Attach</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1af2607a82bce8ef51740050ae6a6cc3b2" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>ConvertToArrayString</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1ad421568c16fd88a5d3b7b9991c658d2a" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>ConvertToArrayString</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a6347d01f0d23b52ec0717d8c12242e21" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>ConvertToVariant</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a76771eb7295a97eccb2af0d225d8e51a" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>ConvertToVariant</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a41ec0271c171ff259a4ed308b23e8eb5" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>Create</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a72140b2c0c640b131b58793ebb053164" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>Create</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a694049bf478856b4c43c356299f796b8" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>CreateFromArrayString</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1afee5f9cc52dbc6c007946d7ac2abceb7" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>CreateFromListVariant</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a6a2ead587814de3db97d606618e6b754" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>Destroy</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a88a2c2e6edfe5c23de785f51d7bb0bd7" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>Detach</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a0b0fc0ca18727fcb12d5796133a1dee1" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>GetCount</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a1b59367de1244801c0e4601d9eab285b" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>GetDim</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a25b6aa274e6caea7b5b3545378dae370" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>GetElement</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1ac9cf4ca71810ce3622fc8f7057dc10f5" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>GetLBound</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1ade1ff559375f40292aab0fd8a1ee446a" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>GetUBound</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1abbb48b08c1c5ce49b5d2149aad62dccc" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>HasArray</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1ae0e22e41caf3e910355e692d2d503c14" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>SetElement</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a7e93e4a4b46a2e6de6c8a0fb33eba953" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>wxSafeArray</name></member>
      <member refid="classwx_safe_array_3_01var_type_01_4_1a03f512eab5a90bb6535ed94e33b7aa7b" prot="public" virt="non-virtual"><scope>wxSafeArray&lt; varType &gt;</scope><name>~wxSafeArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
