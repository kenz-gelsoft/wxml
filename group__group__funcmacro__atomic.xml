<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="group__group__funcmacro__atomic" kind="group">
    <compoundname>group_funcmacro_atomic</compoundname>
    <title>Atomic Operations</title>
    <briefdescription>
<para>When using multi-threaded applications, it is often required to access or modify memory which is shared between threads. </para>
    </briefdescription>
    <detaileddescription>
<para>Atomic integer and pointer operations are an efficient way to handle this issue (another, less efficient, way is to use a <ref refid="classwx_mutex" kindref="compound">wxMutex</ref> or <ref refid="classwx_critical_section" kindref="compound">wxCriticalSection</ref>). A native implementation exists for Windows, Linux, Solaris and macOS; for others, a <ref refid="classwx_critical_section" kindref="compound">wxCriticalSection</ref> is used to protect the data.</para>
<para>One particular application is reference counting (used by so-called <ref refid="group__group__class__smartpointers" kindref="compound">smart pointers</ref>).</para>
<para>You should define your variable with the type wxAtomicInt in order to apply atomic operations to it. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
