<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_data_view_event" kind="class" language="C++" prot="public">
    <compoundname>wxDataViewEvent</compoundname>
    <basecompoundref refid="classwx_notify_event" prot="public" virt="non-virtual">wxNotifyEvent</basecompoundref>
    <includes local="no">wx/dataview.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_data_view_event_1ae6dde6781192716c6c7ee9f828a2a99d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxDataViewEvent::wxDataViewEvent</definition>
        <argsstring>()</argsstring>
        <name>wxDataViewEvent</name>
        <qualifiedname>wxDataViewEvent::wxDataViewEvent</qualifiedname>
        <briefdescription>
<para>Default ctor, normally shouldn&apos;t be used and mostly exists only for backwards compatibility. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3845" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1abf6739efcab874b513021300518af72a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxDataViewEvent::wxDataViewEvent</definition>
        <argsstring>(wxEventType evtType, wxDataViewCtrl *dvc, wxDataViewColumn *column, const wxDataViewItem &amp;item=wxDataViewItem())</argsstring>
        <name>wxDataViewEvent</name>
        <qualifiedname>wxDataViewEvent::wxDataViewEvent</qualifiedname>
        <param>
          <type><ref refid="event_8h_1a6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
          <declname>evtType</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> *</type>
          <declname>dvc</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
          <defval><ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref>()</defval>
        </param>
        <briefdescription>
<para>Constructor for the events affecting columns (and possibly also items). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3850" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1acfbe14152c921a9b6d383d625c33cfe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxDataViewEvent::wxDataViewEvent</definition>
        <argsstring>(wxEventType evtType, wxDataViewCtrl *dvc, const wxDataViewItem &amp;item)</argsstring>
        <name>wxDataViewEvent</name>
        <qualifiedname>wxDataViewEvent::wxDataViewEvent</qualifiedname>
        <param>
          <type><ref refid="event_8h_1a6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
          <declname>evtType</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> *</type>
          <declname>dvc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Constructor for the events affecting only the items. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3858" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a5960c6568e8407e54958e7492859ff68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxDataViewEvent::wxDataViewEvent</definition>
        <argsstring>(const wxDataViewEvent &amp;event)</argsstring>
        <name>wxDataViewEvent</name>
        <qualifiedname>wxDataViewEvent::wxDataViewEvent</qualifiedname>
        <param>
          <type>const <ref refid="classwx_data_view_event" kindref="compound">wxDataViewEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3865" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a07dcab4a49143f60ea5fb47de30b57ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxDataViewEvent::GetColumn</definition>
        <argsstring>() const</argsstring>
        <name>GetColumn</name>
        <qualifiedname>wxDataViewEvent::GetColumn</qualifiedname>
        <briefdescription>
<para>Returns the position of the column in the control or -1 if column field is unavailable for this event. </para>
        </briefdescription>
        <detaileddescription>
<para>For wxEVT_DATAVIEW_COLUMN_REORDERED, this is the new position of the column. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3874" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a1bbb9ce4bd2c7bff2c630e5988a38ffe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn * wxDataViewEvent::GetDataViewColumn</definition>
        <argsstring>() const</argsstring>
        <name>GetDataViewColumn</name>
        <qualifiedname>wxDataViewEvent::GetDataViewColumn</qualifiedname>
        <briefdescription>
<para>Returns a pointer to the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> from which the event was emitted or NULL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3880" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a6c6bb8ff9e302e033fc0076df01a7c68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *</type>
        <definition>wxDataViewModel * wxDataViewEvent::GetModel</definition>
        <argsstring>() const</argsstring>
        <name>GetModel</name>
        <qualifiedname>wxDataViewEvent::GetModel</qualifiedname>
        <briefdescription>
<para>Returns the <ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> associated with the event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3885" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a35617fabfda2023d8d98cd3d0341c676" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxDataViewEvent::GetPosition</definition>
        <argsstring>() const</argsstring>
        <name>GetPosition</name>
        <qualifiedname>wxDataViewEvent::GetPosition</qualifiedname>
        <briefdescription>
<para>Returns the position of a context menu event in client coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3890" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a7c602b1a090995122e73793f7291af61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
        <definition>const wxVariant &amp; wxDataViewEvent::GetValue</definition>
        <argsstring>() const</argsstring>
        <name>GetValue</name>
        <qualifiedname>wxDataViewEvent::GetValue</qualifiedname>
        <briefdescription>
<para>Returns a reference to a value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3895" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a983e5e639898a36da0d8e5092cee4654" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDataViewEvent::IsEditCancelled</definition>
        <argsstring>() const</argsstring>
        <name>IsEditCancelled</name>
        <qualifiedname>wxDataViewEvent::IsEditCancelled</qualifiedname>
        <briefdescription>
<para>Can be used to determine whether the new value is going to be accepted in wxEVT_DATAVIEW_ITEM_EDITING_DONE handler. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if editing the item was cancelled or if the user tried to enter an invalid value (refused by <ref refid="classwx_data_view_renderer_1a64c9df3410623498956ce5ed7524a9cf" kindref="member">wxDataViewRenderer::Validate()</ref>). If this method returns false, it means that the value in the model is about to be changed to the new one.</para>
<para>Notice that wxEVT_DATAVIEW_ITEM_EDITING_DONE event handler can call <ref refid="classwx_notify_event_1a49e4502414a11e273f51a34a21d2acd3" kindref="member">wxNotifyEvent::Veto()</ref> to prevent this from happening.</para>
<para>Currently support for setting this field and for vetoing the change is only available in the generic version of <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref>, i.e. under MSW but not GTK nor macOS.</para>
<para><simplesect kind="since"><para>2.9.3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3915" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a66a231dc80ba6c36840251fef78294c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetColumn</definition>
        <argsstring>(int col)</argsstring>
        <name>SetColumn</name>
        <qualifiedname>wxDataViewEvent::SetColumn</qualifiedname>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Sets the column index associated with this event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3920" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a66fb568e9dd899f5becde2d9ef88138b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetDataViewColumn</definition>
        <argsstring>(wxDataViewColumn *col)</argsstring>
        <name>SetDataViewColumn</name>
        <qualifiedname>wxDataViewEvent::SetDataViewColumn</qualifiedname>
        <param>
          <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>For <computeroutput>wxEVT_DATAVIEW_COLUMN_HEADER_CLICK</computeroutput> only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3925" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1aa2ccb0d75d49a8fefa40a8fcbd7876a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetModel</definition>
        <argsstring>(wxDataViewModel *model)</argsstring>
        <name>SetModel</name>
        <qualifiedname>wxDataViewEvent::SetModel</qualifiedname>
        <param>
          <type><ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Sets the dataview model associated with this event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3930" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a59db8632419879f0e51d94b32b5ff914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetValue</definition>
        <argsstring>(const wxVariant &amp;value)</argsstring>
        <name>SetValue</name>
        <qualifiedname>wxDataViewEvent::SetValue</qualifiedname>
        <param>
          <type>const <ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the value associated with this event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3935" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1ac56a99bcd34d37972addb6023966fef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetDataObject</definition>
        <argsstring>(wxDataObject *obj)</argsstring>
        <name>SetDataObject</name>
        <qualifiedname>wxDataViewEvent::SetDataObject</qualifiedname>
        <param>
          <type><ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> for data transfer within a drag operation. </para>
        </briefdescription>
        <detaileddescription>
<para>This method must be used inside a <computeroutput>wxEVT_DATAVIEW_ITEM_BEGIN_DRAG</computeroutput> handler to associate the data object to be dragged with the item.</para>
<para>Note that the control takes ownership of the data object, i.e. <emphasis>obj</emphasis> must be heap-allocated and will be deleted by <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> itself. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3946" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a4f08c15b0dee5c9fb9a87550f9f219bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref></type>
        <definition>wxDataFormat wxDataViewEvent::GetDataFormat</definition>
        <argsstring>() const</argsstring>
        <name>GetDataFormat</name>
        <qualifiedname>wxDataViewEvent::GetDataFormat</qualifiedname>
        <briefdescription>
<para>Gets the <ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> during a drop operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3951" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a88d0fc8c1812b355ca2da89d38a74b9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxDataViewEvent::GetDataSize</definition>
        <argsstring>() const</argsstring>
        <name>GetDataSize</name>
        <qualifiedname>wxDataViewEvent::GetDataSize</qualifiedname>
        <briefdescription>
<para>Gets the data size for a drop data transfer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3956" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a98185d62a47a62b7a86f04247ce5c183" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * wxDataViewEvent::GetDataBuffer</definition>
        <argsstring>() const</argsstring>
        <name>GetDataBuffer</name>
        <qualifiedname>wxDataViewEvent::GetDataBuffer</qualifiedname>
        <briefdescription>
<para>Gets the data buffer for a drop data transfer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3961" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1aacb625c96175bf8f53411033237f4439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetDragFlags</definition>
        <argsstring>(int flags)</argsstring>
        <name>SetDragFlags</name>
        <qualifiedname>wxDataViewEvent::SetDragFlags</qualifiedname>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Specify the kind of the drag operation to perform. </para>
        </briefdescription>
        <detaileddescription>
<para>This method can be used inside a <computeroutput>wxEVT_DATAVIEW_ITEM_BEGIN_DRAG</computeroutput> handler in order to configure the drag operation. Valid values are <ref refid="interface_2wx_2dnd_8h_1a05589fbab0657f08285ebdfe93f5ec9ea97a0902f009ddd6c58eab2e6f5cff100" kindref="member">wxDrag_CopyOnly</ref> (default), <ref refid="interface_2wx_2dnd_8h_1a05589fbab0657f08285ebdfe93f5ec9ea1557b04adc6f4e8f5cc70e615878f268" kindref="member">wxDrag_AllowMove</ref> (allow the data to be moved) and <ref refid="interface_2wx_2dnd_8h_1a05589fbab0657f08285ebdfe93f5ec9eae68db1f805abe2bc979adde62d3953ed" kindref="member">wxDrag_DefaultMove</ref>.</para>
<para>Currently it is only honoured by the generic version of <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> (used e.g. under MSW) and not supported by the native GTK and macOS versions.</para>
<para><simplesect kind="see"><para><ref refid="classwx_data_view_event_1a25983c5146ee17862705c6dd898c22da" kindref="member">GetDropEffect()</ref></para>
</simplesect>
<simplesect kind="since"><para>2.9.4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3979" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a25983c5146ee17862705c6dd898c22da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interface_2wx_2dnd_8h_1adbd4b292582eebbc9a6ce3dee31c2afb" kindref="member">wxDragResult</ref></type>
        <definition>wxDragResult wxDataViewEvent::GetDropEffect</definition>
        <argsstring>() const</argsstring>
        <name>GetDropEffect</name>
        <qualifiedname>wxDataViewEvent::GetDropEffect</qualifiedname>
        <briefdescription>
<para>Returns the effect the user requested to happen to the dropped data. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be used inside wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE and wxEVT_DATAVIEW_ITEM_DROP handlers and returns whether the user is trying to copy (the return value is <ref refid="interface_2wx_2dnd_8h_1adbd4b292582eebbc9a6ce3dee31c2afba736c04c59caf8154a096e0d350492fc1" kindref="member">wxDragCopy</ref>) or move (if the return value is <ref refid="interface_2wx_2dnd_8h_1adbd4b292582eebbc9a6ce3dee31c2afba8b2ba916ca49cc93ef34a5e20684d18e" kindref="member">wxDragMove</ref>) the data.</para>
<para>Currently this is only available when using the generic version of <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> (used e.g. under MSW) and always returns <ref refid="interface_2wx_2dnd_8h_1adbd4b292582eebbc9a6ce3dee31c2afba8324e9ee208c50276f8c2cad7d3fd548" kindref="member">wxDragNone</ref> in the GTK and macOS native versions.</para>
<para><simplesect kind="since"><para>2.9.4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="3996" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a78130d7932802cb84c9274df4ad271e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxDataViewEvent::GetCacheFrom</definition>
        <argsstring>() const</argsstring>
        <name>GetCacheFrom</name>
        <qualifiedname>wxDataViewEvent::GetCacheFrom</qualifiedname>
        <briefdescription>
<para>Return the first row that will be displayed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4001" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a16bba58249dd10ec00336cfdf6b5272c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxDataViewEvent::GetCacheTo</definition>
        <argsstring>() const</argsstring>
        <name>GetCacheTo</name>
        <qualifiedname>wxDataViewEvent::GetCacheTo</qualifiedname>
        <briefdescription>
<para>Return the last row that will be displayed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4006" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a32a80304830c692d687d0c2eaa229246" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxDataViewEvent::GetProposedDropIndex</definition>
        <argsstring>() const</argsstring>
        <name>GetProposedDropIndex</name>
        <qualifiedname>wxDataViewEvent::GetProposedDropIndex</qualifiedname>
        <briefdescription>
<para>Returns the index of the child item at which an item currently being dragged would be dropped. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be used from wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE handlers to determine the exact position of the item being dropped.</para>
<para>Note that it currently always returns wxNOT_FOUND when using native GTK implementation of this control.</para>
<para><simplesect kind="since"><para>3.1.2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4020" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a12b6930d73aba4a8ba51ef6b1c09b84d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref></type>
        <definition>wxDataViewItem wxDataViewEvent::GetItem</definition>
        <argsstring>() const</argsstring>
        <name>GetItem</name>
        <qualifiedname>wxDataViewEvent::GetItem</qualifiedname>
        <briefdescription>
<para>Returns the item affected by the event. </para>
        </briefdescription>
        <detaileddescription>
<para>Notice that for <computeroutput>wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE</computeroutput> and <computeroutput>wxEVT_DATAVIEW_ITEM_DROP</computeroutput> event handlers, the item may be invalid, indicating that the drop is about to happen outside of the item area. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4029" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a2097e4de5879d86390ce8e99e2e5429b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetItem</definition>
        <argsstring>(const wxDataViewItem &amp;item)</argsstring>
        <name>SetItem</name>
        <qualifiedname>wxDataViewEvent::SetItem</qualifiedname>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4031" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1ab4ab7451fa21a879330110fa96107ab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetPosition</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>SetPosition</name>
        <qualifiedname>wxDataViewEvent::SetPosition</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4032" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a293ba83b240dbfb5d6ed78aada6792ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetCache</definition>
        <argsstring>(int from, int to)</argsstring>
        <name>SetCache</name>
        <qualifiedname>wxDataViewEvent::SetCache</qualifiedname>
        <param>
          <type>int</type>
          <declname>from</declname>
        </param>
        <param>
          <type>int</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4033" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a2fbee2bb8348b837079d60ccd989add8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> *</type>
        <definition>wxDataObject * wxDataViewEvent::GetDataObject</definition>
        <argsstring>() const</argsstring>
        <name>GetDataObject</name>
        <qualifiedname>wxDataViewEvent::GetDataObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4034" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a67f5b5297c0f414d24831e9c8605f6ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetDataFormat</definition>
        <argsstring>(const wxDataFormat &amp;format)</argsstring>
        <name>SetDataFormat</name>
        <qualifiedname>wxDataViewEvent::SetDataFormat</qualifiedname>
        <param>
          <type>const <ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4035" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a9c5bb283557e59ae23a1956bbb7216d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetDataSize</definition>
        <argsstring>(size_t size)</argsstring>
        <name>SetDataSize</name>
        <qualifiedname>wxDataViewEvent::SetDataSize</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4036" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a467b5a7586cab95f2bbe72b3528d4cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetDataBuffer</definition>
        <argsstring>(void *buf)</argsstring>
        <name>SetDataBuffer</name>
        <qualifiedname>wxDataViewEvent::SetDataBuffer</qualifiedname>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4037" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1ab4cf76370aa83e6f79c4b7313570749b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxDataViewEvent::GetDragFlags</definition>
        <argsstring>() const</argsstring>
        <name>GetDragFlags</name>
        <qualifiedname>wxDataViewEvent::GetDragFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4038" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_event_1a9f212935a993507e4e8884f7135fbb3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewEvent::SetDropEffect</definition>
        <argsstring>(wxDragResult effect)</argsstring>
        <name>SetDropEffect</name>
        <qualifiedname>wxDataViewEvent::SetDropEffect</qualifiedname>
        <param>
          <type><ref refid="interface_2wx_2dnd_8h_1adbd4b292582eebbc9a6ce3dee31c2afb" kindref="member">wxDragResult</ref></type>
          <declname>effect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="4039" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is the event class for the <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> notifications. </para>
    </briefdescription>
    <detaileddescription>
<para><heading level="2">Events using this class</heading>
</para>
<para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_data_view_event" kindref="compound">wxDataViewEvent</ref>&amp;<nonbreakablespace/>event)</para>
<para>Event macros: <itemizedlist>
<listitem><para>EVT_DATAVIEW_SELECTION_CHANGED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_SELECTION_CHANGED</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_ACTIVATED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_ACTIVATED</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_EDITING_STARTED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_EDITING_STARTED</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_EDITING_DONE(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_EDITING_DONE</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_COLLAPSING(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_COLLAPSING</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_COLLAPSED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_COLLAPSED</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_EXPANDING(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_EXPANDING</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_EXPANDED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_EXPANDED</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_VALUE_CHANGED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_VALUE_CHANGED</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_CONTEXT_MENU(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_CONTEXT_MENU</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_COLUMN_HEADER_CLICK(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_COLUMN_HEADER_CLICK</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_COLUMN_HEADER_RIGHT_CLICK(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_COLUMN_HEADER_RIGHT_CLICK</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_COLUMN_SORTED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_COLUMN_SORTED</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_COLUMN_REORDERED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_COLUMN_REORDERED</computeroutput> event. Currently this event is not generated when using the native GTK+ version of the control. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_BEGIN_DRAG(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_BEGIN_DRAG</computeroutput> event which is generated when the user starts dragging a valid item. This event must be processed and <ref refid="classwx_data_view_event_1ac56a99bcd34d37972addb6023966fef8" kindref="member">wxDataViewEvent::SetDataObject()</ref> must be called to actually start dragging the item. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_DROP_POSSIBLE(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_ITEM_DROP(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_DROP</computeroutput> event. </para>
</listitem>
<listitem><para>EVT_DATAVIEW_CACHE_HINT(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_CACHE_HINT</computeroutput> event. </para>
</listitem>
</itemizedlist>
<heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__events" kindref="compound">Events</ref>, <ref refid="group__group__class__dvc" kindref="compound">wxDataViewCtrl Related Classes</ref> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxDataViewEvent</label>
        <link refid="classwx_data_view_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxNotifyEvent</label>
        <link refid="classwx_notify_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxDataViewEvent</label>
        <link refid="classwx_data_view_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxNotifyEvent</label>
        <link refid="classwx_notify_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="6" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/dataview.h" line="3838" column="1" bodyfile="interface/wx/dataview.h" bodystart="3839" bodyend="4040"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxDataViewEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_notify_event_1a7b23515f827b2ce1da1e6990d9aafe80" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>Allow</name></member>
      <member refid="classwx_event_1a1458e0e59752bd8753ec20cb719e088b" prot="public" virt="pure-virtual"><scope>wxDataViewEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxDataViewEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxDataViewEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_data_view_event_1a78130d7932802cb84c9274df4ad271e4" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetCacheFrom</name></member>
      <member refid="classwx_data_view_event_1a16bba58249dd10ec00336cfdf6b5272c" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetCacheTo</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxDataViewEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_command_event_1a3d41eef5b753ff2fd0b822bd1e0c6af9" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetClientData</name></member>
      <member refid="classwx_command_event_1a48e7b34762b82cdc9d1b5d58d1e6a17f" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetClientObject</name></member>
      <member refid="classwx_data_view_event_1a07dcab4a49143f60ea5fb47de30b57ad" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetColumn</name></member>
      <member refid="classwx_data_view_event_1a98185d62a47a62b7a86f04247ce5c183" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetDataBuffer</name></member>
      <member refid="classwx_data_view_event_1a4f08c15b0dee5c9fb9a87550f9f219bf" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetDataFormat</name></member>
      <member refid="classwx_data_view_event_1a2fbee2bb8348b837079d60ccd989add8" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetDataObject</name></member>
      <member refid="classwx_data_view_event_1a88d0fc8c1812b355ca2da89d38a74b9f" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetDataSize</name></member>
      <member refid="classwx_data_view_event_1a1bbb9ce4bd2c7bff2c630e5988a38ffe" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetDataViewColumn</name></member>
      <member refid="classwx_data_view_event_1ab4cf76370aa83e6f79c4b7313570749b" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetDragFlags</name></member>
      <member refid="classwx_data_view_event_1a25983c5146ee17862705c6dd898c22da" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetDropEffect</name></member>
      <member refid="classwx_event_1ac4958ff6ec32b7f4b23066932d611131" prot="public" virt="virtual"><scope>wxDataViewEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1a1ed12f8a9b61af6a76c6746cb8acfeae" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1a01c89719ef6241a6e612a313a259c1c2" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_event_1aa46a14bdca4d0ebcd4f42e5805db1df9" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetEventUserData</name></member>
      <member refid="classwx_command_event_1abdba7c3e93f0dbf99f5382e60e7a461a" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetExtraLong</name></member>
      <member refid="classwx_event_1ac5fa5c10d4845d903e58026a42b403c7" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetId</name></member>
      <member refid="classwx_command_event_1a24ad2aab26646c762ca3092a7ffd5ccd" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetInt</name></member>
      <member refid="classwx_data_view_event_1a12b6930d73aba4a8ba51ef6b1c09b84d" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetItem</name></member>
      <member refid="classwx_data_view_event_1a6c6bb8ff9e302e033fc0076df01a7c68" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetModel</name></member>
      <member refid="classwx_data_view_event_1a35617fabfda2023d8d98cd3d0341c676" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetPosition</name></member>
      <member refid="classwx_data_view_event_1a32a80304830c692d687d0c2eaa229246" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetProposedDropIndex</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_command_event_1a93609c04b8fd7001259efb5d65645fe6" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetSelection</name></member>
      <member refid="classwx_event_1aa770dbcd0f1714ba097836af6534b4c5" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_command_event_1a6aef039e72e358840a7c20da6473e9ae" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetString</name></member>
      <member refid="classwx_event_1a48662230971127737d2500cef7be549d" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_data_view_event_1a7c602b1a090995122e73793f7291af61" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>GetValue</name></member>
      <member refid="classwx_notify_event_1a907334f4b322d93cf49304a939bba143" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>IsAllowed</name></member>
      <member refid="classwx_command_event_1a3e5510a00ebb9fb5e7bf7dc5e89f3588" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>IsChecked</name></member>
      <member refid="classwx_event_1a31f6a4377d6d36964b8eae4e56ec43e0" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_data_view_event_1a983e5e639898a36da0d8e5092cee4654" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>IsEditCancelled</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_command_event_1a44f4144f027fcb7feadb4c23bcbfeb5f" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>IsSelection</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxDataViewEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxDataViewEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_data_view_event_1a293ba83b240dbfb5d6ed78aada6792ea" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetCache</name></member>
      <member refid="classwx_command_event_1a1778d16766134e08cafcdb49b06855ce" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetClientData</name></member>
      <member refid="classwx_command_event_1a752e5a0fb8992b062c4dec6866171586" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetClientObject</name></member>
      <member refid="classwx_data_view_event_1a66a231dc80ba6c36840251fef78294c5" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetColumn</name></member>
      <member refid="classwx_data_view_event_1a467b5a7586cab95f2bbe72b3528d4cb2" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetDataBuffer</name></member>
      <member refid="classwx_data_view_event_1a67f5b5297c0f414d24831e9c8605f6ea" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetDataFormat</name></member>
      <member refid="classwx_data_view_event_1ac56a99bcd34d37972addb6023966fef8" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetDataObject</name></member>
      <member refid="classwx_data_view_event_1a9c5bb283557e59ae23a1956bbb7216d0" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetDataSize</name></member>
      <member refid="classwx_data_view_event_1a66fb568e9dd899f5becde2d9ef88138b" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetDataViewColumn</name></member>
      <member refid="classwx_data_view_event_1aacb625c96175bf8f53411033237f4439" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetDragFlags</name></member>
      <member refid="classwx_data_view_event_1a9f212935a993507e4e8884f7135fbb3c" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetDropEffect</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_command_event_1a13ac3c581b99d110bac2c6b74803d2df" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetExtraLong</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetId</name></member>
      <member refid="classwx_command_event_1aeaed91ffb1d02f07d7ea40f029f95a7c" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetInt</name></member>
      <member refid="classwx_data_view_event_1a2097e4de5879d86390ce8e99e2e5429b" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetItem</name></member>
      <member refid="classwx_data_view_event_1aa2ccb0d75d49a8fefa40a8fcbd7876a9" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetModel</name></member>
      <member refid="classwx_data_view_event_1ab4ab7451fa21a879330110fa96107ab9" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetPosition</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_command_event_1a06ca56ac6680fe3b3178d8abd913d450" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetString</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_data_view_event_1a59db8632419879f0e51d94b32b5ff914" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>SetValue</name></member>
      <member refid="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>UnShare</name></member>
      <member refid="classwx_notify_event_1a49e4502414a11e273f51a34a21d2acd3" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>Veto</name></member>
      <member refid="classwx_command_event_1aad941347872cd71fedcfc765fae7b2f7" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>wxCommandEvent</name></member>
      <member refid="classwx_data_view_event_1ae6dde6781192716c6c7ee9f828a2a99d" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>wxDataViewEvent</name></member>
      <member refid="classwx_data_view_event_1abf6739efcab874b513021300518af72a" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>wxDataViewEvent</name></member>
      <member refid="classwx_data_view_event_1acfbe14152c921a9b6d383d625c33cfe2" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>wxDataViewEvent</name></member>
      <member refid="classwx_data_view_event_1a5960c6568e8407e54958e7492859ff68" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>wxDataViewEvent</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_notify_event_1a4c97324fca04afe13beaa8a8a307ec7b" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>wxNotifyEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxDataViewEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxDataViewEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
