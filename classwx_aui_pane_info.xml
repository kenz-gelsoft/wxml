<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classwx_aui_pane_info" kind="class" language="C++" prot="public">
    <compoundname>wxAuiPaneInfo</compoundname>
    <includes local="no">wx/aui/framemanager.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classwx_aui_pane_info_1a5d1c0a19e5637b3dec0e37a43c02de9c" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxAuiPaneInfo::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>name of the pane </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="988" column="14" bodyfile="interface/wx/aui/framemanager.h" bodystart="988" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1ab93337020ef244b3ba1cee7dc998efda" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxAuiPaneInfo::caption</definition>
        <argsstring></argsstring>
        <name>caption</name>
        <briefdescription>
<para>caption displayed on the window </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="991" column="14" bodyfile="interface/wx/aui/framemanager.h" bodystart="991" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a9a0522b3a93f51ca8950d8ab34bba2b7" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref></type>
        <definition>wxBitmap wxAuiPaneInfo::icon</definition>
        <argsstring></argsstring>
        <name>icon</name>
        <briefdescription>
<para>icon of the pane, may be invalid </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="994" column="14" bodyfile="interface/wx/aui/framemanager.h" bodystart="994" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a118df7165b4f040f8fcea4637c901767" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow* wxAuiPaneInfo::window</definition>
        <argsstring></argsstring>
        <name>window</name>
        <briefdescription>
<para>window that is in this pane </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="997" column="14" bodyfile="interface/wx/aui/framemanager.h" bodystart="997" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a5987d8de7a1bd2e686823bb4ba8acaab" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_frame" kindref="compound">wxFrame</ref> *</type>
        <definition>wxFrame* wxAuiPaneInfo::frame</definition>
        <argsstring></argsstring>
        <name>frame</name>
        <briefdescription>
<para>floating frame window that holds the pane </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1000" column="13" bodyfile="interface/wx/aui/framemanager.h" bodystart="1000" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a366093a54db956c07ef5e4df9fd41a9d" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int wxAuiPaneInfo::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
<para>a combination of wxPaneState values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1003" column="18" bodyfile="interface/wx/aui/framemanager.h" bodystart="1003" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1ac7b7dd06d87127760257b861abb003eb" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int wxAuiPaneInfo::dock_direction</definition>
        <argsstring></argsstring>
        <name>dock_direction</name>
        <briefdescription>
<para>dock direction (top, bottom, left, right, center) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1006" column="9" bodyfile="interface/wx/aui/framemanager.h" bodystart="1006" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a52e849f2c5541807b986876688a549de" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int wxAuiPaneInfo::dock_layer</definition>
        <argsstring></argsstring>
        <name>dock_layer</name>
        <briefdescription>
<para>layer number (0 = innermost layer) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1009" column="9" bodyfile="interface/wx/aui/framemanager.h" bodystart="1009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a4d0bd61228c587147b68a567bf517b7b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int wxAuiPaneInfo::dock_row</definition>
        <argsstring></argsstring>
        <name>dock_row</name>
        <briefdescription>
<para>row number on the docking bar (0 = first row) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1012" column="9" bodyfile="interface/wx/aui/framemanager.h" bodystart="1012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a0f7fc19d27e2ada976f5f46cf491211a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int wxAuiPaneInfo::dock_pos</definition>
        <argsstring></argsstring>
        <name>dock_pos</name>
        <briefdescription>
<para>position inside the row (0 = first position) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1015" column="9" bodyfile="interface/wx/aui/framemanager.h" bodystart="1015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a54e61e7b518371e810a443c069debddf" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxAuiPaneInfo::best_size</definition>
        <argsstring></argsstring>
        <name>best_size</name>
        <briefdescription>
<para>size that the layout engine will prefer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1018" column="12" bodyfile="interface/wx/aui/framemanager.h" bodystart="1018" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1ab2b3d8e9116f1b47ce5b94c7545cd702" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxAuiPaneInfo::min_size</definition>
        <argsstring></argsstring>
        <name>min_size</name>
        <briefdescription>
<para>minimum size the pane window can tolerate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1021" column="12" bodyfile="interface/wx/aui/framemanager.h" bodystart="1021" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1ac926d17546d5a9e210cfb3ec1619a861" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxAuiPaneInfo::max_size</definition>
        <argsstring></argsstring>
        <name>max_size</name>
        <briefdescription>
<para>maximum size the pane window can tolerate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1024" column="12" bodyfile="interface/wx/aui/framemanager.h" bodystart="1024" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a7e3bc860b74a0cb81c36de3d0bc56d55" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxAuiPaneInfo::floating_pos</definition>
        <argsstring></argsstring>
        <name>floating_pos</name>
        <briefdescription>
<para>position while floating </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1027" column="13" bodyfile="interface/wx/aui/framemanager.h" bodystart="1027" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a735e85ff94f9ca1fbc64afad8dbbc376" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxAuiPaneInfo::floating_size</definition>
        <argsstring></argsstring>
        <name>floating_size</name>
        <briefdescription>
<para>size while floating </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1030" column="12" bodyfile="interface/wx/aui/framemanager.h" bodystart="1030" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a46ab2fa111c98b3851aac14af1fa3707" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int wxAuiPaneInfo::dock_proportion</definition>
        <argsstring></argsstring>
        <name>dock_proportion</name>
        <briefdescription>
<para>proportion while docked </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1033" column="9" bodyfile="interface/wx/aui/framemanager.h" bodystart="1033" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_aui_pane_info_1a99a92836fc72302fe420f45c0e64b5d4" prot="public" static="no" mutable="no">
        <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
        <definition>wxRect wxAuiPaneInfo::rect</definition>
        <argsstring></argsstring>
        <name>rect</name>
        <briefdescription>
<para>current rectangle (populated by wxAUI) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1036" column="12" bodyfile="interface/wx/aui/framemanager.h" bodystart="1036" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_aui_pane_info_1a8c071e6b210c6850f4c40ec796a9e43f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxAuiPaneInfo::wxAuiPaneInfo</definition>
        <argsstring>()</argsstring>
        <name>wxAuiPaneInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="539" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a031dd8a4593b1aeee36e2783911d5380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxAuiPaneInfo::wxAuiPaneInfo</definition>
        <argsstring>(const wxAuiPaneInfo &amp;c)</argsstring>
        <name>wxAuiPaneInfo</name>
        <param>
          <type>const <ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="544" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ad7160756501e4566ff2b3d6c56af657b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::BestSize</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>BestSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ad7160756501e4566ff2b3d6c56af657b" kindref="member">BestSize()</ref> sets the ideal size for the pane. </para>
        </briefdescription>
        <detaileddescription>
<para>The docking manager will attempt to use this size as much as possible when docking or floating the pane. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="551" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ae0cad1d8191953f3649dff8dce31222e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::BestSize</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>BestSize</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="552" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a8ae2aea9f505662cd927cfb9269229c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Bottom</definition>
        <argsstring>()</argsstring>
        <name>Bottom</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a8ae2aea9f505662cd927cfb9269229c2" kindref="member">Bottom()</ref> sets the pane dock position to the bottom side of the frame. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the same thing as calling Direction(wxAUI_DOCK_BOTTOM). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="559" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1af26d9492d296dfe926493776c70cea74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::BottomDockable</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>BottomDockable</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1af26d9492d296dfe926493776c70cea74" kindref="member">BottomDockable()</ref> indicates whether a pane can be docked at the bottom of the frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="565" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a67121aa62c7a9c951e55fe737483e503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Caption</definition>
        <argsstring>(const wxString &amp;c)</argsstring>
        <name>Caption</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a67121aa62c7a9c951e55fe737483e503" kindref="member">Caption()</ref> sets the caption of the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="570" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a9fbb959202a02664469bb6b58f485669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::CaptionVisible</definition>
        <argsstring>(bool visible=true)</argsstring>
        <name>CaptionVisible</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>CaptionVisible indicates that a pane caption should be visible. </para>
        </briefdescription>
        <detaileddescription>
<para>If false, no pane caption is drawn. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="576" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1af4527e2f6da96ee223ce994ffc9a7a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Centre</definition>
        <argsstring>()</argsstring>
        <name>Centre</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a9540b5e3f928bbd6ec1a49d63b86483f" kindref="member">Center()</ref> sets the pane dock position to the left side of the frame. </para>
        </briefdescription>
        <detaileddescription>
<para>The centre pane is the space in the middle after all border panes (left, top, right, bottom) are subtracted from the layout. This is the same thing as calling Direction(wxAUI_DOCK_CENTRE). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="585" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a9540b5e3f928bbd6ec1a49d63b86483f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Center</definition>
        <argsstring>()</argsstring>
        <name>Center</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="586" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a708155c221895c200b8ba35027edf572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::CentrePane</definition>
        <argsstring>()</argsstring>
        <name>CentrePane</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a708155c221895c200b8ba35027edf572" kindref="member">CentrePane()</ref> specifies that the pane should adopt the default center pane settings. </para>
        </briefdescription>
        <detaileddescription>
<para>Centre panes usually do not have caption bars. This function provides an easy way of preparing a pane to be displayed in the center dock position. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="596" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1aced6f62c2db661d79fa8a0a83881f845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::CenterPane</definition>
        <argsstring>()</argsstring>
        <name>CenterPane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="597" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a625115223debb8767741ca55c04a942a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::CloseButton</definition>
        <argsstring>(bool visible=true)</argsstring>
        <name>CloseButton</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a625115223debb8767741ca55c04a942a" kindref="member">CloseButton()</ref> indicates that a close button should be drawn for the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="603" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a8f6984ec4fb6114bae6d32c570d8c5c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::DefaultPane</definition>
        <argsstring>()</argsstring>
        <name>DefaultPane</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a8f6984ec4fb6114bae6d32c570d8c5c6" kindref="member">DefaultPane()</ref> specifies that the pane should adopt the default pane settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="608" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a1a87126ab665e97b5c734314b2511631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::DestroyOnClose</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>DestroyOnClose</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a1a87126ab665e97b5c734314b2511631" kindref="member">DestroyOnClose()</ref> indicates whether a pane should be destroyed when it is closed. </para>
        </briefdescription>
        <detaileddescription>
<para>Normally a pane is simply hidden when the close button is clicked. Setting DestroyOnClose to true will cause the window to be destroyed when the user clicks the pane&apos;s close button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="616" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ae0c79009b641488f5d6664f2e3ea20e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Direction</definition>
        <argsstring>(int direction)</argsstring>
        <name>Direction</name>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ae0c79009b641488f5d6664f2e3ea20e2" kindref="member">Direction()</ref> determines the direction of the docked pane. </para>
        </briefdescription>
        <detaileddescription>
<para>It is functionally the same as calling <ref refid="classwx_aui_pane_info_1a532d7d0799f299b12dc1d26113213954" kindref="member">Left()</ref>, <ref refid="classwx_aui_pane_info_1a064a53ffdcd537285441f0660a283225" kindref="member">Right()</ref>, <ref refid="classwx_aui_pane_info_1a72dada941b7877bcd399ac452706b87d" kindref="member">Top()</ref> or <ref refid="classwx_aui_pane_info_1a8ae2aea9f505662cd927cfb9269229c2" kindref="member">Bottom()</ref>, except that docking direction may be specified programmatically via the parameter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="623" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1aa7d4a9d21a0e673d638771911d694278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Dock</definition>
        <argsstring>()</argsstring>
        <name>Dock</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1aa7d4a9d21a0e673d638771911d694278" kindref="member">Dock()</ref> indicates that a pane should be docked. </para>
        </briefdescription>
        <detaileddescription>
<para>It is the opposite of <ref refid="classwx_aui_pane_info_1ad23770188c774e42a2d4df17f3bec680" kindref="member">Float()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="628" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ac590454f4c5e21bcbb64bf47c94d96e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::DockFixed</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>DockFixed</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ac590454f4c5e21bcbb64bf47c94d96e0" kindref="member">DockFixed()</ref> causes the containing dock to have no resize sash. </para>
        </briefdescription>
        <detaileddescription>
<para>This is useful for creating panes that span the entire width or height of a dock, but should not be resizable in the other direction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="635" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a9cca148bd6462c4fe1185c3970a4d241" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Dockable</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>Dockable</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a9cca148bd6462c4fe1185c3970a4d241" kindref="member">Dockable()</ref> specifies whether a frame can be docked or not. </para>
        </briefdescription>
        <detaileddescription>
<para>It is the same as specifying TopDockable(b).BottomDockable(b).LeftDockable(b).RightDockable(b). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="641" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a30030de07393cca9bf040529b3aed936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Fixed</definition>
        <argsstring>()</argsstring>
        <name>Fixed</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a30030de07393cca9bf040529b3aed936" kindref="member">Fixed()</ref> forces a pane to be fixed size so that it cannot be resized. </para>
        </briefdescription>
        <detaileddescription>
<para>After calling <ref refid="classwx_aui_pane_info_1a30030de07393cca9bf040529b3aed936" kindref="member">Fixed()</ref>, <ref refid="classwx_aui_pane_info_1ab7492c761f115caf393bbe3df8a59ab7" kindref="member">IsFixed()</ref> will return true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="647" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ad23770188c774e42a2d4df17f3bec680" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Float</definition>
        <argsstring>()</argsstring>
        <name>Float</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ad23770188c774e42a2d4df17f3bec680" kindref="member">Float()</ref> indicates that a pane should be floated. </para>
        </briefdescription>
        <detaileddescription>
<para>It is the opposite of <ref refid="classwx_aui_pane_info_1aa7d4a9d21a0e673d638771911d694278" kindref="member">Dock()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="652" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ab9b8f661f95178c65558489b688a3bbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Floatable</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>Floatable</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ab9b8f661f95178c65558489b688a3bbf" kindref="member">Floatable()</ref> sets whether the user will be able to undock a pane and turn it into a floating window. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="658" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a162cd811fd789e1fd136e2268255c7b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::FloatingPosition</definition>
        <argsstring>(const wxPoint &amp;pos)</argsstring>
        <name>FloatingPosition</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a162cd811fd789e1fd136e2268255c7b4" kindref="member">FloatingPosition()</ref> sets the position of the floating pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="664" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a9ab624a0b3cbab008f95600a98466354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::FloatingPosition</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>FloatingPosition</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="665" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a051c7f74c275c3249089440fe59b4d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::FloatingSize</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>FloatingSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a051c7f74c275c3249089440fe59b4d44" kindref="member">FloatingSize()</ref> sets the size of the floating pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="672" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a18f8ac828faa7658731b8c57a6638d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::FloatingSize</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>FloatingSize</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="673" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1af55d419bfae84ba597c123e83745adbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Gripper</definition>
        <argsstring>(bool visible=true)</argsstring>
        <name>Gripper</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1af55d419bfae84ba597c123e83745adbb" kindref="member">Gripper()</ref> indicates that a gripper should be drawn for the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="679" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a393116cbc55293ff2fc62cd0cc597b50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::GripperTop</definition>
        <argsstring>(bool attop=true)</argsstring>
        <name>GripperTop</name>
        <param>
          <type>bool</type>
          <declname>attop</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a393116cbc55293ff2fc62cd0cc597b50" kindref="member">GripperTop()</ref> indicates that a gripper should be drawn at the top of the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="684" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ac4913b91de77084c9ffb7e488db7b88a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::HasBorder</definition>
        <argsstring>() const</argsstring>
        <name>HasBorder</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ac4913b91de77084c9ffb7e488db7b88a" kindref="member">HasBorder()</ref> returns true if the pane displays a border. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="689" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ad24300d7bacfc59854f03aa181b9a875" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::HasCaption</definition>
        <argsstring>() const</argsstring>
        <name>HasCaption</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ad24300d7bacfc59854f03aa181b9a875" kindref="member">HasCaption()</ref> returns true if the pane displays a caption. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="694" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a51ddbc5bcc7cc47197e9b8298b23fb39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::HasCloseButton</definition>
        <argsstring>() const</argsstring>
        <name>HasCloseButton</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a51ddbc5bcc7cc47197e9b8298b23fb39" kindref="member">HasCloseButton()</ref> returns true if the pane displays a button to close the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="699" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a9d6161a34e53812635e61013e275ade5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::HasFlag</definition>
        <argsstring>(int flag) const</argsstring>
        <name>HasFlag</name>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a9d6161a34e53812635e61013e275ade5" kindref="member">HasFlag()</ref> returns true if the property specified by flag is active for the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="705" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ae1385b0ab5d7d4d269781264effc0513" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::HasGripper</definition>
        <argsstring>() const</argsstring>
        <name>HasGripper</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ae1385b0ab5d7d4d269781264effc0513" kindref="member">HasGripper()</ref> returns true if the pane displays a gripper. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="710" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a704f2e85372750fd0e8cb94c58f5c7ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::HasGripperTop</definition>
        <argsstring>() const</argsstring>
        <name>HasGripperTop</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ae1385b0ab5d7d4d269781264effc0513" kindref="member">HasGripper()</ref> returns true if the pane displays a gripper at the top. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="715" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a7803a919b20f1e1c4ab9672969e046d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::HasMaximizeButton</definition>
        <argsstring>() const</argsstring>
        <name>HasMaximizeButton</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a7803a919b20f1e1c4ab9672969e046d5" kindref="member">HasMaximizeButton()</ref> returns true if the pane displays a button to maximize the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="721" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a9a64ff16d92dd2529ac2cbddfb50a200" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::HasMinimizeButton</definition>
        <argsstring>() const</argsstring>
        <name>HasMinimizeButton</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a9a64ff16d92dd2529ac2cbddfb50a200" kindref="member">HasMinimizeButton()</ref> returns true if the pane displays a button to minimize the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="727" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1aad5f07dad34705b263a83963d7d7393d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::HasPinButton</definition>
        <argsstring>() const</argsstring>
        <name>HasPinButton</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1aad5f07dad34705b263a83963d7d7393d" kindref="member">HasPinButton()</ref> returns true if the pane displays a button to float the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="732" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a85865a169df2a9a877a8f1659fd66845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Hide</definition>
        <argsstring>()</argsstring>
        <name>Hide</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a85865a169df2a9a877a8f1659fd66845" kindref="member">Hide()</ref> indicates that a pane should be hidden. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="737" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a06ac566c188b594e2275a936a3d4022f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Icon</definition>
        <argsstring>(const wxBitmap &amp;b)</argsstring>
        <name>Icon</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a06ac566c188b594e2275a936a3d4022f" kindref="member">Icon()</ref> sets the icon of the pane. </para>
        </briefdescription>
        <detaileddescription>
<para>Notice that the height of the icon should be smaller than the value returned by wxAuiDockArt::GetMetric(wxAUI_DOCKART_CAPTION_SIZE) to ensure that it appears correctly.</para>
<para><simplesect kind="since"><para>2.9.2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="748" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a116ebec64530d3ad2f1b2e18329b9554" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsBottomDockable</definition>
        <argsstring>() const</argsstring>
        <name>IsBottomDockable</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a116ebec64530d3ad2f1b2e18329b9554" kindref="member">IsBottomDockable()</ref> returns true if the pane can be docked at the bottom of the managed frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_aui_pane_info_1aea639d80f6228356e2a08d7395461dda" kindref="member">IsDockable()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="756" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1aea639d80f6228356e2a08d7395461dda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsDockable</definition>
        <argsstring>() const</argsstring>
        <name>IsDockable</name>
        <briefdescription>
<para>Returns true if the pane can be docked at any side. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_aui_pane_info_1a5eeca032b39a306521813d398bcb1a2e" kindref="member">IsTopDockable()</ref>, <ref refid="classwx_aui_pane_info_1a116ebec64530d3ad2f1b2e18329b9554" kindref="member">IsBottomDockable()</ref>, <ref refid="classwx_aui_pane_info_1aa6598dfc756033177edb82d0c70997f1" kindref="member">IsLeftDockable()</ref>, <ref refid="classwx_aui_pane_info_1ab5213209a201794d7e60ce9a1b04cc47" kindref="member">IsRightDockable()</ref></para>
</simplesect>
<simplesect kind="since"><para>2.9.2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="765" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a63ae15c12360aba300e9634ad332f00b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsDocked</definition>
        <argsstring>() const</argsstring>
        <name>IsDocked</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a63ae15c12360aba300e9634ad332f00b" kindref="member">IsDocked()</ref> returns true if the pane is currently docked. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="770" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ab7492c761f115caf393bbe3df8a59ab7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsFixed</definition>
        <argsstring>() const</argsstring>
        <name>IsFixed</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ab7492c761f115caf393bbe3df8a59ab7" kindref="member">IsFixed()</ref> returns true if the pane cannot be resized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="775" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a26a3ac8b031e2d2c37eabde7a28297c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsFloatable</definition>
        <argsstring>() const</argsstring>
        <name>IsFloatable</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a26a3ac8b031e2d2c37eabde7a28297c0" kindref="member">IsFloatable()</ref> returns true if the pane can be undocked and displayed as a floating window. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="781" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1aecc68f450d449a6ca2480f1f744cdc3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsFloating</definition>
        <argsstring>() const</argsstring>
        <name>IsFloating</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1aecc68f450d449a6ca2480f1f744cdc3b" kindref="member">IsFloating()</ref> returns true if the pane is floating. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="786" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1aa6598dfc756033177edb82d0c70997f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsLeftDockable</definition>
        <argsstring>() const</argsstring>
        <name>IsLeftDockable</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1aa6598dfc756033177edb82d0c70997f1" kindref="member">IsLeftDockable()</ref> returns true if the pane can be docked on the left of the managed frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_aui_pane_info_1aea639d80f6228356e2a08d7395461dda" kindref="member">IsDockable()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="794" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a82df7a063de99ffdf697e8ad1f4f9d30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsMovable</definition>
        <argsstring>() const</argsstring>
        <name>IsMovable</name>
        <briefdescription>
<para>IsMoveable() returns true if the docked frame can be undocked or moved to another dock position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="800" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1aafcdbc8a7429831f0e692fc6d417cb1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsOk</definition>
        <argsstring>() const</argsstring>
        <name>IsOk</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1aafcdbc8a7429831f0e692fc6d417cb1e" kindref="member">IsOk()</ref> returns true if the <ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> structure is valid. </para>
        </briefdescription>
        <detaileddescription>
<para>A pane structure is valid if it has an associated window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="806" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a218d205fc66a6c16d1c5930b0208b986" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsResizable</definition>
        <argsstring>() const</argsstring>
        <name>IsResizable</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a218d205fc66a6c16d1c5930b0208b986" kindref="member">IsResizable()</ref> returns true if the pane can be resized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="811" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ab5213209a201794d7e60ce9a1b04cc47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsRightDockable</definition>
        <argsstring>() const</argsstring>
        <name>IsRightDockable</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ab5213209a201794d7e60ce9a1b04cc47" kindref="member">IsRightDockable()</ref> returns true if the pane can be docked on the right of the managed frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_aui_pane_info_1aea639d80f6228356e2a08d7395461dda" kindref="member">IsDockable()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="819" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a8c6eb359831be8b903e91fe72073d4a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsShown</definition>
        <argsstring>() const</argsstring>
        <name>IsShown</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a8c6eb359831be8b903e91fe72073d4a9" kindref="member">IsShown()</ref> returns true if the pane is currently shown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="824" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1af47519dceca924cc8fa5d007d0579e34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsToolbar</definition>
        <argsstring>() const</argsstring>
        <name>IsToolbar</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1af47519dceca924cc8fa5d007d0579e34" kindref="member">IsToolbar()</ref> returns true if the pane contains a toolbar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="829" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a5eeca032b39a306521813d398bcb1a2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsTopDockable</definition>
        <argsstring>() const</argsstring>
        <name>IsTopDockable</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a5eeca032b39a306521813d398bcb1a2e" kindref="member">IsTopDockable()</ref> returns true if the pane can be docked at the top of the managed frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_aui_pane_info_1aea639d80f6228356e2a08d7395461dda" kindref="member">IsDockable()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="837" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a20ae70c3da53ac6078c1988e38ea79e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Layer</definition>
        <argsstring>(int layer)</argsstring>
        <name>Layer</name>
        <param>
          <type>int</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a20ae70c3da53ac6078c1988e38ea79e9" kindref="member">Layer()</ref> determines the layer of the docked pane. </para>
        </briefdescription>
        <detaileddescription>
<para>The dock layer is similar to an onion, the inner-most layer being layer 0. Each shell moving in the outward direction has a higher layer number. This allows for more complex docking layout formation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="845" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a532d7d0799f299b12dc1d26113213954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Left</definition>
        <argsstring>()</argsstring>
        <name>Left</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a532d7d0799f299b12dc1d26113213954" kindref="member">Left()</ref> sets the pane dock position to the left side of the frame. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the same thing as calling Direction(wxAUI_DOCK_LEFT). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="851" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a0239c9187c60e4cece98e05af29b97d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::LeftDockable</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>LeftDockable</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a0239c9187c60e4cece98e05af29b97d5" kindref="member">LeftDockable()</ref> indicates whether a pane can be docked on the left of the frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="856" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1aa8ccdb61af41d2ee8a02b5c7930c3b6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::MaxSize</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>MaxSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1aa8ccdb61af41d2ee8a02b5c7930c3b6e" kindref="member">MaxSize()</ref> sets the maximum size of the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="862" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a2e6c119392dd12df449ba5c1477bc8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::MaxSize</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>MaxSize</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="863" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1afe929d0e06c31bd9c4ce863bc229f8ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::MaximizeButton</definition>
        <argsstring>(bool visible=true)</argsstring>
        <name>MaximizeButton</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1afe929d0e06c31bd9c4ce863bc229f8ae" kindref="member">MaximizeButton()</ref> indicates that a maximize button should be drawn for the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="869" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a2714c479225371c16063b7e48e9c5c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::MinSize</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>MinSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a2714c479225371c16063b7e48e9c5c56" kindref="member">MinSize()</ref> sets the minimum size of the pane. </para>
        </briefdescription>
        <detaileddescription>
<para>Please note that this is only partially supported as of this writing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="876" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1afd701badac0f53253605af58ace1bf0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::MinSize</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>MinSize</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="877" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a9bb1c77e09ca4520737c3fc1e50f1de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::MinimizeButton</definition>
        <argsstring>(bool visible=true)</argsstring>
        <name>MinimizeButton</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a9bb1c77e09ca4520737c3fc1e50f1de6" kindref="member">MinimizeButton()</ref> indicates that a minimize button should be drawn for the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="883" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1acdb08382366e120e21c1c3d6f122ed90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Movable</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>Movable</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Movable indicates whether a frame can be moved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="888" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a20e4bfead7f8e26a7f54f34b1653fc46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Name</definition>
        <argsstring>(const wxString &amp;n)</argsstring>
        <name>Name</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a20e4bfead7f8e26a7f54f34b1653fc46" kindref="member">Name()</ref> sets the name of the pane so it can be referenced in lookup functions. </para>
        </briefdescription>
        <detaileddescription>
<para>If a name is not specified by the user, a random name is assigned to the pane when it is added to the manager. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="895" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a07146f3aeb80301729d9a75f210a9f02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::PaneBorder</definition>
        <argsstring>(bool visible=true)</argsstring>
        <name>PaneBorder</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>PaneBorder indicates that a border should be drawn for the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="900" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a3b8d1de2e4de791c09caa3053df0fa20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::PinButton</definition>
        <argsstring>(bool visible=true)</argsstring>
        <name>PinButton</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a3b8d1de2e4de791c09caa3053df0fa20" kindref="member">PinButton()</ref> indicates that a pin button should be drawn for the pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="905" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a7b1f7ac52f7792f8a2dc37fc8941a1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Position</definition>
        <argsstring>(int pos)</argsstring>
        <name>Position</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a7b1f7ac52f7792f8a2dc37fc8941a1a3" kindref="member">Position()</ref> determines the position of the docked pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="910" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1aa19e26a9ca41d7cc324a16ba0c0830c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Resizable</definition>
        <argsstring>(bool resizable=true)</argsstring>
        <name>Resizable</name>
        <param>
          <type>bool</type>
          <declname>resizable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1aa19e26a9ca41d7cc324a16ba0c0830c9" kindref="member">Resizable()</ref> allows a pane to be resized if the parameter is true, and forces it to be a fixed size if the parameter is false. </para>
        </briefdescription>
        <detaileddescription>
<para>This is simply an antonym for <ref refid="classwx_aui_pane_info_1a30030de07393cca9bf040529b3aed936" kindref="member">Fixed()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="916" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a064a53ffdcd537285441f0660a283225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Right</definition>
        <argsstring>()</argsstring>
        <name>Right</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a064a53ffdcd537285441f0660a283225" kindref="member">Right()</ref> sets the pane dock position to the right side of the frame. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the same thing as calling Direction(wxAUI_DOCK_RIGHT). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="922" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a4d72b107bab8df03425276b5d5659349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::RightDockable</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>RightDockable</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a4d72b107bab8df03425276b5d5659349" kindref="member">RightDockable()</ref> indicates whether a pane can be docked on the right of the frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="928" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a4ede316c2fd534198c4faee09d530c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Row</definition>
        <argsstring>(int row)</argsstring>
        <name>Row</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a4ede316c2fd534198c4faee09d530c7f" kindref="member">Row()</ref> determines the row of the docked pane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="933" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a049e546b421c55606fec78ba826e3814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxAuiPaneInfo::SafeSet</definition>
        <argsstring>(wxAuiPaneInfo source)</argsstring>
        <name>SafeSet</name>
        <param>
          <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref></type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Write the safe parts of a PaneInfo object &quot;source&quot; into &quot;this&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para>&quot;Safe parts&quot; are all non-UI elements (e.g. all layout determining parameters like the size, position etc.). &quot;Unsafe parts&quot; (pointers to button, frame and window) are not modified by this write operation.</para>
<para><simplesect kind="remark"><para>This method is used when loading perspectives. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="943" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1ae5cb07f02dd14427d734b56c104db238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::SetFlag</definition>
        <argsstring>(int flag, bool option_state)</argsstring>
        <name>SetFlag</name>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>option_state</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1ae5cb07f02dd14427d734b56c104db238" kindref="member">SetFlag()</ref> turns the property given by flag on or off with the option_state parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="949" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1aebcd64b9933996ba5246623b0d138f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Show</definition>
        <argsstring>(bool show=true)</argsstring>
        <name>Show</name>
        <param>
          <type>bool</type>
          <declname>show</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1aebcd64b9933996ba5246623b0d138f62" kindref="member">Show()</ref> indicates that a pane should be shown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="954" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a01bf995527b6ca850e70d6ec44b9765c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::ToolbarPane</definition>
        <argsstring>()</argsstring>
        <name>ToolbarPane</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a01bf995527b6ca850e70d6ec44b9765c" kindref="member">ToolbarPane()</ref> specifies that the pane should adopt the default toolbar pane settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="960" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a72dada941b7877bcd399ac452706b87d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Top</definition>
        <argsstring>()</argsstring>
        <name>Top</name>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a72dada941b7877bcd399ac452706b87d" kindref="member">Top()</ref> sets the pane dock position to the top of the frame. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the same thing as calling Direction(wxAUI_DOCK_TOP). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="966" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a5ffb00250441449bcaa9df434a5991d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::TopDockable</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>TopDockable</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a5ffb00250441449bcaa9df434a5991d4" kindref="member">TopDockable()</ref> indicates whether a pane can be docked at the top of the frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="971" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a39cd943d973f41ea96df54776b820023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::Window</definition>
        <argsstring>(wxWindow *w)</argsstring>
        <name>Window</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_aui_pane_info_1a39cd943d973f41ea96df54776b820023" kindref="member">Window()</ref> assigns the window pointer that the <ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> should use. </para>
        </briefdescription>
        <detaileddescription>
<para>This normally does not need to be specified, as the window pointer is automatically assigned to the <ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> structure as soon as it is added to the manager. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="979" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1abf641b3e954724d267883d8a7348dda3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
        <definition>wxAuiPaneInfo &amp; wxAuiPaneInfo::operator=</definition>
        <argsstring>(const wxAuiPaneInfo &amp;c)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Makes a copy of the <ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="984" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classwx_aui_pane_info_1a28d04a22b4e55da94695ebb278700309" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxAuiPaneInfo::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/aui/framemanager.h" line="1038" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> is part of the wxAUI class framework. </para>
    </briefdescription>
    <detaileddescription>
<para>See also <ref refid="overview_aui" kindref="compound">wxAUI Overview</ref>.</para>
<para><ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> specifies all the parameters for a pane. These parameters specify where the pane is on the screen, whether it is docked or floating, or hidden. In addition, these parameters specify the pane&apos;s docked position, floating position, preferred size, minimum size, caption text among many other parameters.</para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxaui" kindref="member">wxAui</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para>
<para><simplesect kind="see"><para><ref refid="classwx_aui_manager" kindref="compound">wxAuiManager</ref>, <ref refid="classwx_aui_dock_art" kindref="compound">wxAuiDockArt</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>wxAuiPaneInfo</label>
        <link refid="classwx_aui_pane_info"/>
        <childnode refid="2" relation="usage">
          <edgelabel>caption</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>icon</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>window</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>frame</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>best_size</edgelabel>
          <edgelabel>floating_size</edgelabel>
          <edgelabel>max_size</edgelabel>
          <edgelabel>min_size</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>floating_pos</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>rect</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>wxBitmap</label>
        <link refid="classwx_bitmap"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>wxFrame</label>
        <link refid="classwx_frame"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>wxGDIObject</label>
        <link refid="classwx_g_d_i_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>wxNonOwnedWindow</label>
        <link refid="classwx_non_owned_window"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="6" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
      <node id="14">
        <label>wxPoint</label>
        <link refid="classwx_point"/>
      </node>
      <node id="15">
        <label>wxRect</label>
        <link refid="classwx_rect"/>
      </node>
      <node id="13">
        <label>wxSize</label>
        <link refid="classwx_size"/>
      </node>
      <node id="2">
        <label>wxString</label>
        <link refid="classwx_string"/>
      </node>
      <node id="11">
        <label>wxTopLevelWindow</label>
        <link refid="classwx_top_level_window"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="7">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/aui/framemanager.h" line="536" column="1" bodyfile="interface/wx/aui/framemanager.h" bodystart="537" bodyend="1039"/>
    <listofallmembers>
      <member refid="classwx_aui_pane_info_1a54e61e7b518371e810a443c069debddf" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>best_size</name></member>
      <member refid="classwx_aui_pane_info_1ad7160756501e4566ff2b3d6c56af657b" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>BestSize</name></member>
      <member refid="classwx_aui_pane_info_1ae0cad1d8191953f3649dff8dce31222e" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>BestSize</name></member>
      <member refid="classwx_aui_pane_info_1a8ae2aea9f505662cd927cfb9269229c2" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Bottom</name></member>
      <member refid="classwx_aui_pane_info_1af26d9492d296dfe926493776c70cea74" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>BottomDockable</name></member>
      <member refid="classwx_aui_pane_info_1ab93337020ef244b3ba1cee7dc998efda" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>caption</name></member>
      <member refid="classwx_aui_pane_info_1a67121aa62c7a9c951e55fe737483e503" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Caption</name></member>
      <member refid="classwx_aui_pane_info_1a9fbb959202a02664469bb6b58f485669" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>CaptionVisible</name></member>
      <member refid="classwx_aui_pane_info_1a9540b5e3f928bbd6ec1a49d63b86483f" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Center</name></member>
      <member refid="classwx_aui_pane_info_1aced6f62c2db661d79fa8a0a83881f845" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>CenterPane</name></member>
      <member refid="classwx_aui_pane_info_1af4527e2f6da96ee223ce994ffc9a7a74" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Centre</name></member>
      <member refid="classwx_aui_pane_info_1a708155c221895c200b8ba35027edf572" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>CentrePane</name></member>
      <member refid="classwx_aui_pane_info_1a625115223debb8767741ca55c04a942a" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>CloseButton</name></member>
      <member refid="classwx_aui_pane_info_1a8f6984ec4fb6114bae6d32c570d8c5c6" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>DefaultPane</name></member>
      <member refid="classwx_aui_pane_info_1a1a87126ab665e97b5c734314b2511631" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>DestroyOnClose</name></member>
      <member refid="classwx_aui_pane_info_1ae0c79009b641488f5d6664f2e3ea20e2" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Direction</name></member>
      <member refid="classwx_aui_pane_info_1aa7d4a9d21a0e673d638771911d694278" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Dock</name></member>
      <member refid="classwx_aui_pane_info_1ac7b7dd06d87127760257b861abb003eb" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>dock_direction</name></member>
      <member refid="classwx_aui_pane_info_1a52e849f2c5541807b986876688a549de" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>dock_layer</name></member>
      <member refid="classwx_aui_pane_info_1a0f7fc19d27e2ada976f5f46cf491211a" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>dock_pos</name></member>
      <member refid="classwx_aui_pane_info_1a46ab2fa111c98b3851aac14af1fa3707" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>dock_proportion</name></member>
      <member refid="classwx_aui_pane_info_1a4d0bd61228c587147b68a567bf517b7b" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>dock_row</name></member>
      <member refid="classwx_aui_pane_info_1a9cca148bd6462c4fe1185c3970a4d241" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Dockable</name></member>
      <member refid="classwx_aui_pane_info_1ac590454f4c5e21bcbb64bf47c94d96e0" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>DockFixed</name></member>
      <member refid="classwx_aui_pane_info_1a30030de07393cca9bf040529b3aed936" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Fixed</name></member>
      <member refid="classwx_aui_pane_info_1ad23770188c774e42a2d4df17f3bec680" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Float</name></member>
      <member refid="classwx_aui_pane_info_1ab9b8f661f95178c65558489b688a3bbf" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Floatable</name></member>
      <member refid="classwx_aui_pane_info_1a7e3bc860b74a0cb81c36de3d0bc56d55" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>floating_pos</name></member>
      <member refid="classwx_aui_pane_info_1a735e85ff94f9ca1fbc64afad8dbbc376" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>floating_size</name></member>
      <member refid="classwx_aui_pane_info_1a162cd811fd789e1fd136e2268255c7b4" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>FloatingPosition</name></member>
      <member refid="classwx_aui_pane_info_1a9ab624a0b3cbab008f95600a98466354" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>FloatingPosition</name></member>
      <member refid="classwx_aui_pane_info_1a051c7f74c275c3249089440fe59b4d44" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>FloatingSize</name></member>
      <member refid="classwx_aui_pane_info_1a18f8ac828faa7658731b8c57a6638d79" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>FloatingSize</name></member>
      <member refid="classwx_aui_pane_info_1a5987d8de7a1bd2e686823bb4ba8acaab" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>frame</name></member>
      <member refid="classwx_aui_pane_info_1af55d419bfae84ba597c123e83745adbb" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Gripper</name></member>
      <member refid="classwx_aui_pane_info_1a393116cbc55293ff2fc62cd0cc597b50" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>GripperTop</name></member>
      <member refid="classwx_aui_pane_info_1ac4913b91de77084c9ffb7e488db7b88a" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>HasBorder</name></member>
      <member refid="classwx_aui_pane_info_1ad24300d7bacfc59854f03aa181b9a875" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>HasCaption</name></member>
      <member refid="classwx_aui_pane_info_1a51ddbc5bcc7cc47197e9b8298b23fb39" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>HasCloseButton</name></member>
      <member refid="classwx_aui_pane_info_1a9d6161a34e53812635e61013e275ade5" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>HasFlag</name></member>
      <member refid="classwx_aui_pane_info_1ae1385b0ab5d7d4d269781264effc0513" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>HasGripper</name></member>
      <member refid="classwx_aui_pane_info_1a704f2e85372750fd0e8cb94c58f5c7ce" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>HasGripperTop</name></member>
      <member refid="classwx_aui_pane_info_1a7803a919b20f1e1c4ab9672969e046d5" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>HasMaximizeButton</name></member>
      <member refid="classwx_aui_pane_info_1a9a64ff16d92dd2529ac2cbddfb50a200" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>HasMinimizeButton</name></member>
      <member refid="classwx_aui_pane_info_1aad5f07dad34705b263a83963d7d7393d" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>HasPinButton</name></member>
      <member refid="classwx_aui_pane_info_1a85865a169df2a9a877a8f1659fd66845" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Hide</name></member>
      <member refid="classwx_aui_pane_info_1a9a0522b3a93f51ca8950d8ab34bba2b7" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>icon</name></member>
      <member refid="classwx_aui_pane_info_1a06ac566c188b594e2275a936a3d4022f" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Icon</name></member>
      <member refid="classwx_aui_pane_info_1a116ebec64530d3ad2f1b2e18329b9554" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsBottomDockable</name></member>
      <member refid="classwx_aui_pane_info_1aea639d80f6228356e2a08d7395461dda" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsDockable</name></member>
      <member refid="classwx_aui_pane_info_1a63ae15c12360aba300e9634ad332f00b" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsDocked</name></member>
      <member refid="classwx_aui_pane_info_1ab7492c761f115caf393bbe3df8a59ab7" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsFixed</name></member>
      <member refid="classwx_aui_pane_info_1a26a3ac8b031e2d2c37eabde7a28297c0" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsFloatable</name></member>
      <member refid="classwx_aui_pane_info_1aecc68f450d449a6ca2480f1f744cdc3b" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsFloating</name></member>
      <member refid="classwx_aui_pane_info_1aa6598dfc756033177edb82d0c70997f1" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsLeftDockable</name></member>
      <member refid="classwx_aui_pane_info_1a82df7a063de99ffdf697e8ad1f4f9d30" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsMovable</name></member>
      <member refid="classwx_aui_pane_info_1aafcdbc8a7429831f0e692fc6d417cb1e" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsOk</name></member>
      <member refid="classwx_aui_pane_info_1a218d205fc66a6c16d1c5930b0208b986" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsResizable</name></member>
      <member refid="classwx_aui_pane_info_1ab5213209a201794d7e60ce9a1b04cc47" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsRightDockable</name></member>
      <member refid="classwx_aui_pane_info_1a8c6eb359831be8b903e91fe72073d4a9" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsShown</name></member>
      <member refid="classwx_aui_pane_info_1af47519dceca924cc8fa5d007d0579e34" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsToolbar</name></member>
      <member refid="classwx_aui_pane_info_1a5eeca032b39a306521813d398bcb1a2e" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsTopDockable</name></member>
      <member refid="classwx_aui_pane_info_1a28d04a22b4e55da94695ebb278700309" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>IsValid</name></member>
      <member refid="classwx_aui_pane_info_1a20ae70c3da53ac6078c1988e38ea79e9" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Layer</name></member>
      <member refid="classwx_aui_pane_info_1a532d7d0799f299b12dc1d26113213954" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Left</name></member>
      <member refid="classwx_aui_pane_info_1a0239c9187c60e4cece98e05af29b97d5" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>LeftDockable</name></member>
      <member refid="classwx_aui_pane_info_1ac926d17546d5a9e210cfb3ec1619a861" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>max_size</name></member>
      <member refid="classwx_aui_pane_info_1afe929d0e06c31bd9c4ce863bc229f8ae" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>MaximizeButton</name></member>
      <member refid="classwx_aui_pane_info_1aa8ccdb61af41d2ee8a02b5c7930c3b6e" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>MaxSize</name></member>
      <member refid="classwx_aui_pane_info_1a2e6c119392dd12df449ba5c1477bc8bc" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>MaxSize</name></member>
      <member refid="classwx_aui_pane_info_1ab2b3d8e9116f1b47ce5b94c7545cd702" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>min_size</name></member>
      <member refid="classwx_aui_pane_info_1a9bb1c77e09ca4520737c3fc1e50f1de6" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>MinimizeButton</name></member>
      <member refid="classwx_aui_pane_info_1a2714c479225371c16063b7e48e9c5c56" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>MinSize</name></member>
      <member refid="classwx_aui_pane_info_1afd701badac0f53253605af58ace1bf0a" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>MinSize</name></member>
      <member refid="classwx_aui_pane_info_1acdb08382366e120e21c1c3d6f122ed90" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Movable</name></member>
      <member refid="classwx_aui_pane_info_1a20e4bfead7f8e26a7f54f34b1653fc46" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Name</name></member>
      <member refid="classwx_aui_pane_info_1a5d1c0a19e5637b3dec0e37a43c02de9c" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>name</name></member>
      <member refid="classwx_aui_pane_info_1abf641b3e954724d267883d8a7348dda3" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>operator=</name></member>
      <member refid="classwx_aui_pane_info_1a07146f3aeb80301729d9a75f210a9f02" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>PaneBorder</name></member>
      <member refid="classwx_aui_pane_info_1a3b8d1de2e4de791c09caa3053df0fa20" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>PinButton</name></member>
      <member refid="classwx_aui_pane_info_1a7b1f7ac52f7792f8a2dc37fc8941a1a3" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Position</name></member>
      <member refid="classwx_aui_pane_info_1a99a92836fc72302fe420f45c0e64b5d4" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>rect</name></member>
      <member refid="classwx_aui_pane_info_1aa19e26a9ca41d7cc324a16ba0c0830c9" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Resizable</name></member>
      <member refid="classwx_aui_pane_info_1a064a53ffdcd537285441f0660a283225" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Right</name></member>
      <member refid="classwx_aui_pane_info_1a4d72b107bab8df03425276b5d5659349" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>RightDockable</name></member>
      <member refid="classwx_aui_pane_info_1a4ede316c2fd534198c4faee09d530c7f" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Row</name></member>
      <member refid="classwx_aui_pane_info_1a049e546b421c55606fec78ba826e3814" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>SafeSet</name></member>
      <member refid="classwx_aui_pane_info_1ae5cb07f02dd14427d734b56c104db238" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>SetFlag</name></member>
      <member refid="classwx_aui_pane_info_1aebcd64b9933996ba5246623b0d138f62" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Show</name></member>
      <member refid="classwx_aui_pane_info_1a366093a54db956c07ef5e4df9fd41a9d" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>state</name></member>
      <member refid="classwx_aui_pane_info_1a01bf995527b6ca850e70d6ec44b9765c" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>ToolbarPane</name></member>
      <member refid="classwx_aui_pane_info_1a72dada941b7877bcd399ac452706b87d" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Top</name></member>
      <member refid="classwx_aui_pane_info_1a5ffb00250441449bcaa9df434a5991d4" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>TopDockable</name></member>
      <member refid="classwx_aui_pane_info_1a39cd943d973f41ea96df54776b820023" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>Window</name></member>
      <member refid="classwx_aui_pane_info_1a118df7165b4f040f8fcea4637c901767" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>window</name></member>
      <member refid="classwx_aui_pane_info_1a8c071e6b210c6850f4c40ec796a9e43f" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>wxAuiPaneInfo</name></member>
      <member refid="classwx_aui_pane_info_1a031dd8a4593b1aeee36e2783911d5380" prot="public" virt="non-virtual"><scope>wxAuiPaneInfo</scope><name>wxAuiPaneInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
