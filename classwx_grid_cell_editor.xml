<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classwx_grid_cell_editor" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>wxGridCellEditor</compoundname>
    <basecompoundref refid="classwx_client_data_container" prot="public" virt="non-virtual">wxClientDataContainer</basecompoundref>
    <basecompoundref refid="classwx_ref_counter" prot="public" virt="non-virtual">wxRefCounter</basecompoundref>
    <derivedcompoundref refid="classwx_grid_cell_activatable_editor" prot="public" virt="non-virtual">wxGridCellActivatableEditor</derivedcompoundref>
    <derivedcompoundref refid="classwx_grid_cell_bool_editor" prot="public" virt="non-virtual">wxGridCellBoolEditor</derivedcompoundref>
    <derivedcompoundref refid="classwx_grid_cell_choice_editor" prot="public" virt="non-virtual">wxGridCellChoiceEditor</derivedcompoundref>
    <derivedcompoundref refid="classwx_grid_cell_date_editor" prot="public" virt="non-virtual">wxGridCellDateEditor</derivedcompoundref>
    <derivedcompoundref refid="classwx_grid_cell_text_editor" prot="public" virt="non-virtual">wxGridCellTextEditor</derivedcompoundref>
    <includes local="no">wx/grid.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_grid_cell_editor_1ae91db451fda342bc5456d38aeec8921a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxGridCellEditor::wxGridCellEditor</definition>
        <argsstring>()</argsstring>
        <name>wxGridCellEditor</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="580" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1aa3be55056f9ec3ceed8f0d31ed613cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::BeginEdit</definition>
        <argsstring>(int row, int col, wxGrid *grid)=0</argsstring>
        <name>BeginEdit</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type><ref refid="classwx_grid" kindref="compound">wxGrid</ref> *</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Fetch the value from the table and prepare the edit control to begin editing. </para>
        </briefdescription>
        <detaileddescription>
<para>This function should save the original value of the grid cell at the given <emphasis>row</emphasis> and <emphasis>col</emphasis> and show the control allowing the user to change it.</para>
<para><simplesect kind="see"><para><ref refid="classwx_grid_cell_editor_1a227445c6c3b66494b2428ecb683a9ae7" kindref="member">EndEdit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="592" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a302be3e76c5789d245de77e89172c200" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_grid_cell_editor" kindref="compound">wxGridCellEditor</ref> *</type>
        <definition>virtual wxGridCellEditor * wxGridCellEditor::Clone</definition>
        <argsstring>() const =0</argsstring>
        <name>Clone</name>
        <briefdescription>
<para>Create a new object which is the copy of this one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="597" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1ac04b8fe11c759ac027661d86b97fa70e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::Create</definition>
        <argsstring>(wxWindow *parent, wxWindowID id, wxEvtHandler *evtHandler)=0</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classwx_evt_handler" kindref="compound">wxEvtHandler</ref> *</type>
          <declname>evtHandler</declname>
        </param>
        <briefdescription>
<para>Creates the actual edit control. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="602" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1adc20623daa433958374412a440c2528e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <briefdescription>
<para>Final cleanup. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="608" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a227445c6c3b66494b2428ecb683a9ae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxGridCellEditor::EndEdit</definition>
        <argsstring>(int row, int col, const wxGrid *grid, const wxString &amp;oldval, wxString *newval)=0</argsstring>
        <name>EndEdit</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_grid" kindref="compound">wxGrid</ref> *</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>oldval</declname>
        </param>
        <param>
          <type><ref refid="classwx_string" kindref="compound">wxString</ref> *</type>
          <declname>newval</declname>
        </param>
        <briefdescription>
<para>End editing the cell. </para>
        </briefdescription>
        <detaileddescription>
<para>This function must check if the current value of the editing control is valid and different from the original value (available as <emphasis>oldval</emphasis> in its string form and possibly saved internally using its real type by <ref refid="classwx_grid_cell_editor_1aa3be55056f9ec3ceed8f0d31ed613cd9" kindref="member">BeginEdit()</ref>). If it isn&apos;t, it just returns false, otherwise it must do the following:<itemizedlist>
<listitem><para>Save the new value internally so that <ref refid="classwx_grid_cell_editor_1a02016c9850d6a83aa86dfef9f3f3ccd6" kindref="member">ApplyEdit()</ref> could apply it.</para>
</listitem><listitem><para>Fill <emphasis>newval</emphasis> (which is never NULL) with the string representation of the new value.</para>
</listitem><listitem><para>Return true</para>
</listitem></itemizedlist>
</para>
<para>Notice that it must <emphasis>not</emphasis> modify the grid as the change could still be vetoed.</para>
<para>If the user-defined wxEVT_GRID_CELL_CHANGING event handler doesn&apos;t veto this change, <ref refid="classwx_grid_cell_editor_1a02016c9850d6a83aa86dfef9f3f3ccd6" kindref="member">ApplyEdit()</ref> will be called next. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="629" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a02016c9850d6a83aa86dfef9f3f3ccd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::ApplyEdit</definition>
        <argsstring>(int row, int col, wxGrid *grid)=0</argsstring>
        <name>ApplyEdit</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type><ref refid="classwx_grid" kindref="compound">wxGrid</ref> *</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Effectively save the changes in the grid. </para>
        </briefdescription>
        <detaileddescription>
<para>This function should save the value of the control in the grid. It is called only after <ref refid="classwx_grid_cell_editor_1a227445c6c3b66494b2428ecb683a9ae7" kindref="member">EndEdit()</ref> returns true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="638" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a265a3c935b3d5c204c8c75149fa0cb74" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::HandleReturn</definition>
        <argsstring>(wxKeyEvent &amp;event)</argsstring>
        <name>HandleReturn</name>
        <param>
          <type><ref refid="classwx_key_event" kindref="compound">wxKeyEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Some types of controls on some platforms may need some help with the Return key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="644" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a9e0e19a87a387d243a0c07f12bc0a2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxGridCellEditor::IsCreated</definition>
        <argsstring>()</argsstring>
        <name>IsCreated</name>
        <briefdescription>
<para>Returns true if the edit control has been created. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="649" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1aa279d3b3e27d688570294c53eca1def4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::PaintBackground</definition>
        <argsstring>(wxDC &amp;dc, const wxRect &amp;rectCell, const wxGridCellAttr &amp;attr)</argsstring>
        <name>PaintBackground</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rectCell</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_grid_cell_attr" kindref="compound">wxGridCellAttr</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Draws the part of the cell not occupied by the control: the base class version just fills it with background colour from the attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="655" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a027e54b196a9f30271cfaf28fc1e30b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::Reset</definition>
        <argsstring>()=0</argsstring>
        <name>Reset</name>
        <briefdescription>
<para>Reset the value in the control back to its starting value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="660" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a76508cbb2989ce94aa3082f1a12e789f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::SetSize</definition>
        <argsstring>(const wxRect &amp;rect)</argsstring>
        <name>SetSize</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Size and position the edit control. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="665" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a1e69e1dac634ac0f24a5478002a9c576" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::Show</definition>
        <argsstring>(bool show, wxGridCellAttr *attr=NULL)</argsstring>
        <name>Show</name>
        <param>
          <type>bool</type>
          <declname>show</declname>
        </param>
        <param>
          <type><ref refid="classwx_grid_cell_attr" kindref="compound">wxGridCellAttr</ref> *</type>
          <declname>attr</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Show or hide the edit control, use the specified attributes to set colours/fonts for it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="671" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a222488a19f6f7d4562dd2ef390c01b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::StartingClick</definition>
        <argsstring>()</argsstring>
        <name>StartingClick</name>
        <briefdescription>
<para>If the editor is enabled by clicking on the cell, this method will be called. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="677" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a814292778557067b6068f6ee966985dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::StartingKey</definition>
        <argsstring>(wxKeyEvent &amp;event)</argsstring>
        <name>StartingKey</name>
        <param>
          <type><ref refid="classwx_key_event" kindref="compound">wxKeyEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>If the editor is enabled by pressing keys on the grid, this will be called to let the editor do something about that first key if desired. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="683" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1aad86a4fb5c83528f16d9022688f259d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxGridCellEditor::IsAcceptedKey</definition>
        <argsstring>(wxKeyEvent &amp;event)</argsstring>
        <name>IsAcceptedKey</name>
        <param>
          <type><ref refid="classwx_key_event" kindref="compound">wxKeyEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Return true to allow the given key to start editing: the base class version only checks that the event has no modifiers. </para>
        </briefdescription>
        <detaileddescription>
<para>If the key is F2 (special), editing will always start and this method will not be called at all (but <ref refid="classwx_grid_cell_editor_1a814292778557067b6068f6ee966985dc" kindref="member">StartingKey()</ref> will) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="692" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a2dd2032fe1e396fd30686ff022a99d97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxGridCellEditor::GetValue</definition>
        <argsstring>() const =0</argsstring>
        <name>GetValue</name>
        <briefdescription>
<para>Returns the value currently in the editor control. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="698" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a456ef33da0c6a532e0b37ada8d9e51ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow * wxGridCellEditor::GetWindow</definition>
        <argsstring>() const</argsstring>
        <name>GetWindow</name>
        <briefdescription>
<para>Get the edit window used by this editor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>3.1.3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="705" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a1c181892931a4f57289cc27064930b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGridCellEditor::SetWindow</definition>
        <argsstring>(wxWindow *window)</argsstring>
        <name>SetWindow</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="classwx_window" kindref="compound">wxWindow</ref> that will be used by this cell editor for editing the value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>3.1.3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="713" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a4d0da78e0914ba2cefcb074dfa29064e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_control" kindref="compound">wxControl</ref> *</type>
        <definition>wxControl * wxGridCellEditor::GetControl</definition>
        <argsstring>()</argsstring>
        <name>GetControl</name>
        <briefdescription>
<para>Get the <ref refid="classwx_control" kindref="compound">wxControl</ref> used by this editor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is preserved for compatibility, but <ref refid="classwx_grid_cell_editor_1a456ef33da0c6a532e0b37ada8d9e51ed" kindref="member">GetWindow()</ref> should be preferred in the new code as the associated window doesn&apos;t need to be of a wxControl-derived class.</para>
<para>Note that if <ref refid="classwx_grid_cell_editor_1a1c181892931a4f57289cc27064930b67" kindref="member">SetWindow()</ref> had been called with an object not deriving from <ref refid="classwx_control" kindref="compound">wxControl</ref>, this method will return NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="725" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1ae9d8087c6b037194b0c7680d63555145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxGridCellEditor::SetControl</definition>
        <argsstring>(wxControl *control)</argsstring>
        <name>SetControl</name>
        <param>
          <type><ref refid="classwx_control" kindref="compound">wxControl</ref> *</type>
          <declname>control</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="classwx_control" kindref="compound">wxControl</ref> that will be used by this cell editor for editing the value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is preserved for compatibility, but <ref refid="classwx_grid_cell_editor_1a1c181892931a4f57289cc27064930b67" kindref="member">SetWindow()</ref> should be preferred in the new code, see <ref refid="classwx_grid_cell_editor_1a4d0da78e0914ba2cefcb074dfa29064e" kindref="member">GetControl()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="734" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1a9eb24dbc65c4c07543f4c975f09fedcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_grid_activation_result" kindref="compound">wxGridActivationResult</ref></type>
        <definition>virtual wxGridActivationResult wxGridCellEditor::TryActivate</definition>
        <argsstring>(int row, int col, wxGrid *grid, const wxGridActivationSource &amp;actSource)</argsstring>
        <name>TryActivate</name>
        <reimplementedby refid="classwx_grid_cell_activatable_editor_1aa855df176029b7a826fa0dcc947a5de7">TryActivate</reimplementedby>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type><ref refid="classwx_grid" kindref="compound">wxGrid</ref> *</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_grid_activation_source" kindref="compound">wxGridActivationSource</ref> &amp;</type>
          <declname>actSource</declname>
        </param>
        <briefdescription>
<para>Function allowing to create an &quot;activatable&quot; editor. </para>
        </briefdescription>
        <detaileddescription>
<para>As explained in this class description, activatable editors don&apos;t show any edit control but change the cell value directly, when it is activated (by any way described by <ref refid="classwx_grid_activation_source" kindref="compound">wxGridActivationSource</ref>).</para>
<para>To create such editor, this method must be overridden to return <ref refid="classwx_grid_activation_result_1ade1bf782bc0eb8bcc83f92837d00a377" kindref="member">wxGridActivationResult::DoChange()</ref> passing it the new value of the cell. If the change is not vetoed by wxEVT_GRID_CELL_CHANGING handler, <ref refid="classwx_grid_cell_editor_1ac2258168ec052a369b4343bad61a8d99" kindref="member">DoActivate()</ref> will be called to actually change the value, so it must be overridden as well if <ref refid="classwx_grid_cell_editor_1a9eb24dbc65c4c07543f4c975f09fedcc" kindref="member">TryActivate()</ref> is overridden.</para>
<para>By default, <ref refid="classwx_grid_activation_result_1a01a20b4694933f169c73402024abe39a" kindref="member">wxGridActivationResult::DoEdit()</ref> is returned, meaning that this is a normal editor, using an edit control for changing the cell value.</para>
<para><simplesect kind="since"><para>3.1.4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="757" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_cell_editor_1ac2258168ec052a369b4343bad61a8d99" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxGridCellEditor::DoActivate</definition>
        <argsstring>(int row, int col, wxGrid *grid)</argsstring>
        <name>DoActivate</name>
        <reimplementedby refid="classwx_grid_cell_activatable_editor_1a01d85f8058c5fe22fb911817c3709079">DoActivate</reimplementedby>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type><ref refid="classwx_grid" kindref="compound">wxGrid</ref> *</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Function which must be overridden for &quot;activatable&quot; editors. </para>
        </briefdescription>
        <detaileddescription>
<para>If <ref refid="classwx_grid_cell_editor_1a9eb24dbc65c4c07543f4c975f09fedcc" kindref="member">TryActivate()</ref> is overridden to return &quot;change&quot; action, this function will be called to actually apply this change. Note that it is not passed the value to apply, as it is assumed that the editor class stores this value as a member variable anyhow.</para>
<para><simplesect kind="since"><para>3.1.4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="770" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_grid_cell_editor_1a91d23d6330afefa1323a6ca5d397fd2c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxGridCellEditor::~wxGridCellEditor</definition>
        <argsstring>()</argsstring>
        <name>~wxGridCellEditor</name>
        <briefdescription>
<para>The destructor is private because only <ref refid="classwx_ref_counter_1a803eb5be907b1a342082ceb59c01d8c5" kindref="member">DecRef()</ref> can delete us. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="777" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is responsible for providing and manipulating the in-place edit controls for the grid. </para>
    </briefdescription>
    <detaileddescription>
<para>Instances of <ref refid="classwx_grid_cell_editor" kindref="compound">wxGridCellEditor</ref> (actually, instances of derived classes since it is an abstract class) can be associated with the cell attributes for individual cells, rows, columns, or even for the entire grid.</para>
<para>Normally <ref refid="classwx_grid_cell_editor" kindref="compound">wxGridCellEditor</ref> shows some UI control allowing the user to edit the cell, but starting with wxWidgets 3.1.4 it&apos;s also possible to define &quot;activatable&quot; cell editors, that change the value of the cell directly when it&apos;s activated (typically by pressing Space key or clicking on it), see <ref refid="classwx_grid_cell_editor_1a9eb24dbc65c4c07543f4c975f09fedcc" kindref="member">TryActivate()</ref> method. Note that when implementing an editor which is always activatable, i.e. never shows any in-place editor, it is more convenient to derive its class from <ref refid="classwx_grid_cell_activatable_editor" kindref="compound">wxGridCellActivatableEditor</ref> than from <ref refid="classwx_grid_cell_editor" kindref="compound">wxGridCellEditor</ref> itself.</para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para>
<para><simplesect kind="see"><para><ref refid="classwx_grid_cell_auto_wrap_string_editor" kindref="compound">wxGridCellAutoWrapStringEditor</ref>, <ref refid="classwx_grid_cell_bool_editor" kindref="compound">wxGridCellBoolEditor</ref>, <ref refid="classwx_grid_cell_choice_editor" kindref="compound">wxGridCellChoiceEditor</ref>, <ref refid="classwx_grid_cell_enum_editor" kindref="compound">wxGridCellEnumEditor</ref>, <ref refid="classwx_grid_cell_float_editor" kindref="compound">wxGridCellFloatEditor</ref>, <ref refid="classwx_grid_cell_number_editor" kindref="compound">wxGridCellNumberEditor</ref>, <ref refid="classwx_grid_cell_text_editor" kindref="compound">wxGridCellTextEditor</ref>, <ref refid="classwx_grid_cell_date_editor" kindref="compound">wxGridCellDateEditor</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>wxClientDataContainer</label>
        <link refid="classwx_client_data_container"/>
      </node>
      <node id="4">
        <label>wxGridCellActivatableEditor</label>
        <link refid="classwx_grid_cell_activatable_editor"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>wxGridCellAutoWrapStringEditor</label>
        <link refid="classwx_grid_cell_auto_wrap_string_editor"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>wxGridCellBoolEditor</label>
        <link refid="classwx_grid_cell_bool_editor"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>wxGridCellChoiceEditor</label>
        <link refid="classwx_grid_cell_choice_editor"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>wxGridCellDateEditor</label>
        <link refid="classwx_grid_cell_date_editor"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxGridCellEditor</label>
        <link refid="classwx_grid_cell_editor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>wxGridCellEnumEditor</label>
        <link refid="classwx_grid_cell_enum_editor"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>wxGridCellFloatEditor</label>
        <link refid="classwx_grid_cell_float_editor"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>wxGridCellNumberEditor</label>
        <link refid="classwx_grid_cell_number_editor"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>wxGridCellTextEditor</label>
        <link refid="classwx_grid_cell_text_editor"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxRefCounter</label>
        <link refid="classwx_ref_counter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>wxClientDataContainer</label>
        <link refid="classwx_client_data_container"/>
      </node>
      <node id="1">
        <label>wxGridCellEditor</label>
        <link refid="classwx_grid_cell_editor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxRefCounter</label>
        <link refid="classwx_ref_counter"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/grid.h" line="574" column="1" bodyfile="interface/wx/grid.h" bodystart="575" bodyend="778"/>
    <listofallmembers>
      <member refid="classwx_grid_cell_editor_1a02016c9850d6a83aa86dfef9f3f3ccd6" prot="public" virt="pure-virtual"><scope>wxGridCellEditor</scope><name>ApplyEdit</name></member>
      <member refid="classwx_grid_cell_editor_1aa3be55056f9ec3ceed8f0d31ed613cd9" prot="public" virt="pure-virtual"><scope>wxGridCellEditor</scope><name>BeginEdit</name></member>
      <member refid="classwx_grid_cell_editor_1a302be3e76c5789d245de77e89172c200" prot="public" virt="pure-virtual"><scope>wxGridCellEditor</scope><name>Clone</name></member>
      <member refid="classwx_grid_cell_editor_1ac04b8fe11c759ac027661d86b97fa70e" prot="public" virt="pure-virtual"><scope>wxGridCellEditor</scope><name>Create</name></member>
      <member refid="classwx_ref_counter_1a803eb5be907b1a342082ceb59c01d8c5" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>DecRef</name></member>
      <member refid="classwx_grid_cell_editor_1adc20623daa433958374412a440c2528e" prot="public" virt="virtual"><scope>wxGridCellEditor</scope><name>Destroy</name></member>
      <member refid="classwx_grid_cell_editor_1ac2258168ec052a369b4343bad61a8d99" prot="public" virt="virtual"><scope>wxGridCellEditor</scope><name>DoActivate</name></member>
      <member refid="classwx_grid_cell_editor_1a227445c6c3b66494b2428ecb683a9ae7" prot="public" virt="pure-virtual"><scope>wxGridCellEditor</scope><name>EndEdit</name></member>
      <member refid="classwx_client_data_container_1a2acdfa0e91eae2cf20c30cdab94ed76b" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>GetClientData</name></member>
      <member refid="classwx_client_data_container_1a3ea98fef1730f6b0771e7016214fb992" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>GetClientObject</name></member>
      <member refid="classwx_grid_cell_editor_1a4d0da78e0914ba2cefcb074dfa29064e" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>GetControl</name></member>
      <member refid="classwx_ref_counter_1a98ca5fc3fa6219d993dd3654925c46aa" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>GetRefCount</name></member>
      <member refid="classwx_grid_cell_editor_1a2dd2032fe1e396fd30686ff022a99d97" prot="public" virt="pure-virtual"><scope>wxGridCellEditor</scope><name>GetValue</name></member>
      <member refid="classwx_grid_cell_editor_1a456ef33da0c6a532e0b37ada8d9e51ed" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>GetWindow</name></member>
      <member refid="classwx_grid_cell_editor_1a265a3c935b3d5c204c8c75149fa0cb74" prot="public" virt="virtual"><scope>wxGridCellEditor</scope><name>HandleReturn</name></member>
      <member refid="classwx_ref_counter_1a9fec1fb6f778d9df7a8c046ad6a2d887" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>IncRef</name></member>
      <member refid="classwx_grid_cell_editor_1aad86a4fb5c83528f16d9022688f259d8" prot="public" virt="virtual"><scope>wxGridCellEditor</scope><name>IsAcceptedKey</name></member>
      <member refid="classwx_grid_cell_editor_1a9e0e19a87a387d243a0c07f12bc0a2de" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>IsCreated</name></member>
      <member refid="classwx_grid_cell_editor_1aa279d3b3e27d688570294c53eca1def4" prot="public" virt="virtual"><scope>wxGridCellEditor</scope><name>PaintBackground</name></member>
      <member refid="classwx_grid_cell_editor_1a027e54b196a9f30271cfaf28fc1e30b7" prot="public" virt="pure-virtual"><scope>wxGridCellEditor</scope><name>Reset</name></member>
      <member refid="classwx_client_data_container_1a3b291dde8d851583b00e6917af539d13" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>SetClientData</name></member>
      <member refid="classwx_client_data_container_1afc03e080cc61dd9acaac86b76965cbb5" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>SetClientObject</name></member>
      <member refid="classwx_grid_cell_editor_1ae9d8087c6b037194b0c7680d63555145" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>SetControl</name></member>
      <member refid="classwx_grid_cell_editor_1a76508cbb2989ce94aa3082f1a12e789f" prot="public" virt="virtual"><scope>wxGridCellEditor</scope><name>SetSize</name></member>
      <member refid="classwx_grid_cell_editor_1a1c181892931a4f57289cc27064930b67" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>SetWindow</name></member>
      <member refid="classwx_grid_cell_editor_1a1e69e1dac634ac0f24a5478002a9c576" prot="public" virt="virtual"><scope>wxGridCellEditor</scope><name>Show</name></member>
      <member refid="classwx_grid_cell_editor_1a222488a19f6f7d4562dd2ef390c01b0f" prot="public" virt="virtual"><scope>wxGridCellEditor</scope><name>StartingClick</name></member>
      <member refid="classwx_grid_cell_editor_1a814292778557067b6068f6ee966985dc" prot="public" virt="virtual"><scope>wxGridCellEditor</scope><name>StartingKey</name></member>
      <member refid="classwx_grid_cell_editor_1a9eb24dbc65c4c07543f4c975f09fedcc" prot="public" virt="virtual"><scope>wxGridCellEditor</scope><name>TryActivate</name></member>
      <member refid="classwx_client_data_container_1a7de68b5dc45762f7507840d9deac511b" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>wxClientDataContainer</name></member>
      <member refid="classwx_grid_cell_editor_1ae91db451fda342bc5456d38aeec8921a" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>wxGridCellEditor</name></member>
      <member refid="classwx_ref_counter_1aebcddb8241dfea7f60f8e4df6776a0e3" prot="public" virt="non-virtual"><scope>wxGridCellEditor</scope><name>wxRefCounter</name></member>
      <member refid="classwx_client_data_container_1a20946ab7128a84681ccb7d5da52ba695" prot="public" virt="virtual"><scope>wxGridCellEditor</scope><name>~wxClientDataContainer</name></member>
      <member refid="classwx_grid_cell_editor_1a91d23d6330afefa1323a6ca5d397fd2c" prot="protected" virt="virtual"><scope>wxGridCellEditor</scope><name>~wxGridCellEditor</name></member>
      <member refid="classwx_ref_counter_1aeaa9aceda6421eaa0d693cc29795263a" prot="protected" virt="virtual"><scope>wxGridCellEditor</scope><name>~wxRefCounter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
