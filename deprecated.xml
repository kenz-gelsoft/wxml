<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="deprecated" kind="page">
    <compoundname>deprecated</compoundname>
    <title>Deprecated List</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Member <ref refid="classwx_app_1a420a1cef557cfe2edaee6ffdaaa5f7fb" kindref="member">wxApp::MacOpenFile</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;fileName)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000001"/> This function is kept mostly for backwards compatibility. Please override <ref refid="classwx_app_1a0cf8d83fc9e1a7b7f911f29f05127d24" kindref="member">wxApp::MacOpenFiles</ref> method instead in any new code. </para>
</listitem>
<varlistentry><term>Member <ref refid="platinfo_8h_1ab2b4836af7d22393b06c1d4f110bdb4c" kindref="member">wxArchitecture</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000052"/>Use wxBitness instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_art_provider_1ae6090f32579d782205dd247006e4c7de" kindref="member">wxArtProvider::Insert</ref>  (<ref refid="classwx_art_provider" kindref="compound">wxArtProvider</ref> *provider)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000002"/>Use <ref refid="classwx_art_provider_1a55fe50769f0aeae2cf49860ef0b168d2" kindref="member">PushBack()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_aui_default_dock_art_1ab17edf41f4d8256fec45b0af53f8049c" kindref="member">wxAuiDefaultDockArt::DrawIcon</ref>  (<ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;dc, const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;rect, <ref refid="classwx_aui_pane_info" kindref="compound">wxAuiPaneInfo</ref> &amp;pane)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000003"/>Not intended for the public API.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_bitmap_1ac2d3b023cf64f90fa1257eb874ed015e" kindref="member">wxBitmap::SetDepth</ref>  (int depth)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000004"/>This function is deprecated since version 3.1.2, dimensions and depth can only be set at construction time. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_bitmap_1a0091921ee85f7444e846e6183ec64909" kindref="member">wxBitmap::SetHeight</ref>  (int height)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000005"/>This function is deprecated since version 3.1.2, dimensions and depth can only be set at construction time. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_bitmap_1a82c54a43db80f31c9ff70b0e18a1d972" kindref="member">wxBitmap::SetWidth</ref>  (int width)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000006"/>This function is deprecated since version 3.1.2, dimensions and depth can only be set at construction time. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_calendar_ctrl_1ab2e1f2d643c4a48f3d5cb2273e3a6e13" kindref="member">wxCalendarCtrl::EnableYearChange</ref>  (bool enable=true)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000007"/> </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_combo_ctrl_1aa7e582babb6a4e0379bccd7d2def16f6" kindref="member">wxComboCtrl::GetTextIndent</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000009"/>Use <ref refid="classwx_combo_ctrl_1a3ee7141dc6069fa9b520cd994d176eff" kindref="member">GetMargins()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_combo_ctrl_1a73d2d6ede7bdc0db63c08f81cd09a5e7" kindref="member">wxComboCtrl::HidePopup</ref>  (bool generateEvent=false)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000010"/>Use <ref refid="classwx_combo_ctrl_1a56867b1c18641c21fcd518ce43efbf99" kindref="member">Dismiss()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_combo_ctrl_1ae38353a81954d02af302ba103e984cb7" kindref="member">wxComboCtrl::SetTextIndent</ref>  (int indent)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000011"/>Use <ref refid="classwx_combo_ctrl_1ae2b983f401d92ccc38f2bed47fb4d76b" kindref="member">SetMargins()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_combo_ctrl_1ae87a04c471bfcac5ab0d370ac9edddbc" kindref="member">wxComboCtrl::ShowPopup</ref>  ()</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000012"/>Use <ref refid="classwx_combo_ctrl_1afda0208f5c2a31d504e230c36546fe8d" kindref="member">Popup()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_data_view_custom_renderer_1a242d0992df73be6830e66d74b211974d" kindref="member">wxDataViewCustomRenderer::Activate</ref>  (<ref refid="classwx_rect" kindref="compound">wxRect</ref> cell, <ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *model, const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;item, unsigned int col)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000014"/>Use ActivateCell instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_data_view_custom_renderer_1ab7fe7693a94fee896eb0b60b843cd474" kindref="member">wxDataViewCustomRenderer::LeftClick</ref>  (<ref refid="classwx_point" kindref="compound">wxPoint</ref> cursor, <ref refid="classwx_rect" kindref="compound">wxRect</ref> cell, <ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *model, const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;item, unsigned int col)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000013"/>Use ActivateCell instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_debug_context_1aa2175db985d125950314331d790428c2" kindref="member">wxDebugContext::GetLevel</ref>  ()</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000042"/> This is obsolete, replaced by <ref refid="classwx_log" kindref="compound">wxLog</ref> functionality. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_debug_context_1ad96f255b65d4b0a3a6429ba9ce991ffb" kindref="member">wxDebugContext::SetLevel</ref>  (int level)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000043"/> This is obsolete, replaced by <ref refid="classwx_log" kindref="compound">wxLog</ref> functionality. </para>
</listitem>
<varlistentry><term>Member <ref refid="filefn_8h_1a42358e18253927c01bfc5f48e6778075" kindref="member">wxDos2UnixFilename</ref>  (wxChar *s)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000017"/> Construct a <ref refid="classwx_file_name" kindref="compound">wxFileName</ref> with wxPATH_DOS and then use wxFileName::GetFullPath(wxPATH_UNIX) instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="filefn_8h_1a2414d8f9b3d08370551b0609eef5f0db" kindref="member">wxFileNameFromPath</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;path)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000021"/> This function is obsolete, please use <ref refid="classwx_file_name_1a4f06c2499ce10643e41175405b93e61c" kindref="member">wxFileName::SplitPath()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="utils_8h_1af7b00742bad6e22827cb2292934775ac" kindref="member">wxFindWindowByLabel</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;label, <ref refid="classwx_window" kindref="compound">wxWindow</ref> *parent=NULL)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000084"/>Replaced by <ref refid="classwx_window_1a18f42acd37805eb7bad6b7a18c87e0f5" kindref="member">wxWindow::FindWindowByLabel()</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="utils_8h_1ae6bcd56f1bed6f58b7d76548c22ba42e" kindref="member">wxFindWindowByName</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;name, <ref refid="classwx_window" kindref="compound">wxWindow</ref> *parent=NULL)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000085"/>Replaced by <ref refid="classwx_window_1ad2abfb345618b1f3961721ecd6f41511" kindref="member">wxWindow::FindWindowByName()</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="utils_8h_1a9df97118e6514b933b0aa755ff62964d" kindref="member">wxGetEmailAddress</ref>  (char *buf, int sz)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000088"/>Use <ref refid="utils_8h_1a58315189fa6c3c70c8c3e040fd592d97" kindref="member">wxGetEmailAddress()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="utils_8h_1a6f8c550ed86ea82ac363e925db7026f5" kindref="member">wxGetHostName</ref>  (char *buf, int sz)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000089"/>Use <ref refid="utils_8h_1a25dd53a4a5aab23305b8e4e9c5ff730b" kindref="member">wxGetHostName()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="filefn_8h_1abdfe71e3356e02d8cb8e2c1e9d20cdde" kindref="member">wxGetTempFileName</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;prefix, char *buf=NULL)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000022"/> This function is obsolete, please use <ref refid="classwx_file_name_1a416af84fddd624a3b457dbffbe174317" kindref="member">wxFileName::CreateTempFileName()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="utils_8h_1ac27162ecb34dab557506f6a612df6211" kindref="member">wxGetUserId</ref>  (char *buf, int sz)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000090"/>Use <ref refid="utils_8h_1ab1ebfcd4741550d6f7aa6f8a8952f4f3" kindref="member">wxGetUserId()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="utils_8h_1aae7f8332d69c28360110242de6f3d3e1" kindref="member">wxGetUserName</ref>  (char *buf, int sz)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000091"/>Use <ref refid="utils_8h_1a37cb8272601e8c81e2ee53ee50e64a8e" kindref="member">wxGetUserName()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="filefn_8h_1a139aabab52fdd09c37716662d6a47110" kindref="member">wxGetWorkingDirectory</ref>  (char *buf=NULL, int sz=1000)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000020"/>This function is deprecated, use <ref refid="filefn_8h_1ab0cc6ceca11d23f61cba353c01eeac06" kindref="member">wxGetCwd()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_grid_1a83774c9cbf840641cc6ffba25ce32059" kindref="member">wxGrid::SetCellAlignment</ref>  (int align, int row, int col)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000023"/>Please use SetCellAlignment(row, col, horiz, vert) instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_grid_1acec369b195d29fe8aaa16772989240f1" kindref="member">wxGrid::SetCellTextColour</ref>  (const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;colour)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000025"/>Please use SetDefaultCellTextColour(colour) instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_grid_1adbcbd091140c6adf0f8d04ea1642b24d" kindref="member">wxGrid::SetCellTextColour</ref>  (const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;val, int row, int col)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000024"/>Please use SetCellTextColour(row, col, colour)  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_grid_1ae8954e4868ef687120064e9ac580287c" kindref="member">wxGrid::SetCellValue</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;val, int row, int col)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000026"/>Please use <ref refid="classwx_grid_1aabb3c207aa790ea5702593ade8a53962" kindref="member">SetCellValue(int,int,const wxString&amp;)</ref> or <ref refid="classwx_grid_1af014f09c7e47dfa3ef9a9857a1adbba5" kindref="member">SetCellValue(const wxGridCellCoords&amp;,const wxString&amp;)</ref> instead. </para>
</listitem>
<varlistentry><term>Class <ref refid="classwx_hash_table" kindref="compound">wxHashTable</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000027"/> Please note that this class is retained for backward compatibility reasons; you should use <ref refid="classwx_hash_map" kindref="compound">wxHashMap</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_help_controller_base_1acef270454911598d88e31016124f487c" kindref="member">wxHelpControllerBase::DisplayBlock</ref>  (long blockNo)=0</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000028"/> This function is for backward compatibility only, and applications should use <ref refid="classwx_help_controller_base_1a57ad6b821d19d61de836a445fb9a1365" kindref="member">DisplaySection()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_html_tag_1ab404b3defb527cded69458f15687ab19" kindref="member">wxHtmlTag::GetBeginPos</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000029"/> </para>
<para></para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_html_tag_1a0d750710492a9b3f2c4f35a8a4ae8573" kindref="member">wxHtmlTag::GetEndPos1</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000030"/> </para>
<para></para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_html_tag_1a6d1a3a5b349ac37c05303f38b81bbfc1" kindref="member">wxHtmlTag::GetEndPos2</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000031"/> </para>
<para></para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_iconize_event_1a2a17047670a2c6d208fc16951c112be6" kindref="member">wxIconizeEvent::Iconized</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000016"/>This function is deprecated in favour of <ref refid="classwx_iconize_event_1a0f6c68ec519a3af9fd22cefdd52d31a8" kindref="member">IsIconized()</ref>.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_list_3_01_t_01_4_1a0bc4f5bfd1ed91dbefc228c1e7b8109a" kindref="member">wxList&lt; T &gt;::Nth</ref>  (int n) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000033"/>This function is deprecated, use <ref refid="classwx_list_3_01_t_01_4_1aef79a8ca76419296cc9178f839797568" kindref="member">Item()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_list_3_01_t_01_4_1a165d65471445feea5ce8383df34598f4" kindref="member">wxList&lt; T &gt;::Number</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000034"/>This function is deprecated, use wxList::GetCount instead. Returns the number of elements in the list.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_locale_1a294bb96e0162dd844a64f9f6ce260030" kindref="member">wxLocale::Init</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;name, const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;shortName=wxEmptyString, const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;locale=wxEmptyString, bool bLoadDefault=true)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000032"/> This form is deprecated, use the other one unless you know what you are doing. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_log_formatter_1afa0bc239a48f3fbdbb6102f61dd38495" kindref="member">wxLogFormatter::FormatTime</ref>  (time_t time) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000037"/>This function only exists for compatibility, please override <ref refid="classwx_log_formatter_1a382d2f965146ae33201d771fa1041364" kindref="member">FormatTimeMS()</ref> in the new code. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_log_record_info_1a702d51504b8ae8b313f642de68f38964" kindref="member">wxLogRecordInfo::timestamp</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000036"/>Please use timestampMS instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="interface_2wx_2log_8h_1ae28a46b220921cd87a6f75f0842294c5" kindref="member">wxLogTrace</ref>  (wxTraceMask mask, const char *formatString,...)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000035"/> This version of <ref refid="interface_2wx_2log_8h_1a947e317db477914c12b13c4534867ec9" kindref="member">wxLogTrace()</ref> only logs the message if all the bits corresponding to the <emphasis>mask</emphasis> are set in the <ref refid="classwx_log" kindref="compound">wxLog</ref> trace mask which can be set by calling wxLog::SetTraceMask(). This version is less flexible than <ref refid="interface_2wx_2log_8h_1a947e317db477914c12b13c4534867ec9" kindref="member">wxLogTrace(const char*,const char*,...)</ref> because it doesn&apos;t allow defining the user trace masks easily. This is why it is deprecated in favour of using string trace masks. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_m_b_conv_1ae4582332f44606da0a0101b546093cb3" kindref="member">wxMBConv::MB2WC</ref>  (wchar_t *out, const char *in, size_t outLen) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000078"/>This function is deprecated, please use <ref refid="classwx_m_b_conv_1a78f42e20f5ea3b4de70d35881fc84206" kindref="member">ToWChar()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_m_b_conv_1a1db345936fa382d8ccb78160ff896f39" kindref="member">wxMBConv::WC2MB</ref>  (char *buf, const wchar_t *psz, size_t n) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000079"/>This function is deprecated, please use <ref refid="classwx_m_b_conv_1a60b29e90d06bc49f09485b611384c6e0" kindref="member">FromWChar()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_menu_1afcd6a1a05161bd4c6c02656eca01eb1b" kindref="member">wxMenu::Append</ref>  (int id, const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;item, <ref refid="classwx_menu" kindref="compound">wxMenu</ref> *subMenu, const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;helpString=wxEmptyString)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000046"/>This function is deprecated, use <ref refid="classwx_menu_1a778d7e9b333967e5ae3954135fc730c8" kindref="member">AppendSubMenu()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_menu_bar_1aa9218c08512f7931900400e7eb6324db" kindref="member">wxMenuBar::GetLabelTop</ref>  (size_t pos) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000044"/> This function is deprecated in favour of <ref refid="classwx_menu_bar_1ae177b639c9a6281a4bb0f202f8758b61" kindref="member">GetMenuLabel()</ref> and <ref refid="classwx_menu_bar_1a9a9b0bf227387c5c2b9ab291bfdf3027" kindref="member">GetMenuLabelText()</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_menu_bar_1ab21c09c911ec182f1b4fe566350b2437" kindref="member">wxMenuBar::SetLabelTop</ref>  (size_t pos, const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;label)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000045"/> This function has been deprecated in favour of <ref refid="classwx_menu_bar_1a66a14aec7caeff702f964cd35085cf06" kindref="member">SetMenuLabel()</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_menu_item_1af06afee62f1353ad4ba3f44b660f9ff8" kindref="member">wxMenuItem::GetLabel</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000048"/>This function is deprecated in favour of <ref refid="classwx_menu_item_1a8f8c25b7e46072f5f6e51856cae53584" kindref="member">GetItemLabelText()</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_menu_item_1af8f7bb0c7ca8808047c3c97b564069ed" kindref="member">wxMenuItem::GetLabelFromText</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;text)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000047"/>This function is deprecated; please use <ref refid="classwx_menu_item_1afed23d53a97171076763385c93207fc0" kindref="member">GetLabelText()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_menu_item_1a68742e3454fdbda3756d3838744bc4d7" kindref="member">wxMenuItem::GetName</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000049"/>This function is deprecated. Please use <ref refid="classwx_menu_item_1a7ca185aa5c527d13b8c62d3e01c3471a" kindref="member">GetItemLabel()</ref> or <ref refid="classwx_menu_item_1a8f8c25b7e46072f5f6e51856cae53584" kindref="member">GetItemLabelText()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_menu_item_1ad4f4dcd78f87a9124940beac198283c9" kindref="member">wxMenuItem::GetText</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000050"/>This function is deprecated in favour of <ref refid="classwx_menu_item_1a7ca185aa5c527d13b8c62d3e01c3471a" kindref="member">GetItemLabel()</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_menu_item_1a742aa5bb0d3faa020e7b3bd66e336499" kindref="member">wxMenuItem::SetText</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;text)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000051"/>This function is deprecated in favour of <ref refid="classwx_menu_item_1a8b0517fb35e3eada66b51568aa87f261" kindref="member">SetItemLabel()</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="utils_8h_1ac56f3e17777510f8e02a0ec5cd5ff281" kindref="member">wxNewId</ref>  ()</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000086"/>Ids generated by it can conflict with the Ids defined by the user code, use <computeroutput>wxID_ANY</computeroutput> to assign ids which are guaranteed to not conflict with the user-defined ids for the controls and menu items you create instead of using this function. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_p_g_property_1a6797d35591eb3d6e63067d7d073c445f" kindref="member">wxPGProperty::AddChild</ref>  (<ref refid="classwx_p_g_property" kindref="compound">wxPGProperty</ref> *prop)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000059"/>Use <ref refid="classwx_p_g_property_1abec97e799f836560d4f65c7c5fc97f6f" kindref="member">AddPrivateChild()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_p_g_property_1a6e112857a11de630e43058c8ec0b8736" kindref="member">wxPGProperty::GetValueString</ref>  (int argFlags=0) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000060"/>Use <ref refid="classwx_p_g_property_1a22451b135458443be5e1c6cfde72a515" kindref="member">GetValueAsString()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_platform_info_1a973411fc736a2af8b47058043700d7ff" kindref="member">wxPlatformInfo::GetArch</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;arch)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000053"/>Use <ref refid="classwx_platform_info_1a26182a170d7f7f3e33dc7396b843f6f8" kindref="member">GetBitness()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_platform_info_1aa61f9723f78e5903b507ad2b356fc795" kindref="member">wxPlatformInfo::GetArchitecture</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000055"/>Use <ref refid="classwx_platform_info_1a26182a170d7f7f3e33dc7396b843f6f8" kindref="member">GetBitness()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_platform_info_1a981f95a16df7c173da1f72a4dca5b3d8" kindref="member">wxPlatformInfo::GetArchName</ref>  (wxArchitecture arch)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000054"/>Use <ref refid="classwx_platform_info_1a4e0ea021618d8c08f5f09c13ae53211d" kindref="member">GetBitnessName()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_platform_info_1ae14ec6920c2d0a46f5d354c3f758274f" kindref="member">wxPlatformInfo::GetArchName</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000056"/>Use <ref refid="classwx_platform_info_1a4e0ea021618d8c08f5f09c13ae53211d" kindref="member">GetBitnessName()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_platform_info_1ad2038a9778e0ff8b57020f3cf3403fd4" kindref="member">wxPlatformInfo::SetArchitecture</ref>  (wxArchitecture n)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000057"/>Use <ref refid="classwx_platform_info_1a427251088f300ebdbdba6c0717266c1a" kindref="member">SetBitness()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="utils_8h_1af617bfe542c74d75f97adeab88fab2e6" kindref="member">wxPostDelete</ref>  (<ref refid="classwx_object" kindref="compound">wxObject</ref> *object)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000087"/>Replaced by <ref refid="classwx_window_1a3e44f4a494fc9ef4346c4fba70c8de0c" kindref="member">wxWindow::Close()</ref>. See the <ref refid="overview_windowdeletion" kindref="compound">window deletion overview</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_print_dialog_data_1a3a514f2b8acfc4b6d6117db088cc0f6a" kindref="member">wxPrintDialogData::SetSetupDialog</ref>  (bool flag)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000008"/>This function has been deprecated since version 2.5.4. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_printer_1a9e6eeeaa72bef57ea7f8e7f5e1f148bd" kindref="member">wxPrinter::Setup</ref>  (<ref refid="classwx_window" kindref="compound">wxWindow</ref> *parent)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000058"/> The setup dialog is obsolete, though retained for backward compatibility.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_show_event_1a0b620f8f04b5dbc0b7e2a3e2a27e50dc" kindref="member">wxShowEvent::GetShow</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000015"/>This function is deprecated in favour of <ref refid="classwx_show_event_1a99b36934317d1c96cf30d8c97524a39b" kindref="member">IsShown()</ref>.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_sizer_1a06ef74a0bb6aba1f1d3aab02fb402fec" kindref="member">wxSizer::Remove</ref>  (<ref refid="classwx_window" kindref="compound">wxWindow</ref> *window)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000061"/> The overload of this method taking a wxWindow* parameter is deprecated as it does not destroy the window as would usually be expected from <ref refid="classwx_sizer_1a06ef74a0bb6aba1f1d3aab02fb402fec" kindref="member">Remove()</ref>. You should use <ref refid="classwx_sizer_1a362d7d556185fe9cd1b5d24004b86518" kindref="member">Detach()</ref> in new code instead. There is currently no <ref refid="classwx_sizer" kindref="compound">wxSizer</ref> method that will both detach and destroy a <ref refid="classwx_window" kindref="compound">wxWindow</ref> item. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_sizer_1a92cab30589d91cc09028a3abfefe6221" kindref="member">wxSizer::SetVirtualSizeHints</ref>  (<ref refid="classwx_window" kindref="compound">wxWindow</ref> *window)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000062"/>This is exactly the same as <ref refid="classwx_sizer_1a37904ed600fd389345295ff89aa09fdc" kindref="member">FitInside()</ref> in wxWidgets 2.9 and later, please replace calls to it with <ref refid="classwx_sizer_1a37904ed600fd389345295ff89aa09fdc" kindref="member">FitInside()</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_sizer_item_1a4c4af76c0686e00b50ff9a238288386c" kindref="member">wxSizerItem::SetSizer</ref>  (<ref refid="classwx_sizer" kindref="compound">wxSizer</ref> *sizer)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000063"/>This function does not free the old sizer which may result in memory leaks, use <ref refid="classwx_sizer_item_1adfbb98b4173df43be52d9c25d4f842b4" kindref="member">AssignSizer()</ref> which does free it instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_sizer_item_1a83baa6835015e9ccd71ba290883db4f5" kindref="member">wxSizerItem::SetSpacer</ref>  (const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;size)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000064"/>This function does not free the old spacer which may result in memory leaks, use <ref refid="classwx_sizer_item_1ad6e478ed2a645b8f18642d7d3194278a" kindref="member">AssignSpacer()</ref> which does free it instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_sizer_item_1a9a310e236fa40720fe17a7d08ae4a1a6" kindref="member">wxSizerItem::SetWindow</ref>  (<ref refid="classwx_window" kindref="compound">wxWindow</ref> *window)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000065"/> </para>
<para></para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_socket_base_1ae81333cc7920ce24f0cb579f21f92ebb" kindref="member">wxSocketBase::LastCount</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000066"/> This function is kept mostly for backwards compatibility. Use <ref refid="classwx_socket_base_1a91b13644fcdc43bff9d67347101642a0" kindref="member">LastReadCount()</ref> or <ref refid="classwx_socket_base_1a416a04dbfcd89aea7fe5e5aa305b64e7" kindref="member">LastWriteCount()</ref> instead. <ref refid="classwx_socket_base_1ae81333cc7920ce24f0cb579f21f92ebb" kindref="member">LastCount()</ref> is still needed for use with less commonly used functions: <ref refid="classwx_socket_base_1a50dbb2d0ad42a0c970177c284cb76309" kindref="member">Discard()</ref>, <ref refid="classwx_socket_base_1ab8bb6646627bbf4b2929bb6f799aa754" kindref="member">Peek()</ref>, and <ref refid="classwx_socket_base_1a74f146f45415bb4be3d83e12034cdd85" kindref="member">Unread()</ref>.  </para>
</listitem>
<varlistentry><term>Member <ref refid="filefn_8h_1a3ab12077f51f54497b7ce829a4339326" kindref="member">wxSplitPath</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;fullname, <ref refid="classwx_string" kindref="compound">wxString</ref> *path, <ref refid="classwx_string" kindref="compound">wxString</ref> *name, <ref refid="classwx_string" kindref="compound">wxString</ref> *ext)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000019"/> This function is obsolete, please use <ref refid="classwx_file_name_1a4f06c2499ce10643e41175405b93e61c" kindref="member">wxFileName::SplitPath()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="stc_8h_1a217f4ef0e9629aefb3f00782f060824f" kindref="member">wxSTC_INDIC0_MASK</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000067"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="stc_8h_1af38b3c55969fa98f9c0e5adeb0fc2ff3" kindref="member">wxSTC_INDIC1_MASK</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000068"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="stc_8h_1a5d444844cf644eaefc147421c76b6e2f" kindref="member">wxSTC_INDIC2_MASK</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000069"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="stc_8h_1a3325c0da40c007724aa8521f25006d15" kindref="member">wxSTC_INDICS_MASK</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000070"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_stream_buffer_1ab30bdcc98a70178577b304ec43e1c110" kindref="member">wxStreamBuffer::Stream</ref>  ()</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000080"/>use GetStream() instead  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_styled_text_ctrl_1a84a5736b6e7c2def386362cd51fa5881" kindref="member">wxStyledTextCtrl::GetStyleBits</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000072"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_styled_text_ctrl_1ae20fc9ec35cd194e2f98b223b5c333f4" kindref="member">wxStyledTextCtrl::GetStyleBitsNeeded</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000073"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_styled_text_ctrl_1a9d9f2fc0cc7f4f10e437139602f69b18" kindref="member">wxStyledTextCtrl::SetStyleBits</ref>  (int bits)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000071"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_styled_text_event_1a8fcde815326750cc413db29532386c92" kindref="member">wxStyledTextEvent::GetDragText</ref>  ()</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000074"/>Use <ref refid="classwx_command_event_1a6aef039e72e358840a7c20da6473e9ae" kindref="member">GetString()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_styled_text_event_1a1ab0fe80affb57ba977a0dea21e0a615" kindref="member">wxStyledTextEvent::GetText</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000075"/>Use <ref refid="classwx_command_event_1a6aef039e72e358840a7c20da6473e9ae" kindref="member">GetString()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_styled_text_event_1ad0a642b038ae175f2bdc96e0e182d3dc" kindref="member">wxStyledTextEvent::SetDragText</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;val)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000076"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_styled_text_event_1a0e2f8c57dde6dafbb54bb5bf067b373d" kindref="member">wxStyledTextEvent::SetText</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;t)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000077"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_text_input_stream_1a29eb32a28f132159ae8fc0e51a487678" kindref="member">wxTextInputStream::ReadString</ref>  ()</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000083"/>Use <ref refid="classwx_text_input_stream_1ab6a53dda37e49a69be09a7dbe881729d" kindref="member">ReadLine()</ref> or <ref refid="classwx_text_input_stream_1aa8ce6095e1f7710c3a066b9ff9ff7588" kindref="member">ReadWord()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_thread_helper_1ae9f65014cb9c8ef1d27f22d6259c0fc2" kindref="member">wxThreadHelper::Create</ref>  (unsigned int stackSize=0)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000081"/> Use <ref refid="classwx_thread_helper_1a3682b1b5a08741335aa8acc7feb0ece5" kindref="member">CreateThread()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_tool_bar_1add255ea52fdf9d5bfde64a22bf94dab6" kindref="member">wxToolBar::OnRightClick</ref>  (int toolId, long x, long y)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000082"/>This is the old way of detecting tool right clicks; although it will still work, you should use the EVT_TOOL_RCLICKED() macro instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="memory_8h_1ac125720c9e98ed47efb181cbc0c05b9e" kindref="member">wxTrace</ref>  (const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;format,...)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000040"/>Use one of the <ref refid="interface_2wx_2log_8h_1a947e317db477914c12b13c4534867ec9" kindref="member">wxLogTrace()</ref> functions or one of the <ref refid="interface_2wx_2log_8h_1a61890f9e44dff168137195c6f2aefe72" kindref="member">wxVLogTrace()</ref> functions instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="memory_8h_1a877ebb06724f99595f74396cc8823b5f" kindref="member">WXTRACE</ref>  (format,...)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000038"/>Use one of the <ref refid="interface_2wx_2log_8h_1a947e317db477914c12b13c4534867ec9" kindref="member">wxLogTrace()</ref> functions or one of the <ref refid="interface_2wx_2log_8h_1a61890f9e44dff168137195c6f2aefe72" kindref="member">wxVLogTrace()</ref> functions instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="memory_8h_1acd709b9186e93bd04c01bd635c7a2cb2" kindref="member">wxTraceLevel</ref>  (int level, const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;format,...)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000041"/>Use one of the <ref refid="interface_2wx_2log_8h_1a947e317db477914c12b13c4534867ec9" kindref="member">wxLogTrace()</ref> functions or one of the <ref refid="interface_2wx_2log_8h_1a61890f9e44dff168137195c6f2aefe72" kindref="member">wxVLogTrace()</ref> functions instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="memory_8h_1aaa8834ddec3fb37c0e07d16a2a29c38e" kindref="member">WXTRACELEVEL</ref>  (level, format,...)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000039"/>Use one of the <ref refid="interface_2wx_2log_8h_1a947e317db477914c12b13c4534867ec9" kindref="member">wxLogTrace()</ref> functions or one of the <ref refid="interface_2wx_2log_8h_1a61890f9e44dff168137195c6f2aefe72" kindref="member">wxVLogTrace()</ref> functions instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="filefn_8h_1aae581d4a5d5a334a0e10ed53470312be" kindref="member">wxUnix2DosFilename</ref>  (wxChar *s)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000018"/> Construct a <ref refid="classwx_file_name" kindref="compound">wxFileName</ref> with wxPATH_UNIX and then use wxFileName::GetFullPath(wxPATH_DOS) instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="utils_8h_1ac19b07b94bdf832cca9666b06f7d2882" kindref="member">wxUsleep</ref>  (unsigned long milliseconds)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000092"/>This function is deprecated because its name is misleading: notice that the argument is in milliseconds, not microseconds. Please use either <ref refid="utils_8h_1a66778879349f76fd833902d3767006fa" kindref="member">wxMilliSleep()</ref> or <ref refid="utils_8h_1a21baed39430c5dae8517c4bd87fcf357" kindref="member">wxMicroSleep()</ref> depending on the resolution you need. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_web_view_i_e_1a9d019b4175c534429653ac740c5513fa" kindref="member">wxWebViewIE::MSWSetModernEmulationLevel</ref>  (bool modernLevel=true)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000093"/> This function is kept mostly for backwards compatibility. </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_window_1ae6dfe0b0d4a8c666b21ce8df8d96727b" kindref="member">wxWindow::SetInitialBestSize</ref>  (const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;size)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000095"/>Use <ref refid="classwx_window_1a1b309ca50ba87e34f968c83b79af1397" kindref="member">SetInitialSize()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classwx_window_1aee57358435d6bd33f598c81354b47425" kindref="member">wxWindow::SetPalette</ref>  (const <ref refid="classwx_palette" kindref="compound">wxPalette</ref> &amp;pal)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000094"/>use <ref refid="classwx_d_c_1afc58b0f4653159e713377d38c84a120f" kindref="member">wxDC::SetPalette</ref> instead. </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="deprecated"/>
  </compounddef>
</doxygen>
