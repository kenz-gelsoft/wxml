<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="translation_8h" kind="file" language="C++">
    <compoundname>translation.h</compoundname>
    <innerclass refid="classwx_translations" prot="public">wxTranslations</innerclass>
    <innerclass refid="classwx_translations_loader" prot="public">wxTranslationsLoader</innerclass>
    <innerclass refid="classwx_file_translations_loader" prot="public">wxFileTranslationsLoader</innerclass>
    <innerclass refid="classwx_resource_translations_loader" prot="public">wxResourceTranslationsLoader</innerclass>
    <innerclass refid="classwx_msg_catalog" prot="public">wxMsgCatalog</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="translation_8h_1adc7c2f1bab3914af93feb47945003409" prot="public" static="no">
        <name>wxPLURAL</name>
        <param><defname>string</defname></param>
        <param><defname>plural</defname></param>
        <param><defname>n</defname></param>
        <briefdescription>
<para>This macro is identical to <ref refid="translation_8h_1a63ac344fa98fcb51cef18e5a9b8a916d" kindref="member">_()</ref> but for the plural variant of <ref refid="translation_8h_1a460d07961e771004f3e8535ec4ce428f" kindref="member">wxGetTranslation()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A const <ref refid="classwx_string" kindref="compound">wxString</ref>.</para>
</simplesect>
Include file:<linebreak/>
 <verbatim>#include &lt;wx/intl.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="455" column="9" bodyfile="interface/wx/translation.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="translation_8h_1ac79e2825b4bff2f2f0be00d8ee05c540" prot="public" static="no">
        <name>wxGETTEXT_IN_CONTEXT</name>
        <param><defname>context</defname></param>
        <param><defname>string</defname></param>
        <briefdescription>
<para>Similar to <ref refid="translation_8h_1a63ac344fa98fcb51cef18e5a9b8a916d" kindref="member">_()</ref> but translates the string in the given context. </para>
        </briefdescription>
        <detaileddescription>
<para>See the description of <computeroutput>context</computeroutput> argument of <ref refid="translation_8h_1a460d07961e771004f3e8535ec4ce428f" kindref="member">wxGetTranslation()</ref>.</para>
<para><simplesect kind="see"><para><ref refid="translation_8h_1a360b544a95df511561c930c70c55280d" kindref="member">wxGETTEXT_IN_CONTEXT_PLURAL()</ref></para>
</simplesect>
<simplesect kind="since"><para>3.1.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="466" column="9" bodyfile="interface/wx/translation.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="translation_8h_1a360b544a95df511561c930c70c55280d" prot="public" static="no">
        <name>wxGETTEXT_IN_CONTEXT_PLURAL</name>
        <param><defname>context</defname></param>
        <param><defname>string</defname></param>
        <param><defname>plural</defname></param>
        <param><defname>n</defname></param>
        <briefdescription>
<para>Similar to <ref refid="translation_8h_1adc7c2f1bab3914af93feb47945003409" kindref="member">wxPLURAL()</ref> but translates the string in the given context. </para>
        </briefdescription>
        <detaileddescription>
<para>See the description of <computeroutput>context</computeroutput> argument of <ref refid="translation_8h_1a460d07961e771004f3e8535ec4ce428f" kindref="member">wxGetTranslation()</ref>.</para>
<para><simplesect kind="see"><para><ref refid="translation_8h_1ac79e2825b4bff2f2f0be00d8ee05c540" kindref="member">wxGETTEXT_IN_CONTEXT()</ref></para>
</simplesect>
<simplesect kind="since"><para>3.1.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="477" column="9" bodyfile="interface/wx/translation.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="translation_8h_1ab8862de0f74049708bfea75ae9e14c45" prot="public" static="no">
        <name>wxTRANSLATE</name>
        <param><defname>string</defname></param>
        <briefdescription>
<para>This macro doesn&apos;t do anything in the program code <ndash/> it simply expands to the value of its argument. </para>
        </briefdescription>
        <detaileddescription>
<para>However it does have a purpose which is to mark the literal strings for the extraction into the message catalog created by <computeroutput>xgettext</computeroutput> program. Usually this is achieved using <ref refid="translation_8h_1a63ac344fa98fcb51cef18e5a9b8a916d" kindref="member">_()</ref> but that macro not only marks the string for extraction but also expands into a <ref refid="translation_8h_1a460d07961e771004f3e8535ec4ce428f" kindref="member">wxGetTranslation()</ref> call which means that it cannot be used in some situations, notably for static array initialization.</para>
<para>Here is an example which should make it more clear: suppose that you have a static array of strings containing the names of chemical elements, which have to be translated. If you write:</para>
<para><programlisting><codeline><highlight class="normal">static<sp/>const<sp/>char<sp/>*<sp/>const<sp/>elements[]<sp/>=<sp/>{<sp/>_(&quot;Hydrogen&quot;),<sp/>_(&quot;Helium&quot;),<sp/>...<sp/>};</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">//<sp/>use<sp/>elements[n]<sp/>as<sp/>usual</highlight></codeline>
</programlisting></para>
<para>The code would compile and run, but there would be no translations for the strings because static variables are initialized at a very early stage of program execution; that is, before the locale and paths to message catalog files have been set up. So instead you should do this:</para>
<para><programlisting><codeline><highlight class="normal">static<sp/>const<sp/>char<sp/>*<sp/>const<sp/>elements[]<sp/>=<sp/>{<sp/>wxTRANSLATE(&quot;Hydrogen&quot;),</highlight></codeline>
<codeline><highlight class="normal">wxTRANSLATE(&quot;Helium&quot;),<sp/>...<sp/>};</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">//<sp/>use<sp/>wxGetTranslation(elements[n])</highlight></codeline>
</programlisting></para>
<para>Note that if you simply omit <ref refid="translation_8h_1ab8862de0f74049708bfea75ae9e14c45" kindref="member">wxTRANSLATE()</ref> above, those strings would not be marked for translation, and would therefore not be included in the message catalog. Consequently, <ref refid="translation_8h_1a460d07961e771004f3e8535ec4ce428f" kindref="member">wxGetTranslation()</ref> would not find translations for them.</para>
<para><simplesect kind="return"><para>A const wxChar*.</para>
</simplesect>
Include file:<linebreak/>
 <verbatim>#include &lt;wx/intl.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="522" column="9" bodyfile="interface/wx/translation.h" bodystart="522" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="translation_8h_1a460d07961e771004f3e8535ec4ce428f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; wxGetTranslation</definition>
        <argsstring>(const wxString &amp;string, const wxString &amp;domain=wxEmptyString, const wxString &amp;context=wxEmptyString)</argsstring>
        <name>wxGetTranslation</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>domain</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <briefdescription>
<para>This function returns the translation of <emphasis>string</emphasis> in the current <computeroutput>locale()</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If the string is not found in any of the loaded message catalogs (see <ref refid="overview_i18n" kindref="compound">Internationalization</ref>), the original string is returned. If you enable logging of trace messages with &quot;i18n&quot; mask (using <ref refid="classwx_log_1a4c11ee23ce5264b6c5921a17610cda13" kindref="member">wxLog::AddTraceMask()</ref>) and debug logging is enabled (see <ref refid="overview_debugging" kindref="compound">Debugging</ref>), a message is also logged in this case <ndash/> which helps to find the strings which were not yet translated.</para>
<para>If <emphasis>domain</emphasis> is specified then only that domain/catalog is searched for a matching string. As this function is used very often, an alternative (and also common in Unix world) syntax is provided: the <ref refid="translation_8h_1a63ac344fa98fcb51cef18e5a9b8a916d" kindref="member">_()</ref> macro is defined to do the same thing as <ref refid="translation_8h_1a460d07961e771004f3e8535ec4ce428f" kindref="member">wxGetTranslation()</ref>.</para>
<para>If <emphasis>context</emphasis> is not empty (notice that this argument is only available starting from wxWidgets 3.1.1), item translation is looked up in the specified context. This allows having different translations for the same string appearing in different contexts, e.g. it may be necessary to translate the same English &quot;Open&quot; verb differently depending on the object it applies to. To do this, you need to use <computeroutput>msgctxt</computeroutput> in the source message catalog and specify different contexts for the different occurrences of the string and then use the same contexts in the calls to this function (or <ref refid="translation_8h_1ac79e2825b4bff2f2f0be00d8ee05c540" kindref="member">wxGETTEXT_IN_CONTEXT()</ref> or <ref refid="translation_8h_1a360b544a95df511561c930c70c55280d" kindref="member">wxGETTEXT_IN_CONTEXT_PLURAL()</ref> macros).</para>
<para>This function is thread-safe.</para>
<para><simplesect kind="note"><para>This function is not suitable for literal strings using <ref refid="chartype_8h_1a437ea6ba615b75dac8603e96ec864160" kindref="member">wxT()</ref> macro since this macro is not recognised by <computeroutput>xgettext</computeroutput>, and so such strings are not extracted to the message catalog. Instead, use the <ref refid="translation_8h_1a63ac344fa98fcb51cef18e5a9b8a916d" kindref="member">_()</ref> and <ref refid="translation_8h_1adc7c2f1bab3914af93feb47945003409" kindref="member">wxPLURAL()</ref> macro for all literal strings.</para>
</simplesect>
<simplesect kind="see"><para>wxGetTranslation(const wxString&amp;, const wxString&amp;, unsigned, const wxString&amp;)</para>
</simplesect>
Include file:<linebreak/>
 <verbatim>#include &lt;wx/intl.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="561" column="16" declfile="interface/wx/translation.h" declline="561" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="translation_8h_1af4330cc4a14c99c954935c0747c9131f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; wxGetTranslation</definition>
        <argsstring>(const wxString &amp;string, const wxString &amp;plural, unsigned n, const wxString &amp;domain=wxEmptyString, const wxString &amp;context=wxEmptyString)</argsstring>
        <name>wxGetTranslation</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>plural</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>domain</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <briefdescription>
<para>This is an overloaded version of wxGetTranslation(const wxString&amp;, const wxString&amp;), please see its documentation for general information. </para>
        </briefdescription>
        <detaileddescription>
<para>This version is used when retrieving translation of string that has different singular and plural forms in English or different plural forms in some other language. Like wxGetTranslation(const wxString&amp;,const wxString&amp;), the <emphasis>string</emphasis> parameter must contain the singular form of the string to be converted and is used as the key for the search in the catalog. The <emphasis>plural</emphasis> parameter is the plural form (in English). The parameter <emphasis>n</emphasis> is used to determine the plural form. If no message catalog is found, <emphasis>string</emphasis> is returned if &quot;n == 1&quot;, otherwise <emphasis>plural</emphasis> is returned.</para>
<para>See GNU gettext Manual for additional information on plural forms handling: <ulink url="http://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms">http://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms</ulink> For a shorter alternative see the <ref refid="translation_8h_1adc7c2f1bab3914af93feb47945003409" kindref="member">wxPLURAL()</ref> macro.</para>
<para>This function is thread-safe.</para>
<para>Include file:<linebreak/>
 <verbatim>#include &lt;wx/intl.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="587" column="16" declfile="interface/wx/translation.h" declline="587" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="translation_8h_1a63ac344fa98fcb51cef18e5a9b8a916d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; _</definition>
        <argsstring>(const wxString &amp;string)</argsstring>
        <name>_</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Macro to be used around all literal strings that should be translated. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro expands into a call to <ref refid="translation_8h_1a460d07961e771004f3e8535ec4ce428f" kindref="member">wxGetTranslation()</ref>, so it marks the message for the extraction by <computeroutput>xgettext</computeroutput> just as <ref refid="translation_8h_1ab8862de0f74049708bfea75ae9e14c45" kindref="member">wxTRANSLATE()</ref> does, but also returns the translation of the string for the current locale during execution.</para>
<para>This macro is thread-safe.</para>
<para>Include file:<linebreak/>
 <verbatim>#include &lt;wx/intl.h&gt; </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="604" column="16" declfile="interface/wx/translation.h" declline="604" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="interface/wx/translation.h"/>
  </compounddef>
</doxygen>
