<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_notification_message" kind="class" language="C++" prot="public">
    <compoundname>wxNotificationMessage</compoundname>
    <basecompoundref refid="classwx_evt_handler" prot="public" virt="non-virtual">wxEvtHandler</basecompoundref>
    <includes local="no">wx/notifmsg.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classwx_notification_message_1a71536b361978db202a18c66037878394" prot="public" static="no" strong="no">
        <type></type>
        <name>@38</name>
        <qualifiedname>wxNotificationMessage::@38</qualifiedname>
        <enumvalue id="classwx_notification_message_1a71536b361978db202a18c66037878394a5b4a8e2f2e6ed0a8fe76016be6ee7942" prot="public">
          <name>Timeout_Auto</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>Notification will be hidden automatically. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classwx_notification_message_1a71536b361978db202a18c66037878394a56e3ea77b58c4b79887804eddfdabe78" prot="public">
          <name>Timeout_Never</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Notification will never time out. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Possible values for <ref refid="classwx_notification_message_1a353452157bcf940406c1650c83fa3654" kindref="member">Show()</ref> timeout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="61" column="5" bodyfile="interface/wx/notifmsg.h" bodystart="62" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_notification_message_1a7799f9358f0d90f8d9ebc675c2da4782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxNotificationMessage::wxNotificationMessage</definition>
        <argsstring>()</argsstring>
        <name>wxNotificationMessage</name>
        <qualifiedname>wxNotificationMessage::wxNotificationMessage</qualifiedname>
        <briefdescription>
<para>Default constructor, use <ref refid="classwx_notification_message_1a5b966d65b4c90b36c86fc80782cf8459" kindref="member">SetParent()</ref>, <ref refid="classwx_notification_message_1a7654f8e0764ac66c5dcf58b057453045" kindref="member">SetTitle()</ref> and <ref refid="classwx_notification_message_1acdc0e245b4391be704cced4c790e9e35" kindref="member">SetMessage()</ref> to initialize the object before showing it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="71" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_notification_message_1ad7702e56ced878ea5b0b0e3f9a6a727c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxNotificationMessage::wxNotificationMessage</definition>
        <argsstring>(const wxString &amp;title, const wxString &amp;message=wxEmptyString, wxWindow *parent=NULL, int flags=wxICON_INFORMATION)</argsstring>
        <name>wxNotificationMessage</name>
        <qualifiedname>wxNotificationMessage::wxNotificationMessage</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>message</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="defs_8h_1a6ad4380c48ee0854f49c171b1a2514eb" kindref="member">wxICON_INFORMATION</ref></defval>
        </param>
        <briefdescription>
<para>Create a notification object with the given attributes. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_notification_message_1a7654f8e0764ac66c5dcf58b057453045" kindref="member">SetTitle()</ref>, <ref refid="classwx_notification_message_1acdc0e245b4391be704cced4c790e9e35" kindref="member">SetMessage()</ref>, <ref refid="classwx_notification_message_1a5b966d65b4c90b36c86fc80782cf8459" kindref="member">SetParent()</ref> and <ref refid="classwx_notification_message_1af55f3983bfd60ae746411dafed65257a" kindref="member">SetFlags()</ref> for the description of the corresponding parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="79" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_notification_message_1a01731a680abfbdecec1004e8fefae06d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxNotificationMessage::~wxNotificationMessage</definition>
        <argsstring>()</argsstring>
        <name>~wxNotificationMessage</name>
        <qualifiedname>wxNotificationMessage::~wxNotificationMessage</qualifiedname>
        <briefdescription>
<para>Destructor does not hide the notification. </para>
        </briefdescription>
        <detaileddescription>
<para>The notification can continue to be shown even after the C++ object was destroyed, call <ref refid="classwx_notification_message_1a657f2f18e7e72fc40d4993c44ae2f1dc" kindref="member">Close()</ref> explicitly if it needs to be hidden. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="88" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classwx_notification_message_1ac68288b8bedc6f0e35dd001e7d5a94f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxNotificationMessage::AddAction</definition>
        <argsstring>(wxWindowID actionid, const wxString &amp;label=wxString())</argsstring>
        <name>AddAction</name>
        <qualifiedname>wxNotificationMessage::AddAction</qualifiedname>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>actionid</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
          <defval><ref refid="classwx_string" kindref="compound">wxString</ref>()</defval>
        </param>
        <briefdescription>
<para>Add an action to the notification. </para>
        </briefdescription>
        <detaileddescription>
<para>If supported by the implementation this are usually buttons in the notification selectable by the user.</para>
<para><simplesect kind="return"><para>false if the current implementation or OS version does not support actions in notifications.</para>
</simplesect>
<simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="99" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_notification_message_1a657f2f18e7e72fc40d4993c44ae2f1dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxNotificationMessage::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <qualifiedname>wxNotificationMessage::Close</qualifiedname>
        <briefdescription>
<para>Hides the notification. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if it was hidden or false if it couldn&apos;t be done (e.g. on some systems automatically hidden notifications can&apos;t be hidden manually). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_notification_message_1af55f3983bfd60ae746411dafed65257a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxNotificationMessage::SetFlags</definition>
        <argsstring>(int flags)</argsstring>
        <name>SetFlags</name>
        <qualifiedname>wxNotificationMessage::SetFlags</qualifiedname>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>This parameter can be currently used to specify the icon to show in the notification. </para>
        </briefdescription>
        <detaileddescription>
<para>Valid values are <computeroutput>wxICON_INFORMATION</computeroutput>, <computeroutput>wxICON_WARNING</computeroutput> and <computeroutput>wxICON_ERROR</computeroutput> (notice that <computeroutput>wxICON_QUESTION</computeroutput> is not allowed here). Some implementations of this class may not support the icons.</para>
<para><simplesect kind="see"><para><ref refid="classwx_notification_message_1a94cff840f2cd59a5ed1178d978a17fbd" kindref="member">SetIcon()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="120" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_notification_message_1a94cff840f2cd59a5ed1178d978a17fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxNotificationMessage::SetIcon</definition>
        <argsstring>(const wxIcon &amp;icon)</argsstring>
        <name>SetIcon</name>
        <qualifiedname>wxNotificationMessage::SetIcon</qualifiedname>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
<para>Specify a custom icon to be displayed in the notification. </para>
        </briefdescription>
        <detaileddescription>
<para>Some implementations of this class may not support custom icons.</para>
<para><simplesect kind="see"><para><ref refid="classwx_notification_message_1af55f3983bfd60ae746411dafed65257a" kindref="member">SetFlags()</ref></para>
</simplesect>
<simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="131" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_notification_message_1acdc0e245b4391be704cced4c790e9e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxNotificationMessage::SetMessage</definition>
        <argsstring>(const wxString &amp;message)</argsstring>
        <name>SetMessage</name>
        <qualifiedname>wxNotificationMessage::SetMessage</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Set the main text of the notification. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be a more detailed description than the title but still limited to reasonable length (not more than 256 characters). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="139" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_notification_message_1a5b966d65b4c90b36c86fc80782cf8459" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxNotificationMessage::SetParent</definition>
        <argsstring>(wxWindow *parent)</argsstring>
        <name>SetParent</name>
        <qualifiedname>wxNotificationMessage::SetParent</qualifiedname>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Set the parent for this notification: the notification will be associated with the top level parent of this window or, if this method is not called, with the main application window by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="146" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_notification_message_1a7654f8e0764ac66c5dcf58b057453045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxNotificationMessage::SetTitle</definition>
        <argsstring>(const wxString &amp;title)</argsstring>
        <name>SetTitle</name>
        <qualifiedname>wxNotificationMessage::SetTitle</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Set the title, it must be a concise string (not more than 64 characters), use <ref refid="classwx_notification_message_1acdc0e245b4391be704cced4c790e9e35" kindref="member">SetMessage()</ref> to give the user more details. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="152" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_notification_message_1a353452157bcf940406c1650c83fa3654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxNotificationMessage::Show</definition>
        <argsstring>(int timeout=Timeout_Auto)</argsstring>
        <name>Show</name>
        <qualifiedname>wxNotificationMessage::Show</qualifiedname>
        <param>
          <type>int</type>
          <declname>timeout</declname>
          <defval><ref refid="classwx_notification_message_1a71536b361978db202a18c66037878394a5b4a8e2f2e6ed0a8fe76016be6ee7942" kindref="member">Timeout_Auto</ref></defval>
        </param>
        <briefdescription>
<para>Show the notification to the user and hides it after <emphasis>timeout</emphasis> seconds are elapsed. </para>
        </briefdescription>
        <detaileddescription>
<para>Special values <computeroutput>Timeout_Auto</computeroutput> and <computeroutput>Timeout_Never</computeroutput> can be used here, notice that you shouldn&apos;t rely on <emphasis>timeout</emphasis> being exactly respected because the current platform may only support default timeout value and also because the user may be able to close the notification.</para>
<para><simplesect kind="note"><para>When using native notifications in wxGTK, the timeout is ignored for the notifications with <computeroutput>wxICON_WARNING</computeroutput> or <computeroutput>wxICON_ERROR</computeroutput> flags, they always remain shown unless they&apos;re explicitly hidden by the user, i.e. behave as if Timeout_Auto were given.</para>
</simplesect>
<simplesect kind="return"><para>false if an error occurred. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="170" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_notification_message_1a05341a374a1e8537bf585862ac639482" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_task_bar_icon" kindref="compound">wxTaskBarIcon</ref> *</type>
        <definition>static wxTaskBarIcon * wxNotificationMessage::UseTaskBarIcon</definition>
        <argsstring>(wxTaskBarIcon *icon)</argsstring>
        <name>UseTaskBarIcon</name>
        <qualifiedname>wxNotificationMessage::UseTaskBarIcon</qualifiedname>
        <param>
          <type><ref refid="classwx_task_bar_icon" kindref="compound">wxTaskBarIcon</ref> *</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
<para>If the application already uses a <ref refid="classwx_task_bar_icon" kindref="compound">wxTaskBarIcon</ref>, it should be connected to notifications by using this method. </para>
        </briefdescription>
        <detaileddescription>
<para>This has no effect if toast notifications are used.</para>
<para><simplesect kind="return"><para>the task bar icon which was used previously (may be <computeroutput>NULL</computeroutput>)</para>
</simplesect>
Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref> port.  <onlyfor>wxmsw</onlyfor>  </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="181" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classwx_notification_message_1a52c56483b083d771de4d0819f4795242" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxNotificationMessage::MSWUseToasts</definition>
        <argsstring>(const wxString &amp;shortcutPath=wxString(), const wxString &amp;appId=wxString())</argsstring>
        <name>MSWUseToasts</name>
        <qualifiedname>wxNotificationMessage::MSWUseToasts</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>shortcutPath</declname>
          <defval><ref refid="classwx_string" kindref="compound">wxString</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>appId</declname>
          <defval><ref refid="classwx_string" kindref="compound">wxString</ref>()</defval>
        </param>
        <briefdescription>
<para>Enables toast notifications available since Windows 8 and suppresses the additional icon in the notification area on Windows 10. </para>
        </briefdescription>
        <detaileddescription>
<para>Toast notifications <bold>require</bold> a shortcut to the application in the start menu. The start menu shortcut needs to contain an Application User Model ID. It is recommended that the applications setup creates the shortcut and the application specifies the setup created shortcut in <computeroutput>shortcutPath</computeroutput>. A call to this method will verify (and if necessary modify) the shortcut before enabling toast notifications.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shortcutPath</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to a shortcut file referencing the applications executable. If the string is empty the applications display name will be used. If not fully qualified, it will be used as a path relative to the users start menu directory. The file extension .lnk is optional. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>appId</parametername>
</parameternamelist>
<parameterdescription>
<para>The applications <ulink url="https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(vs.85).aspx">Application User Model ID</ulink>. If empty it will be extracted from the shortcut. If the shortcut does not contain an id an id will be automatically created from the applications vendor and app name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if toast notifications could not be enabled.</para>
</simplesect>
Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref> port.  <onlyfor>wxmsw</onlyfor> </para>
<para><simplesect kind="see"><para><ref refid="classwx_app_console_1a31ba1a76d63a2265d981ceedbfd6d5cf" kindref="member">wxAppConsole::SetAppName()</ref>, <ref refid="classwx_app_console_1afc276a78f5ad56d4f34fcf0e93872913" kindref="member">wxAppConsole::SetVendorName()</ref></para>
</simplesect>
<simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/notifmsg.h" line="214" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class allows showing the user a message non intrusively. </para>
    </briefdescription>
    <detaileddescription>
<para>Currently it is implemented natively for Windows, macOS, GTK and uses generic toast notifications under the other platforms. It&apos;s not recommended but <computeroutput>wxGenericNotificationMessage</computeroutput> can be used instead of the native ones. This might make sense if your application requires features not available in the native implementation.</para>
<para>Notice that this class is not a window and so doesn&apos;t derive from <ref refid="classwx_window" kindref="compound">wxWindow</ref>.</para>
<sect1 id="classwx_notification_message_1platform_notes">
<title>Platform Notes</title>
<para><simplesect kind="par"><title>Windows</title><para>Up to Windows 8 balloon notifications are displayed from an icon in the notification area of the taskbar. If your application uses a <ref refid="classwx_task_bar_icon" kindref="compound">wxTaskBarIcon</ref> you should call <ref refid="classwx_notification_message_1a05341a374a1e8537bf585862ac639482" kindref="member">UseTaskBarIcon()</ref> to ensure that only one icon is shown in the notification area. Windows 10 displays all notifications as popup toasts. To suppress the additional icon in the notification area on Windows 10 and for toast notification support on Windows 8 it is recommended to call <ref refid="classwx_notification_message_1a52c56483b083d771de4d0819f4795242" kindref="member">MSWUseToasts()</ref> before showing the first notification message.</para>
</simplesect>
<simplesect kind="par"><title>macOS</title><para>The macOS implementation uses Notification Center to display native notifications. In order to use actions your notifications must use the alert style. This can be enabled by the user in system settings or by setting the <computeroutput>NSUserNotificationAlertStyle</computeroutput> value in Info.plist to <computeroutput>alert</computeroutput>. Please note that the user always has the option to change the notification style.</para>
</simplesect>
<heading level="2">Events emitted by this class</heading>
</para>
<para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_command_event" kindref="compound">wxCommandEvent</ref>&amp;<nonbreakablespace/>event)</para>
<para>Event macros for events emitted by this class: <itemizedlist>
<listitem><para>EVT_NOTIFICATION_MESSAGE_CLICK(id,  func): Process a <computeroutput>wxEVT_NOTIFICATION_MESSAGE_CLICK</computeroutput> event, when a notification is clicked. </para>
</listitem>
<listitem><para>EVT_NOTIFICATION_MESSAGE_DISMISSED(id,  func): Process a <computeroutput>wxEVT_NOTIFICATION_MESSAGE_DISMISSED</computeroutput> event, when a notification is dismissed by the user or times out. </para>
</listitem>
<listitem><para>EVT_NOTIFICATION_MESSAGE_ACTION(id,  func): Process a <computeroutput>wxEVT_NOTIFICATION_MESSAGE_ACTION</computeroutput> event, when the user selects on of the actions added by <ref refid="classwx_notification_message_1ac68288b8bedc6f0e35dd001e7d5a94f2" kindref="member">AddAction()</ref> </para>
</listitem>
</itemizedlist>
<simplesect kind="since"><para>2.9.0 <heading level="2"></heading>
</para>
</simplesect>
Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__misc" kindref="compound">Miscellaneous</ref> </para>
</sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxNotificationMessage</label>
        <link refid="classwx_notification_message"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="4">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxNotificationMessage</label>
        <link refid="classwx_notification_message"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
      <node id="5">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/notifmsg.h" line="57" column="1" bodyfile="interface/wx/notifmsg.h" bodystart="58" bodyend="217"/>
    <listofallmembers>
      <member refid="classwx_notification_message_1ac68288b8bedc6f0e35dd001e7d5a94f2" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>AddAction</name></member>
      <member refid="classwx_evt_handler_1a7dc3c701781f4044372049de5004137e" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>AddFilter</name></member>
      <member refid="classwx_evt_handler_1a0737c6d2cbcd5ded4b1ecdd53ed0def3" prot="public" virt="virtual"><scope>wxNotificationMessage</scope><name>AddPendingEvent</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxNotificationMessage</scope><name>AllocExclusive</name></member>
      <member refid="classwx_evt_handler_1a0f30c8fa5583b4a5f661897d63de3b62" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a03cc68ca201fb79c7e837919025be71a" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a63c7351618fd77330d80a250b3719519" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>CallAfter</name></member>
      <member refid="classwx_evt_handler_1a910416e4d0b1f38cec02213b8a0c6a12" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>CallAfter</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxNotificationMessage</scope><name>CloneRefData</name></member>
      <member refid="classwx_notification_message_1a657f2f18e7e72fc40d4993c44ae2f1dc" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Close</name></member>
      <member refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1a1e8b5fc4c7e7f6d32d40bc00d4108ba4" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1aa290d9b67348e74c1da8497955a4e35c" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Connect</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxNotificationMessage</scope><name>CreateRefData</name></member>
      <member refid="classwx_evt_handler_1a6e7f9cf4ebd0623c1d94979855d096f8" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>DeletePendingEvents</name></member>
      <member refid="classwx_evt_handler_1a13061cf0ed01ac10a804ac057ef4bdbc" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a2f171e19444b9c4034c5e11f24fa9c91" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a16a6f823853e4b74b43dd9a2cf3abee6" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Disconnect</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxNotificationMessage</scope><name>GetClassInfo</name></member>
      <member refid="classwx_evt_handler_1a62baf87cabf4dd2c9ecce3ee5e1e9f61" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>GetClientData</name></member>
      <member refid="classwx_evt_handler_1a537d17d644e48bc1735c4dd28b8b8c04" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>GetClientObject</name></member>
      <member refid="classwx_evt_handler_1a7742d81c5eb7849a0ad75b9de8575153" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>GetEvtHandlerEnabled</name></member>
      <member refid="classwx_evt_handler_1a6de721ad9f331826a5c925d6008116e5" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>GetNextHandler</name></member>
      <member refid="classwx_evt_handler_1abbf9904ea5108b816f5f4faab1a33db9" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>GetPreviousHandler</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>GetRefData</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>IsSameAs</name></member>
      <member refid="classwx_evt_handler_1ac0734578a8d929b8b0be440ce0b53ad6" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>IsUnlinked</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxNotificationMessage</scope><name>m_refData</name></member>
      <member refid="classwx_notification_message_1a52c56483b083d771de4d0819f4795242" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>MSWUseToasts</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>operator new</name></member>
      <member refid="classwx_evt_handler_1a65968dd27f3aac7718f2dd6b2ddd5a08" prot="public" virt="virtual"><scope>wxNotificationMessage</scope><name>ProcessEvent</name></member>
      <member refid="classwx_evt_handler_1ac0f5d2cb29a04c1f7f82eb6b351f79fb" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>ProcessEventLocally</name></member>
      <member refid="classwx_evt_handler_1a6f643dbdcf8e914ae1c8b70dd305e6f2" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>ProcessPendingEvents</name></member>
      <member refid="classwx_evt_handler_1acffd03bf407a856166ea71ef0318b59a" prot="public" virt="virtual"><scope>wxNotificationMessage</scope><name>QueueEvent</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Ref</name></member>
      <member refid="classwx_evt_handler_1a67a57b759c447b121bf70a7c9804c8f2" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>RemoveFilter</name></member>
      <member refid="classwx_evt_handler_1a8205cb1a5a00d8b550b3ead22266b16b" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>SafelyProcessEvent</name></member>
      <member refid="classwx_evt_handler_1a82c74f2cebfa02cb3c1563d459c872bf" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>SetClientData</name></member>
      <member refid="classwx_evt_handler_1af1e33a06087b8b2ddc43c7d15a91b326" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>SetClientObject</name></member>
      <member refid="classwx_evt_handler_1a7388ae19c8657e5656471b658c320036" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>SetEvtHandlerEnabled</name></member>
      <member refid="classwx_notification_message_1af55f3983bfd60ae746411dafed65257a" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>SetFlags</name></member>
      <member refid="classwx_notification_message_1a94cff840f2cd59a5ed1178d978a17fbd" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>SetIcon</name></member>
      <member refid="classwx_notification_message_1acdc0e245b4391be704cced4c790e9e35" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>SetMessage</name></member>
      <member refid="classwx_evt_handler_1a68e2ef2d2b7d68c4c9c18ca92933031b" prot="public" virt="virtual"><scope>wxNotificationMessage</scope><name>SetNextHandler</name></member>
      <member refid="classwx_notification_message_1a5b966d65b4c90b36c86fc80782cf8459" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>SetParent</name></member>
      <member refid="classwx_evt_handler_1aff0d1836464be82e2ad723ad3a58eccc" prot="public" virt="virtual"><scope>wxNotificationMessage</scope><name>SetPreviousHandler</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>SetRefData</name></member>
      <member refid="classwx_notification_message_1a7654f8e0764ac66c5dcf58b057453045" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>SetTitle</name></member>
      <member refid="classwx_notification_message_1a353452157bcf940406c1650c83fa3654" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Show</name></member>
      <member refid="classwx_notification_message_1a71536b361978db202a18c66037878394a5b4a8e2f2e6ed0a8fe76016be6ee7942" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Timeout_Auto</name></member>
      <member refid="classwx_notification_message_1a71536b361978db202a18c66037878394a56e3ea77b58c4b79887804eddfdabe78" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Timeout_Never</name></member>
      <member refid="classwx_evt_handler_1a5e25fece1cb6cbc11fd1d41ec140319c" prot="protected" virt="virtual"><scope>wxNotificationMessage</scope><name>TryAfter</name></member>
      <member refid="classwx_evt_handler_1ad4b0eac704dd005ac6a88fdb1e673c13" prot="protected" virt="virtual"><scope>wxNotificationMessage</scope><name>TryBefore</name></member>
      <member refid="classwx_evt_handler_1a2b7df8272075a96daea78cdd799c00da" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1aa49f9c4ad4462456b4fe4bd1ab53533d" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1a22e5db2ec1d19c8252c056fd116975d7" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>Unlink</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>UnShare</name></member>
      <member refid="classwx_notification_message_1a05341a374a1e8537bf585862ac639482" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>UseTaskBarIcon</name></member>
      <member refid="classwx_evt_handler_1a3f0166c4154227d05575b01eb2c8d4be" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>wxEvtHandler</name></member>
      <member refid="classwx_notification_message_1a7799f9358f0d90f8d9ebc675c2da4782" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>wxNotificationMessage</name></member>
      <member refid="classwx_notification_message_1ad7702e56ced878ea5b0b0e3f9a6a727c" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>wxNotificationMessage</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxNotificationMessage</scope><name>wxObject</name></member>
      <member refid="classwx_evt_handler_1a372d2239d91521eddc8fd2715fcab584" prot="public" virt="virtual"><scope>wxNotificationMessage</scope><name>~wxEvtHandler</name></member>
      <member refid="classwx_notification_message_1a01731a680abfbdecec1004e8fefae06d" prot="public" virt="virtual"><scope>wxNotificationMessage</scope><name>~wxNotificationMessage</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxNotificationMessage</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
