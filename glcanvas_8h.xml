<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="glcanvas_8h" kind="file" language="C++">
    <compoundname>glcanvas.h</compoundname>
    <innerclass refid="classwx_g_l_attribs_base" prot="public">wxGLAttribsBase</innerclass>
    <innerclass refid="classwx_g_l_attributes" prot="public">wxGLAttributes</innerclass>
    <innerclass refid="classwx_g_l_context_attrs" prot="public">wxGLContextAttrs</innerclass>
    <innerclass refid="classwx_g_l_context" prot="public">wxGLContext</innerclass>
    <innerclass refid="classwx_g_l_canvas" prot="public">wxGLCanvas</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13" prot="public" static="no" strong="no">
        <type></type>
        <name>@22</name>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a8801f84d6ba28f32bd7fe0081776a409" prot="public">
          <name>WX_GL_RGBA</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Use true color (the default if no attributes at all are specified); do not use a palette. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13adba00c5d18c26535641d772f9147d9b2" prot="public">
          <name>WX_GL_BUFFER_SIZE</name>
          <briefdescription>
<para>(F) Specifies the number of bits for colour buffer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13aa75a4e738b4fa60c91409090f40d7a40" prot="public">
          <name>WX_GL_LEVEL</name>
          <briefdescription>
<para>(F) 0 for main buffer, &gt;0 for overlay, &lt;0 for underlay. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a0d1332f758e5786302dafc368e1bcf0f" prot="public">
          <name>WX_GL_DOUBLEBUFFER</name>
          <briefdescription>
<para>Use double buffering if present (&quot;on&quot; if no attributes specified). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13adc51e1591624b104946f7a32e47c5b8d" prot="public">
          <name>WX_GL_STEREO</name>
          <briefdescription>
<para>Use stereoscopic display. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a435c0b92e0dadd6e3892941349a70f09" prot="public">
          <name>WX_GL_AUX_BUFFERS</name>
          <briefdescription>
<para>(F) The number of auxiliary buffers. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13aad2f4337420e252397ba2ffdfc755e2f" prot="public">
          <name>WX_GL_MIN_RED</name>
          <briefdescription>
<para>(F) Use red buffer with most bits (&gt; MIN_RED bits) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a5649ba024bc108d2a628aba56362875b" prot="public">
          <name>WX_GL_MIN_GREEN</name>
          <briefdescription>
<para>(F) Use green buffer with most bits (&gt; MIN_GREEN bits) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13af42abbf665f08660a99bc299432cc8a9" prot="public">
          <name>WX_GL_MIN_BLUE</name>
          <briefdescription>
<para>(F) Use blue buffer with most bits (&gt; MIN_BLUE bits) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a13ade33a812937c8920c1c917f281f46" prot="public">
          <name>WX_GL_MIN_ALPHA</name>
          <briefdescription>
<para>(F) Use alpha buffer with most bits (&gt; MIN_ALPHA bits) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a82592856bf43fc99e64da03a6433de09" prot="public">
          <name>WX_GL_DEPTH_SIZE</name>
          <briefdescription>
<para>(F) Specifies number of bits for Z-buffer (typically 0, 16 or 32). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13aa43d513233ac9e7b47b99fdfff31007d" prot="public">
          <name>WX_GL_STENCIL_SIZE</name>
          <briefdescription>
<para>(F) Specifies number of bits for stencil buffer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13aa278cbceb0aa3ebaff1f69be15b22352" prot="public">
          <name>WX_GL_MIN_ACCUM_RED</name>
          <briefdescription>
<para>(F) Specifies minimal number of red accumulator bits. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a47ac5a8c86dc7ff1cec9c631a508cd6f" prot="public">
          <name>WX_GL_MIN_ACCUM_GREEN</name>
          <briefdescription>
<para>(F) Specifies minimal number of green accumulator bits. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a05b1ef6835008dbb427b40e54b398aa3" prot="public">
          <name>WX_GL_MIN_ACCUM_BLUE</name>
          <briefdescription>
<para>(F) Specifies minimal number of blue accumulator bits. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a48b43a7286a0046dcc2ba81442fd069f" prot="public">
          <name>WX_GL_MIN_ACCUM_ALPHA</name>
          <briefdescription>
<para>(F) Specifies minimal number of alpha accumulator bits. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a809a66aa921b226c6bd4f479e4f612be" prot="public">
          <name>WX_GL_SAMPLE_BUFFERS</name>
          <briefdescription>
<para>(F) 1 for multi-sampling support (antialiasing) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13acb621c52c601778f375ec67390325e59" prot="public">
          <name>WX_GL_SAMPLES</name>
          <briefdescription>
<para>(F) 4 for 2x2 antialiasing supersampling on most graphics cards </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a523891b398ba2a7e5fea4f0c9c95b279" prot="public">
          <name>WX_GL_FRAMEBUFFER_SRGB</name>
          <briefdescription>
<para>Used to request a frame buffer sRGB capable. </para>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a6ae0c4cf354da29fa420604e8c879d71" prot="public">
          <name>WX_GL_MAJOR_VERSION</name>
          <briefdescription>
<para>(F) Request specific OpenGL core major version number (&gt;= 3). </para>
          </briefdescription>
          <detaileddescription>
<para>This attribute should be followed by the major version number requested.</para>
<para>It has no effect under macOS where specifying <ref refid="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a699f479631da4051cd771d9d840b153a" kindref="member">WX_GL_CORE_PROFILE</ref> will result in using OpenGL version at least 3.2 but can still be used there for portability.</para>
<para><simplesect kind="since"><para>3.0.3 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a7d9df6a53803119f60a7b0094179cdf2" prot="public">
          <name>WX_GL_MINOR_VERSION</name>
          <briefdescription>
<para>(F) Request specific OpenGL core minor version number. </para>
          </briefdescription>
          <detaileddescription>
<para>This attribute has the same semantics as <ref refid="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a6ae0c4cf354da29fa420604e8c879d71" kindref="member">WX_GL_MAJOR_VERSION</ref> but is for the minor OpenGL version, e.g. 2 if OpenGL 3.2 is requested.</para>
<para><simplesect kind="since"><para>3.0.3 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a699f479631da4051cd771d9d840b153a" prot="public">
          <name>WX_GL_CORE_PROFILE</name>
          <briefdescription>
<para>Request an OpenGL core profile for the context. </para>
          </briefdescription>
          <detaileddescription>
<para>If the requested OpenGL version is less than 3.2, this attribute is ignored and the functionality of the context is determined solely by the requested version.</para>
<para><simplesect kind="since"><para>3.0.3 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a2d7ae044adc51bc3096254d6c6a691f2" prot="public">
          <name>wx_GL_COMPAT_PROFILE</name>
          <briefdescription>
<para>Request a type of context with all OpenGL features from version 1.0 to the newest available by the GPU driver. </para>
          </briefdescription>
          <detaileddescription>
<para>In this mode the GPU may be some slower than it would be without this compatibility attribute.</para>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13aa36d1d35b5788757a2db8fbd9b9fb092" prot="public">
          <name>WX_GL_FORWARD_COMPAT</name>
          <briefdescription>
<para>Request a forward-compatible context. </para>
          </briefdescription>
          <detaileddescription>
<para>Forward-compatible contexts are defined only for OpenGL versions 3.0 and later. They must not support functionality marked as deprecated by that version of the OpenGL API.</para>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a9d1b5f4606e7bd8f1ca54878082dbda5" prot="public">
          <name>WX_GL_ES2</name>
          <briefdescription>
<para>Request an ES or ES2 (&quot;Embedded Subsystem&quot;) context. </para>
          </briefdescription>
          <detaileddescription>
<para>These are special subsets of OpenGL, lacking some features of the full specification. Used mainly in embedded devices such as mobile phones.</para>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a9d3b9c43aeb8ab21e6185d3866ac5403" prot="public">
          <name>WX_GL_DEBUG</name>
          <briefdescription>
<para>Request debugging functionality. </para>
          </briefdescription>
          <detaileddescription>
<para>This tells OpenGL to prepare a set where some logs are enabled and also allows OGL to send debug messages through a callback function.</para>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13ac62f98b30a5c1579184874897edd5f19" prot="public">
          <name>WX_GL_ROBUST_ACCESS</name>
          <briefdescription>
<para>Request robustness, or how OpenGL handles out-of-bounds buffer object accesses and graphics reset notification behaviours. </para>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13af4bf2ffe0c07fd3674cc57911d0fae5f" prot="public">
          <name>WX_GL_NO_RESET_NOTIFY</name>
          <briefdescription>
<para>With robustness enabled, never deliver notification of reset events. </para>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13adaa9cc5916d7e58dcf051d0184a9edd3" prot="public">
          <name>WX_GL_LOSE_ON_RESET</name>
          <briefdescription>
<para>With robustness enabled, if graphics reset happens, all context state is lost. </para>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13aa40266e98d6ea9ae27040eccf9940be8" prot="public">
          <name>WX_GL_RESET_ISOLATION</name>
          <briefdescription>
<para>Request OpenGL to protect other apps or shared contexts from reset side-effects. </para>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a473f33586ac392e498db7c4b816b4eb8" prot="public">
          <name>WX_GL_RELEASE_FLUSH</name>
          <briefdescription>
<para>Request OpenGL to flush pending commands when the context is released. </para>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="glcanvas_8h_1a39fca1837c5ce7715cbf571669660c13a40eecef12017de843a78d6649f0e097c" prot="public">
          <name>WX_GL_RELEASE_NONE</name>
          <briefdescription>
<para>Request OpenGL to avoid flushing pending commands when the context is released. </para>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><anchor id="glcanvas_8h_1wxGL_FLAGS"/></para>
        </briefdescription>
        <detaileddescription>
<para>Constants for use with <ref refid="classwx_g_l_canvas" kindref="compound">wxGLCanvas</ref>. Most of the constants must be followed by a value. This is indicated by &quot;(F)&quot;. Instead of these flags, the use of <ref refid="classwx_g_l_attributes" kindref="compound">wxGLAttributes</ref> and <ref refid="classwx_g_l_context_attrs" kindref="compound">wxGLContextAttrs</ref> is preferred since wxWidgets 3.1.0.</para>
<para><simplesect kind="note"><para>Not all implementations support options such as stereo, auxiliary buffers, alpha channel, and accumulator buffer, use <ref refid="classwx_g_l_canvas_1a04474d051aa23f27adf00075faa0d227" kindref="member">wxGLCanvas::IsDisplaySupported()</ref> to check for individual visual attributes support. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/glcanvas.h" line="553" column="1" bodyfile="interface/wx/glcanvas.h" bodystart="554" bodyend="733"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="interface/wx/glcanvas.h"/>
  </compounddef>
</doxygen>
