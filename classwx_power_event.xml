<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_power_event" kind="class" language="C++" prot="public">
    <compoundname>wxPowerEvent</compoundname>
    <basecompoundref refid="classwx_event" prot="public" virt="non-virtual">wxEvent</basecompoundref>
    <includes local="no">wx/power.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_power_event_1a07983a7699dfa30c84ea0c2620ba8cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxPowerEvent::wxPowerEvent</definition>
        <argsstring>()</argsstring>
        <name>wxPowerEvent</name>
        <qualifiedname>wxPowerEvent::wxPowerEvent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/power.h" line="81" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_power_event_1a2b6d1dafc2e7e0a692d0b639dfbaf840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxPowerEvent::wxPowerEvent</definition>
        <argsstring>(wxEventType evtType)</argsstring>
        <name>wxPowerEvent</name>
        <qualifiedname>wxPowerEvent::wxPowerEvent</qualifiedname>
        <param>
          <type><ref refid="event_8h_1a6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
          <declname>evtType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/power.h" line="82" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_power_event_1a63524192bffa8c3140b90c3f842ca995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxPowerEvent::Veto</definition>
        <argsstring>()</argsstring>
        <name>Veto</name>
        <qualifiedname>wxPowerEvent::Veto</qualifiedname>
        <briefdescription>
<para>Call this to prevent suspend from taking place in <computeroutput>wxEVT_POWER_SUSPENDING</computeroutput> handler (it is ignored for all the others). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/power.h" line="88" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_power_event_1a6a65d4ff84901ece2caef6366f50c95f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxPowerEvent::IsVetoed</definition>
        <argsstring>() const</argsstring>
        <name>IsVetoed</name>
        <qualifiedname>wxPowerEvent::IsVetoed</qualifiedname>
        <briefdescription>
<para>Returns whether Veto has been called. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/power.h" line="93" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The power events are generated when the system power state changes, e.g. </para>
    </briefdescription>
    <detaileddescription>
<para>the system is suspended, hibernated, plugged into or unplugged from the wall socket and so on. wxPowerEvents are emitted by wxWindows.</para>
<para>Notice that currently only suspend and resume events are generated and only under MS Windows platform. To avoid the need to change the code using this event later when these events are implemented on the other platforms please use the test <computeroutput>ifdef wxHAS_POWER_EVENTS</computeroutput> instead of directly testing for the platform in your code: this symbol will be defined for all platforms supporting the power events.</para>
<para><heading level="2">Events using this class</heading>
</para>
<para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_power_event" kindref="compound">wxPowerEvent</ref>&amp;<nonbreakablespace/>event)</para>
<para>Event macros: <itemizedlist>
<listitem><para>EVT_POWER_SUSPENDING(func): <simplesect kind="warning"><para>This event and the possibility to veto suspend was removed from MSW systems starting from Windows Vista. <ref refid="classwx_power_resource_blocker" kindref="compound">wxPowerResourceBlocker</ref> can be used to prevent the system from suspending under both XP and later systems, use it instead of handling this event.</para>
</simplesect>
System is about to be suspended, this event can be vetoed to prevent suspend from taking place. </para>
</listitem>
<listitem><para>EVT_POWER_SUSPENDED(func): System is about to suspend: normally the application should quickly (i.e. without user intervention) close all the open files and network connections here, possibly remembering them to reopen them later when the system is resumed. </para>
</listitem>
<listitem><para>EVT_POWER_SUSPEND_CANCEL(func): System suspension was cancelled because some application vetoed it. </para>
</listitem>
<listitem><para>EVT_POWER_RESUME(func): System resumed from suspend: normally the application should restore the state in which it had been before the suspension. </para>
</listitem>
</itemizedlist>
<heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__events" kindref="compound">Events</ref></para>
<para><simplesect kind="see"><para><ref refid="utils_8h_1ac7a20e813e3d3259f98e9a54440cf633" kindref="member">wxGetPowerType()</ref>, <ref refid="utils_8h_1aceace1c71d01adb27b30a068015836e9" kindref="member">wxGetBatteryState()</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="1">
        <label>wxPowerEvent</label>
        <link refid="classwx_power_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
      <node id="1">
        <label>wxPowerEvent</label>
        <link refid="classwx_power_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/power.h" line="78" column="1" bodyfile="interface/wx/power.h" bodystart="79" bodyend="94"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxPowerEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_event_1a1458e0e59752bd8753ec20cb719e088b" prot="public" virt="pure-virtual"><scope>wxPowerEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxPowerEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxPowerEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxPowerEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_event_1ac4958ff6ec32b7f4b23066932d611131" prot="public" virt="virtual"><scope>wxPowerEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1a1ed12f8a9b61af6a76c6746cb8acfeae" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1a01c89719ef6241a6e612a313a259c1c2" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_event_1aa46a14bdca4d0ebcd4f42e5805db1df9" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>GetEventUserData</name></member>
      <member refid="classwx_event_1ac5fa5c10d4845d903e58026a42b403c7" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>GetId</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_event_1aa770dbcd0f1714ba097836af6534b4c5" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_event_1a48662230971127737d2500cef7be549d" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_event_1a31f6a4377d6d36964b8eae4e56ec43e0" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_power_event_1a6a65d4ff84901ece2caef6366f50c95f" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>IsVetoed</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxPowerEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxPowerEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>SetId</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>UnShare</name></member>
      <member refid="classwx_power_event_1a63524192bffa8c3140b90c3f842ca995" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>Veto</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>wxObject</name></member>
      <member refid="classwx_power_event_1a07983a7699dfa30c84ea0c2620ba8cf1" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>wxPowerEvent</name></member>
      <member refid="classwx_power_event_1a2b6d1dafc2e7e0a692d0b639dfbaf840" prot="public" virt="non-virtual"><scope>wxPowerEvent</scope><name>wxPowerEvent</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxPowerEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
