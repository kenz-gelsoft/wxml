<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_thumb_bar_button" kind="class" language="C++" prot="public">
    <compoundname>wxThumbBarButton</compoundname>
    <includes local="no">wx/taskbarbutton.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_thumb_bar_button_1ae4ae1bae2dfe037f1ed7640144560178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxThumbBarButton::wxThumbBarButton</definition>
        <argsstring>()</argsstring>
        <name>wxThumbBarButton</name>
        <qualifiedname>wxThumbBarButton::wxThumbBarButton</qualifiedname>
        <briefdescription>
<para>Default constructor to allow 2-phase creation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1ad2ea958abe319058c14f2caa0422366e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxThumbBarButton::wxThumbBarButton</definition>
        <argsstring>(int id, const wxIcon &amp;icon, const wxString &amp;tooltip=wxString(), bool enable=true, bool dismissOnClick=false, bool hasBackground=true, bool shown=true, bool interactive=true)</argsstring>
        <name>wxThumbBarButton</name>
        <qualifiedname>wxThumbBarButton::wxThumbBarButton</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>tooltip</declname>
          <defval><ref refid="classwx_string" kindref="compound">wxString</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>dismissOnClick</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>hasBackground</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>shown</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>interactive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructs the thumbnail toolbar button. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier for the control. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>icon</parametername>
</parameternamelist>
<parameterdescription>
<para>The icon used as the button image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tooltip</parametername>
</parameternamelist>
<parameterdescription>
<para>The text of the button&apos;s tooltip, displayed when the mouse pointer hovers over the button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>If true (default), the button is active and available to the user. If false, the button is disabled. It is present, but has a visual state that indicates that it will not respond to user action. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dismissOnClick</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, when the button is clicked, the taskbar button&apos;s flyout closes immediately. false by default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasBackground</parametername>
</parameternamelist>
<parameterdescription>
<para>If false, the button border is not drawn. true by default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shown</parametername>
</parameternamelist>
<parameterdescription>
<para>If false, the button is not shown to the user. true by default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interactive</parametername>
</parameternamelist>
<parameterdescription>
<para>If false, the button is enabled but not interactive; no pressed button state is drawn. This flag is intended for instances where the button is used in a notification. true by default. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="68" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1a7eb65408cf24277a4d64c748577c12d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxThumbBarButton::Create</definition>
        <argsstring>(int id, const wxIcon &amp;icon, const wxString &amp;tooltip=wxString(), bool enable=true, bool dismissOnClick=false, bool hasBackground=true, bool shown=true, bool interactive=true)</argsstring>
        <name>Create</name>
        <qualifiedname>wxThumbBarButton::Create</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>tooltip</declname>
          <defval><ref refid="classwx_string" kindref="compound">wxString</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>dismissOnClick</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>hasBackground</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>shown</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>interactive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="77" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1a7bf861bf1b0057627022877f56e06f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxThumbBarButton::~wxThumbBarButton</definition>
        <argsstring>()</argsstring>
        <name>~wxThumbBarButton</name>
        <qualifiedname>wxThumbBarButton::~wxThumbBarButton</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="86" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1a3be85c93cf9b7d6f4b0efdae0507c147" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxThumbBarButton::GetID</definition>
        <argsstring>() const</argsstring>
        <name>GetID</name>
        <qualifiedname>wxThumbBarButton::GetID</qualifiedname>
        <briefdescription>
<para>Returns the identifier associated with this control. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="91" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1a900a80dda9b7884d0cf67b71f645dcff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
        <definition>const wxIcon &amp; wxThumbBarButton::GetIcon</definition>
        <argsstring>() const</argsstring>
        <name>GetIcon</name>
        <qualifiedname>wxThumbBarButton::GetIcon</qualifiedname>
        <briefdescription>
<para>Returns the icon associated with this control. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="96" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1a62a5b18a3a1b88e78ff4432a60acf273" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString &amp; wxThumbBarButton::GetTooltip</definition>
        <argsstring>() const</argsstring>
        <name>GetTooltip</name>
        <qualifiedname>wxThumbBarButton::GetTooltip</qualifiedname>
        <briefdescription>
<para>Returns the tooltip. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="101" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1ab1af59da45fb6feb8b7b3b3d9f027340" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxThumbBarButton::IsEnable</definition>
        <argsstring>() const</argsstring>
        <name>IsEnable</name>
        <qualifiedname>wxThumbBarButton::IsEnable</qualifiedname>
        <briefdescription>
<para>Returns true if the button is enabled, false if it has been disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="106" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1a908a251331ae7b07294ce8041af256b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxThumbBarButton::Enable</definition>
        <argsstring>(bool enable=true)</argsstring>
        <name>Enable</name>
        <qualifiedname>wxThumbBarButton::Enable</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Enables or disables the thumbnail toolbar button. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="111" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1ad228a0c6fe442260b9446eae33c3145a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxThumbBarButton::Disable</definition>
        <argsstring>()</argsstring>
        <name>Disable</name>
        <qualifiedname>wxThumbBarButton::Disable</qualifiedname>
        <briefdescription>
<para>Equivalent to calling wxThumbBarButton::Enable(false). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="116" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1afef9bbb28c80e30c8977fe182d1a7a1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxThumbBarButton::IsDismissOnClick</definition>
        <argsstring>() const</argsstring>
        <name>IsDismissOnClick</name>
        <qualifiedname>wxThumbBarButton::IsDismissOnClick</qualifiedname>
        <briefdescription>
<para>Returns true if the button will dismiss on click. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="121" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1aff6f1919036e3ef26cdb2ca491c95958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxThumbBarButton::EnableDismissOnClick</definition>
        <argsstring>(bool enable=true)</argsstring>
        <name>EnableDismissOnClick</name>
        <qualifiedname>wxThumbBarButton::EnableDismissOnClick</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Whether the window thumbnail is dismissed after a button click. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="126" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1ab5ee47bb6cad88a0cd107534d4f3a9d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxThumbBarButton::DisableDimissOnClick</definition>
        <argsstring>()</argsstring>
        <name>DisableDimissOnClick</name>
        <qualifiedname>wxThumbBarButton::DisableDimissOnClick</qualifiedname>
        <briefdescription>
<para>Equivalent to calling wxThumbBarButton::DisableDimissOnClick(false). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="131" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1a5f7d4961ec5bafd61682326a9cbf379a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxThumbBarButton::HasBackground</definition>
        <argsstring>() const</argsstring>
        <name>HasBackground</name>
        <qualifiedname>wxThumbBarButton::HasBackground</qualifiedname>
        <briefdescription>
<para>Returns true if the button has button border. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="136" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1a88b9276f3909d461112029973bf9b443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxThumbBarButton::SetHasBackground</definition>
        <argsstring>(bool has=true)</argsstring>
        <name>SetHasBackground</name>
        <qualifiedname>wxThumbBarButton::SetHasBackground</qualifiedname>
        <param>
          <type>bool</type>
          <declname>has</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Set the property that whether the button has background. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="141" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1ab4d692ced3b476c8dc17e7c19413f2f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxThumbBarButton::IsShown</definition>
        <argsstring>() const</argsstring>
        <name>IsShown</name>
        <qualifiedname>wxThumbBarButton::IsShown</qualifiedname>
        <briefdescription>
<para>Returns true if the button is shown, false if it has been hidden. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="146" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1a027401e8981ed8c6960e04f978cb0ca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxThumbBarButton::Show</definition>
        <argsstring>(bool shown=true)</argsstring>
        <name>Show</name>
        <qualifiedname>wxThumbBarButton::Show</qualifiedname>
        <param>
          <type>bool</type>
          <declname>shown</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Show or hide the thumbnail toolbar button. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="151" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1a567859e03e64a9c806e0b858553a732a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxThumbBarButton::Hide</definition>
        <argsstring>()</argsstring>
        <name>Hide</name>
        <qualifiedname>wxThumbBarButton::Hide</qualifiedname>
        <briefdescription>
<para>Hide the thumbnail toolbar button. </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to calling wxThumbBarButton::Show(false). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="156" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1a65fe47a537f2a32965a840fc5ba1f701" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxThumbBarButton::IsInteractive</definition>
        <argsstring>() const</argsstring>
        <name>IsInteractive</name>
        <qualifiedname>wxThumbBarButton::IsInteractive</qualifiedname>
        <briefdescription>
<para>Returns true if the button is interactive. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="161" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_thumb_bar_button_1abed0f3752801bc3cce7493aa10abc3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxThumbBarButton::SetInteractive</definition>
        <argsstring>(bool interactive=true)</argsstring>
        <name>SetInteractive</name>
        <qualifiedname>wxThumbBarButton::SetInteractive</qualifiedname>
        <param>
          <type>bool</type>
          <declname>interactive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Set the property which holds whether the button is interactive. </para>
        </briefdescription>
        <detaileddescription>
<para>A non-interactive thumbnail toolbar button does not react to user interaction, but is still visually enabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/taskbarbutton.h" line="169" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A thumbnail toolbar button is a control that displayed in the thumbnail image of a window in a taskbar button flyout. </para>
    </briefdescription>
    <detaileddescription>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__misc" kindref="compound">Miscellaneous</ref></para>
<para>Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref> port.  <onlyfor>wxmsw</onlyfor> </para>
<para><simplesect kind="see"><para><ref refid="classwx_task_bar_button" kindref="compound">wxTaskBarButton</ref> </para>
</simplesect>
<simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="interface/wx/taskbarbutton.h" line="35" column="1" bodyfile="interface/wx/taskbarbutton.h" bodystart="35" bodyend="170"/>
    <listofallmembers>
      <member refid="classwx_thumb_bar_button_1a7eb65408cf24277a4d64c748577c12d4" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>Create</name></member>
      <member refid="classwx_thumb_bar_button_1ad228a0c6fe442260b9446eae33c3145a" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>Disable</name></member>
      <member refid="classwx_thumb_bar_button_1ab5ee47bb6cad88a0cd107534d4f3a9d6" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>DisableDimissOnClick</name></member>
      <member refid="classwx_thumb_bar_button_1a908a251331ae7b07294ce8041af256b5" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>Enable</name></member>
      <member refid="classwx_thumb_bar_button_1aff6f1919036e3ef26cdb2ca491c95958" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>EnableDismissOnClick</name></member>
      <member refid="classwx_thumb_bar_button_1a900a80dda9b7884d0cf67b71f645dcff" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>GetIcon</name></member>
      <member refid="classwx_thumb_bar_button_1a3be85c93cf9b7d6f4b0efdae0507c147" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>GetID</name></member>
      <member refid="classwx_thumb_bar_button_1a62a5b18a3a1b88e78ff4432a60acf273" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>GetTooltip</name></member>
      <member refid="classwx_thumb_bar_button_1a5f7d4961ec5bafd61682326a9cbf379a" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>HasBackground</name></member>
      <member refid="classwx_thumb_bar_button_1a567859e03e64a9c806e0b858553a732a" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>Hide</name></member>
      <member refid="classwx_thumb_bar_button_1afef9bbb28c80e30c8977fe182d1a7a1e" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>IsDismissOnClick</name></member>
      <member refid="classwx_thumb_bar_button_1ab1af59da45fb6feb8b7b3b3d9f027340" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>IsEnable</name></member>
      <member refid="classwx_thumb_bar_button_1a65fe47a537f2a32965a840fc5ba1f701" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>IsInteractive</name></member>
      <member refid="classwx_thumb_bar_button_1ab4d692ced3b476c8dc17e7c19413f2f4" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>IsShown</name></member>
      <member refid="classwx_thumb_bar_button_1a88b9276f3909d461112029973bf9b443" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>SetHasBackground</name></member>
      <member refid="classwx_thumb_bar_button_1abed0f3752801bc3cce7493aa10abc3cd" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>SetInteractive</name></member>
      <member refid="classwx_thumb_bar_button_1a027401e8981ed8c6960e04f978cb0ca7" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>Show</name></member>
      <member refid="classwx_thumb_bar_button_1ae4ae1bae2dfe037f1ed7640144560178" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>wxThumbBarButton</name></member>
      <member refid="classwx_thumb_bar_button_1ad2ea958abe319058c14f2caa0422366e" prot="public" virt="non-virtual"><scope>wxThumbBarButton</scope><name>wxThumbBarButton</name></member>
      <member refid="classwx_thumb_bar_button_1a7bf861bf1b0057627022877f56e06f6e" prot="public" virt="virtual"><scope>wxThumbBarButton</scope><name>~wxThumbBarButton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
