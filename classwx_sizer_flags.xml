<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_sizer_flags" kind="class" language="C++" prot="public">
    <compoundname>wxSizerFlags</compoundname>
    <includes local="no">wx/sizer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_sizer_flags_1a2fe0499abe5461a2b8b4fe5fa2c054d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSizerFlags::wxSizerFlags</definition>
        <argsstring>(int proportion=0)</argsstring>
        <name>wxSizerFlags</name>
        <qualifiedname>wxSizerFlags::wxSizerFlags</qualifiedname>
        <param>
          <type>int</type>
          <declname>proportion</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Creates the <ref refid="classwx_sizer" kindref="compound">wxSizer</ref> with the proportion specified by <emphasis>proportion</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1407" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a2bbd830e81b25fa8292c2444af9c36c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Align</definition>
        <argsstring>(int alignment)</argsstring>
        <name>Align</name>
        <qualifiedname>wxSizerFlags::Align</qualifiedname>
        <param>
          <type>int</type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
<para>Sets the alignment of this <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> to <emphasis>align</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This method replaces the previously set alignment with the specified one.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alignment</parametername>
</parameternamelist>
<parameterdescription>
<para>Combination of <computeroutput>wxALIGN_XXX</computeroutput> bit masks.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_sizer_flags_1aaa3cd4b08d12b0e105ed93b19b458e07" kindref="member">Top()</ref>, <ref refid="classwx_sizer_flags_1ad9ded2670ba35e0495640b3477e23792" kindref="member">Left()</ref>, <ref refid="classwx_sizer_flags_1abf5fb1916713e4aba993ba244b4e2859" kindref="member">Right()</ref>, <ref refid="classwx_sizer_flags_1ab37c9c7e412762388afa13af5b8fe5fe" kindref="member">Bottom()</ref>, <ref refid="classwx_sizer_flags_1a4ee7b5fab741d007042985a25d03336c" kindref="member">Centre()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1419" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a3a367aa365799796cf325a5801a97928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Border</definition>
        <argsstring>(int direction, int borderinpixels)</argsstring>
        <name>Border</name>
        <qualifiedname>wxSizerFlags::Border</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>int</type>
          <declname>borderinpixels</declname>
        </param>
        <briefdescription>
<para>Sets the <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> to have a border of a number of pixels specified by <emphasis>borderinpixels</emphasis> with the directions specified by <emphasis>direction</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Prefer to use the overload below or <ref refid="classwx_sizer_flags_1a218ab5aab969806da54f6f38e94bef48" kindref="member">DoubleBorder()</ref> or <ref refid="classwx_sizer_flags_1aebe99ddd8b44dfe89efc91ce186466ff" kindref="member">TripleBorder()</ref> versions instead of hard-coding the border value in pixels to avoid too small borders on devices with high DPI displays. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1429" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1aa4e78c3329ba5bd7483bb7a4696df37a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Border</definition>
        <argsstring>(int direction=wxALL)</argsstring>
        <name>Border</name>
        <qualifiedname>wxSizerFlags::Border</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
          <defval><ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556a066863c82a2c08f6f53b663de87c60b6" kindref="member">wxALL</ref></defval>
        </param>
        <briefdescription>
<para>Sets the <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> to have a border with size as returned by <ref refid="classwx_sizer_flags_1a0766441261548fe6683fcbe411dca7fb" kindref="member">GetDefaultBorder()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction(s) to apply the border in. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1438" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1ab37c9c7e412762388afa13af5b8fe5fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Bottom</definition>
        <argsstring>()</argsstring>
        <name>Bottom</name>
        <qualifiedname>wxSizerFlags::Bottom</qualifiedname>
        <briefdescription>
<para>Aligns the object to the bottom, similar for <computeroutput>Align(wxALIGN_BOTTOM)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="classwx_sizer_flags_1a2bbd830e81b25fa8292c2444af9c36c4" kindref="member">Align()</ref>, this method doesn&apos;t change the horizontal alignment of the item. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1446" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a8ac23ffba207d192f57db30474291c2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Center</definition>
        <argsstring>()</argsstring>
        <name>Center</name>
        <qualifiedname>wxSizerFlags::Center</qualifiedname>
        <briefdescription>
<para>Sets the object of the <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> to center itself in the area it is given. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1452" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a4ee7b5fab741d007042985a25d03336c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Centre</definition>
        <argsstring>()</argsstring>
        <name>Centre</name>
        <qualifiedname>wxSizerFlags::Centre</qualifiedname>
        <briefdescription>
<para><ref refid="classwx_sizer_flags_1a8ac23ffba207d192f57db30474291c2a" kindref="member">Center()</ref> for people with the other dialect of English. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1457" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a1df02d1bed77077ece7315cfd8ceb4bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::CenterHorizontal</definition>
        <argsstring>()</argsstring>
        <name>CenterHorizontal</name>
        <qualifiedname>wxSizerFlags::CenterHorizontal</qualifiedname>
        <briefdescription>
<para>Same as <ref refid="classwx_sizer_flags_1a70ab06220c199b9d2a3997f0e531205e" kindref="member">CentreHorizontal()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1464" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a8ba7dd5a8c8b0584fb8c4f3c465392d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::CenterVertical</definition>
        <argsstring>()</argsstring>
        <name>CenterVertical</name>
        <qualifiedname>wxSizerFlags::CenterVertical</qualifiedname>
        <briefdescription>
<para>Same as <ref refid="classwx_sizer_flags_1abe8a93f880cc1f893c97794c2b7183dc" kindref="member">CentreVertical()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1471" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a70ab06220c199b9d2a3997f0e531205e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::CentreHorizontal</definition>
        <argsstring>()</argsstring>
        <name>CentreHorizontal</name>
        <qualifiedname>wxSizerFlags::CentreHorizontal</qualifiedname>
        <briefdescription>
<para>Center an item only in horizontal direction. </para>
        </briefdescription>
        <detaileddescription>
<para>This is mostly useful for 2D sizers as for the 1D ones it is shorter to just use <ref refid="classwx_sizer_flags_1a4ee7b5fab741d007042985a25d03336c" kindref="member">Centre()</ref> as the alignment is only used in one direction with them anyhow. For 2D sizers, centering an item in one direction is quite different from centering it in both directions however.</para>
<para>Note that, unlike <ref refid="classwx_sizer_flags_1a2bbd830e81b25fa8292c2444af9c36c4" kindref="member">Align()</ref>, this method doesn&apos;t change the vertical alignment.</para>
<para><simplesect kind="see"><para><ref refid="classwx_sizer_flags_1abe8a93f880cc1f893c97794c2b7183dc" kindref="member">CentreVertical()</ref></para>
</simplesect>
<simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1488" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1abe8a93f880cc1f893c97794c2b7183dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::CentreVertical</definition>
        <argsstring>()</argsstring>
        <name>CentreVertical</name>
        <qualifiedname>wxSizerFlags::CentreVertical</qualifiedname>
        <briefdescription>
<para>Center an item only in vertical direction. </para>
        </briefdescription>
        <detaileddescription>
<para>The remarks in <ref refid="classwx_sizer_flags_1a70ab06220c199b9d2a3997f0e531205e" kindref="member">CentreHorizontal()</ref> documentation also apply to this function.</para>
<para>Note that, unlike <ref refid="classwx_sizer_flags_1a2bbd830e81b25fa8292c2444af9c36c4" kindref="member">Align()</ref>, this method doesn&apos;t change the horizontal alignment.</para>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1501" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a218ab5aab969806da54f6f38e94bef48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::DoubleBorder</definition>
        <argsstring>(int direction=wxALL)</argsstring>
        <name>DoubleBorder</name>
        <qualifiedname>wxSizerFlags::DoubleBorder</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
          <defval><ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556a066863c82a2c08f6f53b663de87c60b6" kindref="member">wxALL</ref></defval>
        </param>
        <briefdescription>
<para>Sets the border in the given <emphasis>direction</emphasis> having twice the default border size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1534" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a9ab007933b7dc0489828f490d84dd942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::DoubleHorzBorder</definition>
        <argsstring>()</argsstring>
        <name>DoubleHorzBorder</name>
        <qualifiedname>wxSizerFlags::DoubleHorzBorder</qualifiedname>
        <briefdescription>
<para>Sets the border in left and right directions having twice the default border size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1540" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a1e097af6d5368190a7bf04a71de6b2fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Expand</definition>
        <argsstring>()</argsstring>
        <name>Expand</name>
        <qualifiedname>wxSizerFlags::Expand</qualifiedname>
        <briefdescription>
<para>Sets the object of the <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> to expand to fill as much area as it can. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1546" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a98161a575e02263bccaf7a14bc4313d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::FixedMinSize</definition>
        <argsstring>()</argsstring>
        <name>FixedMinSize</name>
        <qualifiedname>wxSizerFlags::FixedMinSize</qualifiedname>
        <briefdescription>
<para>Set the <computeroutput>wxFIXED_MINSIZE</computeroutput> flag which indicates that the initial size of the window should be also set as its minimal size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1552" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a8027f21a783c3974d1bd3d61d9d42512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::ReserveSpaceEvenIfHidden</definition>
        <argsstring>()</argsstring>
        <name>ReserveSpaceEvenIfHidden</name>
        <qualifiedname>wxSizerFlags::ReserveSpaceEvenIfHidden</qualifiedname>
        <briefdescription>
<para>Set the <computeroutput>wxRESERVE_SPACE_EVEN_IF_HIDDEN</computeroutput> flag. </para>
        </briefdescription>
        <detaileddescription>
<para>Normally wxSizers don&apos;t allocate space for hidden windows or other items. This flag overrides this behaviour so that sufficient space is allocated for the window even if it isn&apos;t visible. This makes it possible to dynamically show and hide controls without resizing parent dialog, for example.</para>
<para><simplesect kind="since"><para>2.8.8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1563" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1ad9ded2670ba35e0495640b3477e23792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Left</definition>
        <argsstring>()</argsstring>
        <name>Left</name>
        <qualifiedname>wxSizerFlags::Left</qualifiedname>
        <briefdescription>
<para>Aligns the object to the left, similar for <computeroutput>Align(wxALIGN_LEFT)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="classwx_sizer_flags_1a2bbd830e81b25fa8292c2444af9c36c4" kindref="member">Align()</ref>, this method doesn&apos;t change the vertical alignment of the item. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1592" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a4a5177a59b6e78f59efac209128a1145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Proportion</definition>
        <argsstring>(int proportion)</argsstring>
        <name>Proportion</name>
        <qualifiedname>wxSizerFlags::Proportion</qualifiedname>
        <param>
          <type>int</type>
          <declname>proportion</declname>
        </param>
        <briefdescription>
<para>Sets the proportion of this <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> to <emphasis>proportion</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1597" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1abf5fb1916713e4aba993ba244b4e2859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Right</definition>
        <argsstring>()</argsstring>
        <name>Right</name>
        <qualifiedname>wxSizerFlags::Right</qualifiedname>
        <briefdescription>
<para>Aligns the object to the right, similar for <computeroutput>Align(wxALIGN_RIGHT)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="classwx_sizer_flags_1a2bbd830e81b25fa8292c2444af9c36c4" kindref="member">Align()</ref>, this method doesn&apos;t change the vertical alignment of the item. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1605" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1ad4a96957c77dcf6253cc4e30497b1c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Shaped</definition>
        <argsstring>()</argsstring>
        <name>Shaped</name>
        <qualifiedname>wxSizerFlags::Shaped</qualifiedname>
        <briefdescription>
<para>Set the <computeroutput>wx_SHAPED</computeroutput> flag which indicates that the elements should always keep the fixed width to height ratio equal to its original value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1611" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1aaa3cd4b08d12b0e105ed93b19b458e07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::Top</definition>
        <argsstring>()</argsstring>
        <name>Top</name>
        <qualifiedname>wxSizerFlags::Top</qualifiedname>
        <briefdescription>
<para>Aligns the object to the top, similar for <computeroutput>Align(wxALIGN_TOP)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="classwx_sizer_flags_1a2bbd830e81b25fa8292c2444af9c36c4" kindref="member">Align()</ref>, this method doesn&apos;t change the horizontal alignment of the item. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1619" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1aebe99ddd8b44dfe89efc91ce186466ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> &amp;</type>
        <definition>wxSizerFlags &amp; wxSizerFlags::TripleBorder</definition>
        <argsstring>(int direction=wxALL)</argsstring>
        <name>TripleBorder</name>
        <qualifiedname>wxSizerFlags::TripleBorder</qualifiedname>
        <param>
          <type>int</type>
          <declname>direction</declname>
          <defval><ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556a066863c82a2c08f6f53b663de87c60b6" kindref="member">wxALL</ref></defval>
        </param>
        <briefdescription>
<para>Sets the border in the given <emphasis>direction</emphasis> having thrice the default border size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1625" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_sizer_flags_1a6c99f94314f84fc8c78cd1d9345b9950" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxSizerFlags::DisableConsistencyChecks</definition>
        <argsstring>()</argsstring>
        <name>DisableConsistencyChecks</name>
        <qualifiedname>wxSizerFlags::DisableConsistencyChecks</qualifiedname>
        <briefdescription>
<para>Globally disable checks for sizer flag consistency in debug builds. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, sizer classes such as <ref refid="classwx_box_sizer" kindref="compound">wxBoxSizer</ref> and <ref refid="classwx_flex_grid_sizer" kindref="compound">wxFlexGridSizer</ref> assert when passed invalid flags, even though doing this usually doesn&apos;t result in any catastrophic consequences and the invalid flags are simply ignored later. Due to this, and the fact that these checks were only added in wxWidgets 3.1, existing code may run into multiple asserts warning about incorrect sizer flags use. Using this function provides a temporary solution for avoiding such asserts when upgrading to wxWidgets 3.1 from a previous version and will prevent such checks from being done.</para>
<para>Please do note that correcting the code by removing the invalid flags remains a much better solution as these asserts may be very helpful to understand why some code using sizer flags doesn&apos;t work as expected, so using this function, especially permanently, rather than a temporary workaround, is <emphasis>not</emphasis> recommended.</para>
<para>Notice that the same effect as calling this function can be achieved by setting the environment variable <computeroutput>WXSUPPRESS_SIZER_FLAGS_CHECK</computeroutput> to any value.</para>
<para><simplesect kind="since"><para>3.1.6 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1528" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a0766441261548fe6683fcbe411dca7fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wxSizerFlags::GetDefaultBorder</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultBorder</name>
        <qualifiedname>wxSizerFlags::GetDefaultBorder</qualifiedname>
        <briefdescription>
<para>Returns the border used by default in <ref refid="classwx_sizer_flags_1a3a367aa365799796cf325a5801a97928" kindref="member">Border()</ref> method. </para>
        </briefdescription>
        <detaileddescription>
<para>This value is scaled appropriately for the current DPI on the systems where physical pixel values are used for the control positions and sizes, i.e. not with wxGTK or wxOSX.</para>
<para><simplesect kind="see"><para><ref refid="classwx_sizer_flags_1a6ca4444c01a3debbfeff1c590fb65453" kindref="member">GetDefaultBorderFractional()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1574" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sizer_flags_1a6ca4444c01a3debbfeff1c590fb65453" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float wxSizerFlags::GetDefaultBorderFractional</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultBorderFractional</name>
        <qualifiedname>wxSizerFlags::GetDefaultBorderFractional</qualifiedname>
        <briefdescription>
<para>Returns the border used by default, with fractional precision. </para>
        </briefdescription>
        <detaileddescription>
<para>For example when the border is scaled to a non-integer DPI.</para>
<para><simplesect kind="see"><para><ref refid="classwx_sizer_flags_1a0766441261548fe6683fcbe411dca7fb" kindref="member">GetDefaultBorder()</ref></para>
</simplesect>
<simplesect kind="since"><para>3.1.4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sizer.h" line="1584" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Container for sizer items flags providing readable names for them. </para>
    </briefdescription>
    <detaileddescription>
<para>Normally, when you add an item to a sizer via <ref refid="classwx_sizer_1add4f504521ae50d0a4dc8ddc4a3538f2" kindref="member">wxSizer::Add</ref>, you have to specify a lot of flags and parameters which can be unwieldy. This is where <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> comes in: it allows you to specify all parameters using the named methods instead. For example, instead of</para>
<para><programlisting><codeline><highlight class="normal">sizer-&gt;Add(ctrl,<sp/>0,<sp/><ref refid="defs_8h_1a27b6b668631a5f79f24d474af7d9b388a0d831bd6985c81f9bbc4830cc0c2e7df" kindref="member">wxEXPAND</ref><sp/>|<sp/><ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556a066863c82a2c08f6f53b663de87c60b6" kindref="member">wxALL</ref>,<sp/>10);</highlight></codeline>
</programlisting></para>
<para>you can now write</para>
<para><programlisting><codeline><highlight class="normal">sizer-&gt;Add(ctrl,<sp/><ref refid="classwx_sizer_flags_1a2fe0499abe5461a2b8b4fe5fa2c054d4" kindref="member">wxSizerFlags</ref>().<ref refid="classwx_sizer_flags_1a1e097af6d5368190a7bf04a71de6b2fb" kindref="member">Expand</ref>().<ref refid="classwx_sizer_flags_1a3a367aa365799796cf325a5801a97928" kindref="member">Border</ref>(<ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556a066863c82a2c08f6f53b663de87c60b6" kindref="member">wxALL</ref>,<sp/>10));</highlight></codeline>
</programlisting></para>
<para>This is more readable and also allows you to create <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> objects which can be reused for several sizer items.</para>
<para><programlisting><codeline><highlight class="normal"><ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref><sp/>flagsExpand(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>flagsExpand.Expand().Border(<ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556a066863c82a2c08f6f53b663de87c60b6" kindref="member">wxALL</ref>,<sp/>10);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sizer-&gt;Add(ctrl1,<sp/>flagsExpand);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sizer-&gt;Add(ctrl2,<sp/>flagsExpand);</highlight></codeline>
</programlisting></para>
<para>Note that by specification, all methods of <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> return the <ref refid="classwx_sizer_flags" kindref="compound">wxSizerFlags</ref> object itself to allowing chaining multiple methods calls like in the examples above.</para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__winlayout" kindref="compound">Window Layout</ref></para>
<para><simplesect kind="see"><para><ref refid="classwx_sizer" kindref="compound">wxSizer</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="interface/wx/sizer.h" line="1401" column="1" bodyfile="interface/wx/sizer.h" bodystart="1402" bodyend="1626"/>
    <listofallmembers>
      <member refid="classwx_sizer_flags_1a2bbd830e81b25fa8292c2444af9c36c4" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Align</name></member>
      <member refid="classwx_sizer_flags_1a3a367aa365799796cf325a5801a97928" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Border</name></member>
      <member refid="classwx_sizer_flags_1aa4e78c3329ba5bd7483bb7a4696df37a" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Border</name></member>
      <member refid="classwx_sizer_flags_1ab37c9c7e412762388afa13af5b8fe5fe" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Bottom</name></member>
      <member refid="classwx_sizer_flags_1a8ac23ffba207d192f57db30474291c2a" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Center</name></member>
      <member refid="classwx_sizer_flags_1a1df02d1bed77077ece7315cfd8ceb4bc" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>CenterHorizontal</name></member>
      <member refid="classwx_sizer_flags_1a8ba7dd5a8c8b0584fb8c4f3c465392d0" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>CenterVertical</name></member>
      <member refid="classwx_sizer_flags_1a4ee7b5fab741d007042985a25d03336c" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Centre</name></member>
      <member refid="classwx_sizer_flags_1a70ab06220c199b9d2a3997f0e531205e" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>CentreHorizontal</name></member>
      <member refid="classwx_sizer_flags_1abe8a93f880cc1f893c97794c2b7183dc" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>CentreVertical</name></member>
      <member refid="classwx_sizer_flags_1a6c99f94314f84fc8c78cd1d9345b9950" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>DisableConsistencyChecks</name></member>
      <member refid="classwx_sizer_flags_1a218ab5aab969806da54f6f38e94bef48" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>DoubleBorder</name></member>
      <member refid="classwx_sizer_flags_1a9ab007933b7dc0489828f490d84dd942" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>DoubleHorzBorder</name></member>
      <member refid="classwx_sizer_flags_1a1e097af6d5368190a7bf04a71de6b2fb" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Expand</name></member>
      <member refid="classwx_sizer_flags_1a98161a575e02263bccaf7a14bc4313d4" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>FixedMinSize</name></member>
      <member refid="classwx_sizer_flags_1a0766441261548fe6683fcbe411dca7fb" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>GetDefaultBorder</name></member>
      <member refid="classwx_sizer_flags_1a6ca4444c01a3debbfeff1c590fb65453" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>GetDefaultBorderFractional</name></member>
      <member refid="classwx_sizer_flags_1ad9ded2670ba35e0495640b3477e23792" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Left</name></member>
      <member refid="classwx_sizer_flags_1a4a5177a59b6e78f59efac209128a1145" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Proportion</name></member>
      <member refid="classwx_sizer_flags_1a8027f21a783c3974d1bd3d61d9d42512" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>ReserveSpaceEvenIfHidden</name></member>
      <member refid="classwx_sizer_flags_1abf5fb1916713e4aba993ba244b4e2859" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Right</name></member>
      <member refid="classwx_sizer_flags_1ad4a96957c77dcf6253cc4e30497b1c97" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Shaped</name></member>
      <member refid="classwx_sizer_flags_1aaa3cd4b08d12b0e105ed93b19b458e07" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>Top</name></member>
      <member refid="classwx_sizer_flags_1aebe99ddd8b44dfe89efc91ce186466ff" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>TripleBorder</name></member>
      <member refid="classwx_sizer_flags_1a2fe0499abe5461a2b8b4fe5fa2c054d4" prot="public" virt="non-virtual"><scope>wxSizerFlags</scope><name>wxSizerFlags</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
