<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_grid_event" kind="class" language="C++" prot="public">
    <compoundname>wxGridEvent</compoundname>
    <basecompoundref refid="classwx_notify_event" prot="public" virt="non-virtual">wxNotifyEvent</basecompoundref>
    <includes local="no">wx/grid.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_grid_event_1a05e8831def820bf32a37693f500bf78d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxGridEvent::wxGridEvent</definition>
        <argsstring>()</argsstring>
        <name>wxGridEvent</name>
        <qualifiedname>wxGridEvent::wxGridEvent</qualifiedname>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="6312" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_event_1a36428d9ecc3022a8970491c0d65e84a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxGridEvent::wxGridEvent</definition>
        <argsstring>(int id, wxEventType type, wxObject *obj, int row=-1, int col=-1, int x=-1, int y=-1, bool sel=true, const wxKeyboardState &amp;kbd=wxKeyboardState())</argsstring>
        <name>wxGridEvent</name>
        <qualifiedname>wxGridEvent::wxGridEvent</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="event_8h_1a6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classwx_object" kindref="compound">wxObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sel</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_keyboard_state" kindref="compound">wxKeyboardState</ref> &amp;</type>
          <declname>kbd</declname>
          <defval><ref refid="classwx_keyboard_state" kindref="compound">wxKeyboardState</ref>()</defval>
        </param>
        <briefdescription>
<para>Constructor for initializing all event attributes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="6316" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_event_1a9b624927507dde4d919bec2fffd25aef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxGridEvent::AltDown</definition>
        <argsstring>() const</argsstring>
        <name>AltDown</name>
        <qualifiedname>wxGridEvent::AltDown</qualifiedname>
        <briefdescription>
<para>Returns true if the Alt key was down at the time of the event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="6323" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_event_1a0240c3d5ed36a42f096a0898dffb57d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxGridEvent::ControlDown</definition>
        <argsstring>() const</argsstring>
        <name>ControlDown</name>
        <qualifiedname>wxGridEvent::ControlDown</qualifiedname>
        <briefdescription>
<para>Returns true if the Control key was down at the time of the event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="6328" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_event_1a0dad3524ee9f6486501c2aee9217b96f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxGridEvent::GetCol</definition>
        <argsstring>() const</argsstring>
        <name>GetCol</name>
        <qualifiedname>wxGridEvent::GetCol</qualifiedname>
        <briefdescription>
<para>Column at which the event occurred. </para>
        </briefdescription>
        <detaileddescription>
<para>Notice that for a <computeroutput>wxEVT_GRID_SELECT_CELL</computeroutput> event this column is the column of the newly selected cell while the previously selected cell can be retrieved using <ref refid="classwx_grid_1a03527c67f5d203b2f3adcb4aa4ca0575" kindref="member">wxGrid::GetGridCursorCol()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="6337" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_event_1a210ea046e8539c44b3a9fc1fe4fa6de8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxGridEvent::GetPosition</definition>
        <argsstring>() const</argsstring>
        <name>GetPosition</name>
        <qualifiedname>wxGridEvent::GetPosition</qualifiedname>
        <briefdescription>
<para>Position in pixels at which the event occurred. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="6342" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_event_1aa5b5903ab422edd6043100f0a225b518" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxGridEvent::GetRow</definition>
        <argsstring>() const</argsstring>
        <name>GetRow</name>
        <qualifiedname>wxGridEvent::GetRow</qualifiedname>
        <briefdescription>
<para>Row at which the event occurred. </para>
        </briefdescription>
        <detaileddescription>
<para>Notice that for a <computeroutput>wxEVT_GRID_SELECT_CELL</computeroutput> event this row is the row of the newly selected cell while the previously selected cell can be retrieved using <ref refid="classwx_grid_1a5f4b99f3ffbb5d857cbc84809c976aae" kindref="member">wxGrid::GetGridCursorRow()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="6351" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_event_1a5598476e2f561957bc592a4f92696d66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxGridEvent::MetaDown</definition>
        <argsstring>() const</argsstring>
        <name>MetaDown</name>
        <qualifiedname>wxGridEvent::MetaDown</qualifiedname>
        <briefdescription>
<para>Returns true if the Meta key was down at the time of the event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="6356" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_event_1aefd02209448d812a517136881a3592ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxGridEvent::Selecting</definition>
        <argsstring>() const</argsstring>
        <name>Selecting</name>
        <qualifiedname>wxGridEvent::Selecting</qualifiedname>
        <briefdescription>
<para>Returns true if the user is selecting grid cells, or false if deselecting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="6362" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_grid_event_1a52cfc397443ad22af46aaf084d1a340d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxGridEvent::ShiftDown</definition>
        <argsstring>() const</argsstring>
        <name>ShiftDown</name>
        <qualifiedname>wxGridEvent::ShiftDown</qualifiedname>
        <briefdescription>
<para>Returns true if the Shift key was down at the time of the event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/grid.h" line="6367" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This event class contains information about various grid events. </para>
    </briefdescription>
    <detaileddescription>
<para>Notice that all grid event table macros are available in two versions: <computeroutput>EVT_GRID_XXX</computeroutput> and <computeroutput>EVT_GRID_CMD_XXX</computeroutput>. The only difference between the two is that the former doesn&apos;t allow to specify the grid window identifier and so takes a single parameter, the event handler, but is not suitable if there is more than one grid control in the window where the event table is used (as it would catch the events from all the grids). The version with <computeroutput>CMD</computeroutput> takes the id as first argument and the event handler as the second one and so can be used with multiple grids as well. Otherwise there are no difference between the two and only the versions without the id are documented below for brevity.</para>
<para><heading level="2">Events using this class</heading>
</para>
<para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_grid_event" kindref="compound">wxGridEvent</ref>&amp;<nonbreakablespace/>event)</para>
<para>Event macros: <itemizedlist>
<listitem><para>EVT_GRID_CELL_CHANGING(func): The user is about to change the data in a cell. The new cell value as string is available from <ref refid="classwx_command_event_1a6aef039e72e358840a7c20da6473e9ae" kindref="member">GetString()</ref> event object method. This event can be vetoed if the change is not allowed. Processes a <computeroutput>wxEVT_GRID_CELL_CHANGING</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_CELL_CHANGED(func): The user changed the data in a cell. The old cell value as string is available from <ref refid="classwx_command_event_1a6aef039e72e358840a7c20da6473e9ae" kindref="member">GetString()</ref> event object method. Notice that vetoing this event still works for backwards compatibility reasons but any new code should only veto EVT_GRID_CELL_CHANGING event and not this one. Processes a <computeroutput>wxEVT_GRID_CELL_CHANGED</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_CELL_LEFT_CLICK(func): The user clicked a cell with the left mouse button. Processes a <computeroutput>wxEVT_GRID_CELL_LEFT_CLICK</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_CELL_LEFT_DCLICK(func): The user double-clicked a cell with the left mouse button. Processes a <computeroutput>wxEVT_GRID_CELL_LEFT_DCLICK</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_CELL_RIGHT_CLICK(func): The user clicked a cell with the right mouse button. Processes a <computeroutput>wxEVT_GRID_CELL_RIGHT_CLICK</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_CELL_RIGHT_DCLICK(func): The user double-clicked a cell with the right mouse button. Processes a <computeroutput>wxEVT_GRID_CELL_RIGHT_DCLICK</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_EDITOR_HIDDEN(func): The editor for a cell was hidden. Processes a <computeroutput>wxEVT_GRID_EDITOR_HIDDEN</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_EDITOR_SHOWN(func): The editor for a cell was shown. Processes a <computeroutput>wxEVT_GRID_EDITOR_SHOWN</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_LABEL_LEFT_CLICK(func): The user clicked a label with the left mouse button. Processes a <computeroutput>wxEVT_GRID_LABEL_LEFT_CLICK</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_LABEL_LEFT_DCLICK(func): The user double-clicked a label with the left mouse button. Processes a <computeroutput>wxEVT_GRID_LABEL_LEFT_DCLICK</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_LABEL_RIGHT_CLICK(func): The user clicked a label with the right mouse button. Processes a <computeroutput>wxEVT_GRID_LABEL_RIGHT_CLICK</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_LABEL_RIGHT_DCLICK(func): The user double-clicked a label with the right mouse button. Processes a <computeroutput>wxEVT_GRID_LABEL_RIGHT_DCLICK</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_SELECT_CELL(func): The given cell was made current, either by user or by the program via a call to SetGridCursor() or GoToCell(). Processes a <computeroutput>wxEVT_GRID_SELECT_CELL</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_ROW_MOVE(func): The user tries to change the order of the rows in the grid by dragging the row specified by <ref refid="classwx_grid_event_1aa5b5903ab422edd6043100f0a225b518" kindref="member">GetRow()</ref>. This event can be vetoed to either prevent the user from reordering the row change completely (but notice that if you don&apos;t want to allow it at all, you simply shouldn&apos;t call <ref refid="classwx_grid_1a9b35755deac74396cf02032b9f88d237" kindref="member">wxGrid::EnableDragRowMove()</ref> in the first place), vetoed but handled in some way in the handler, e.g. by really moving the row to the new position at the associated table level, or allowed to proceed in which case <ref refid="classwx_grid_1a1ddd8bf6b4bb38d8aee67e3bd7b69f4f" kindref="member">wxGrid::SetRowPos()</ref> is used to reorder the rows display order without affecting the use of the row indices otherwise. This event macro corresponds to <computeroutput>wxEVT_GRID_ROW_MOVE</computeroutput> event type. It is only available since wxWidgets 3.1.7. </para>
</listitem>
<listitem><para>EVT_GRID_COL_MOVE(func): The user tries to change the order of the columns in the grid by dragging the column specified by <ref refid="classwx_grid_event_1a0dad3524ee9f6486501c2aee9217b96f" kindref="member">GetCol()</ref>. This event can be vetoed to either prevent the user from reordering the column change completely (but notice that if you don&apos;t want to allow it at all, you simply shouldn&apos;t call <ref refid="classwx_grid_1a7ba69b3fd97ee090a88f592c28d34067" kindref="member">wxGrid::EnableDragColMove()</ref> in the first place), vetoed but handled in some way in the handler, e.g. by really moving the column to the new position at the associated table level, or allowed to proceed in which case <ref refid="classwx_grid_1abc846e26dc0080ad129f368bfaa6a49f" kindref="member">wxGrid::SetColPos()</ref> is used to reorder the columns display order without affecting the use of the column indices otherwise. This event macro corresponds to <computeroutput>wxEVT_GRID_COL_MOVE</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_COL_SORT(func): This event is generated when a column is clicked by the user and its name is explained by the fact that the custom reaction to a click on a column is to sort the grid contents by this column. However the grid itself has no special support for sorting and it&apos;s up to the handler of this event to update the associated table. But if the event is handled (and not vetoed) the grid supposes that the table was indeed resorted and updates the column to indicate the new sort order and refreshes itself. This event macro corresponds to <computeroutput>wxEVT_GRID_COL_SORT</computeroutput> event type. </para>
</listitem>
<listitem><para>EVT_GRID_TABBING(func): This event is generated when the user presses TAB or Shift-TAB in the grid. It can be used to customize the simple default TAB handling logic, e.g. to go to the next non-empty cell instead of just the next cell. See also <ref refid="classwx_grid_1a3f0bb553b28e7f00185c6c56d3c1262e" kindref="member">wxGrid::SetTabBehaviour()</ref>. This event is new since wxWidgets 2.9.5. </para>
</listitem>
</itemizedlist>
<heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__grid" kindref="compound">Grid Related Classes</ref>, <ref refid="group__group__class__events" kindref="compound">Events</ref> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxGridEvent</label>
        <link refid="classwx_grid_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxNotifyEvent</label>
        <link refid="classwx_notify_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxGridEvent</label>
        <link refid="classwx_grid_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxNotifyEvent</label>
        <link refid="classwx_notify_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="6" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/grid.h" line="6306" column="1" bodyfile="interface/wx/grid.h" bodystart="6307" bodyend="6368"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxGridEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_notify_event_1a7b23515f827b2ce1da1e6990d9aafe80" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>Allow</name></member>
      <member refid="classwx_grid_event_1a9b624927507dde4d919bec2fffd25aef" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>AltDown</name></member>
      <member refid="classwx_event_1a1458e0e59752bd8753ec20cb719e088b" prot="public" virt="pure-virtual"><scope>wxGridEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxGridEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_grid_event_1a0240c3d5ed36a42f096a0898dffb57d9" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>ControlDown</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxGridEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxGridEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_command_event_1a3d41eef5b753ff2fd0b822bd1e0c6af9" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetClientData</name></member>
      <member refid="classwx_command_event_1a48e7b34762b82cdc9d1b5d58d1e6a17f" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetClientObject</name></member>
      <member refid="classwx_grid_event_1a0dad3524ee9f6486501c2aee9217b96f" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetCol</name></member>
      <member refid="classwx_event_1ac4958ff6ec32b7f4b23066932d611131" prot="public" virt="virtual"><scope>wxGridEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1a1ed12f8a9b61af6a76c6746cb8acfeae" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1a01c89719ef6241a6e612a313a259c1c2" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_event_1aa46a14bdca4d0ebcd4f42e5805db1df9" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetEventUserData</name></member>
      <member refid="classwx_command_event_1abdba7c3e93f0dbf99f5382e60e7a461a" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetExtraLong</name></member>
      <member refid="classwx_event_1ac5fa5c10d4845d903e58026a42b403c7" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetId</name></member>
      <member refid="classwx_command_event_1a24ad2aab26646c762ca3092a7ffd5ccd" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetInt</name></member>
      <member refid="classwx_grid_event_1a210ea046e8539c44b3a9fc1fe4fa6de8" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetPosition</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_grid_event_1aa5b5903ab422edd6043100f0a225b518" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetRow</name></member>
      <member refid="classwx_command_event_1a93609c04b8fd7001259efb5d65645fe6" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetSelection</name></member>
      <member refid="classwx_event_1aa770dbcd0f1714ba097836af6534b4c5" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_command_event_1a6aef039e72e358840a7c20da6473e9ae" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetString</name></member>
      <member refid="classwx_event_1a48662230971127737d2500cef7be549d" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_notify_event_1a907334f4b322d93cf49304a939bba143" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>IsAllowed</name></member>
      <member refid="classwx_command_event_1a3e5510a00ebb9fb5e7bf7dc5e89f3588" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>IsChecked</name></member>
      <member refid="classwx_event_1a31f6a4377d6d36964b8eae4e56ec43e0" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_command_event_1a44f4144f027fcb7feadb4c23bcbfeb5f" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>IsSelection</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxGridEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxGridEvent</scope><name>m_refData</name></member>
      <member refid="classwx_grid_event_1a5598476e2f561957bc592a4f92696d66" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>MetaDown</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_grid_event_1aefd02209448d812a517136881a3592ad" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>Selecting</name></member>
      <member refid="classwx_command_event_1a1778d16766134e08cafcdb49b06855ce" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>SetClientData</name></member>
      <member refid="classwx_command_event_1a752e5a0fb8992b062c4dec6866171586" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>SetClientObject</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_command_event_1a13ac3c581b99d110bac2c6b74803d2df" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>SetExtraLong</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>SetId</name></member>
      <member refid="classwx_command_event_1aeaed91ffb1d02f07d7ea40f029f95a7c" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>SetInt</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_command_event_1a06ca56ac6680fe3b3178d8abd913d450" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>SetString</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_grid_event_1a52cfc397443ad22af46aaf084d1a340d" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>ShiftDown</name></member>
      <member refid="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>UnShare</name></member>
      <member refid="classwx_notify_event_1a49e4502414a11e273f51a34a21d2acd3" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>Veto</name></member>
      <member refid="classwx_command_event_1aad941347872cd71fedcfc765fae7b2f7" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>wxCommandEvent</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_grid_event_1a05e8831def820bf32a37693f500bf78d" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>wxGridEvent</name></member>
      <member refid="classwx_grid_event_1a36428d9ecc3022a8970491c0d65e84a6" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>wxGridEvent</name></member>
      <member refid="classwx_notify_event_1a4c97324fca04afe13beaa8a8a307ec7b" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>wxNotifyEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxGridEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxGridEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
