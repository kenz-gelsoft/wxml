<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_rich_text_paragraph_layout_box" kind="class" language="C++" prot="public">
    <compoundname>wxRichTextParagraphLayoutBox</compoundname>
    <basecompoundref refid="classwx_rich_text_composite_object" prot="public" virt="non-virtual">wxRichTextCompositeObject</basecompoundref>
    <derivedcompoundref refid="classwx_rich_text_box" prot="public" virt="non-virtual">wxRichTextBox</derivedcompoundref>
    <derivedcompoundref refid="classwx_rich_text_buffer" prot="public" virt="non-virtual">wxRichTextBuffer</derivedcompoundref>
    <derivedcompoundref refid="classwx_rich_text_field" prot="public" virt="non-virtual">wxRichTextField</derivedcompoundref>
    <includes local="no">wx/richtext/richtextbuffer.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classwx_rich_text_paragraph_layout_box_1aad3ecacd81aac8d87200f5c4c0fb9d48" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> *</type>
        <definition>wxRichTextCtrl* wxRichTextParagraphLayoutBox::m_ctrl</definition>
        <argsstring></argsstring>
        <name>m_ctrl</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::m_ctrl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3649" column="20" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3649" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_paragraph_layout_box_1a62c26becf6c117c10a2b1d81f6905d8d" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref></type>
        <definition>wxRichTextAttr wxRichTextParagraphLayoutBox::m_defaultAttributes</definition>
        <argsstring></argsstring>
        <name>m_defaultAttributes</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::m_defaultAttributes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3650" column="21" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3650" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_paragraph_layout_box_1a639814c45caa533a4c64536315a9124d" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref></type>
        <definition>wxRichTextRange wxRichTextParagraphLayoutBox::m_invalidRange</definition>
        <argsstring></argsstring>
        <name>m_invalidRange</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::m_invalidRange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3653" column="21" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_paragraph_layout_box_1a257576a394ce11b4f8bd5ba8ed9a09cd" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool wxRichTextParagraphLayoutBox::m_partialParagraph</definition>
        <argsstring></argsstring>
        <name>m_partialParagraph</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::m_partialParagraph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3656" column="21" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_paragraph_layout_box_1a00249be9f4b41a8a022eed7ac8de6eab" prot="protected" static="no" mutable="no">
        <type>wxRichTextFloatCollector *</type>
        <definition>wxRichTextFloatCollector* wxRichTextParagraphLayoutBox::m_floatCollector</definition>
        <argsstring></argsstring>
        <name>m_floatCollector</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::m_floatCollector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3659" column="30" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3659" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1adfe786694855ff4e007d420d77da73de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxRichTextParagraphLayoutBox::wxRichTextParagraphLayoutBox</definition>
        <argsstring>(wxRichTextObject *parent=NULL)</argsstring>
        <name>wxRichTextParagraphLayoutBox</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::wxRichTextParagraphLayoutBox</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
          <declname>parent</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3075" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1aad0eb446f3a2b47cb74679d3524ddf21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>wxRichTextParagraphLayoutBox::wxRichTextParagraphLayoutBox</definition>
        <argsstring>(const wxRichTextParagraphLayoutBox &amp;obj)</argsstring>
        <name>wxRichTextParagraphLayoutBox</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::wxRichTextParagraphLayoutBox</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_paragraph_layout_box" kindref="compound">wxRichTextParagraphLayoutBox</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3076" column="5" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3076" bodyend="3076"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a1614feaa729be3c031a048fd017a2274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxRichTextParagraphLayoutBox::~wxRichTextParagraphLayoutBox</definition>
        <argsstring>()</argsstring>
        <name>~wxRichTextParagraphLayoutBox</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::~wxRichTextParagraphLayoutBox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3077" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1affec7c54228ff46b74beda1609f444d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxRichTextParagraphLayoutBox::HitTest</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextDrawingContext &amp;context, const wxPoint &amp;pt, long &amp;textPosition, wxRichTextObject **obj, wxRichTextObject **contextObj, int flags=0)</argsstring>
        <name>HitTest</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::HitTest</qualifiedname>
        <reimplements refid="classwx_rich_text_composite_object_1afef3875a33413d27027588f42808ac22">HitTest</reimplements>
        <reimplementedby refid="classwx_rich_text_buffer_1a2b82943d3a78b564b1d910fa62ee9302">HitTest</reimplementedby>
        <reimplementedby refid="classwx_rich_text_cell_1a7055d07c13a714b8d693ff76edd605f3">HitTest</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1afd36011ba90432825e0b4121d58ea770">HitTest</reimplementedby>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>textPosition</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> **</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> **</type>
          <declname>contextObj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Hit-testing: returns a flag indicating hit test details, plus information about position. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>contextObj</emphasis> is returned to specify what object position is relevant to, since otherwise there&apos;s an ambiguity. @ obj might not be a child of <emphasis>contextObj</emphasis>, since we may be referring to the container itself if we have no hit on a child - for example if we click outside an object.</para>
<para>The function puts the position in <emphasis>textPosition</emphasis> if one is found. <emphasis>pt</emphasis> is in logical units (a zero y position is at the beginning of the buffer).</para>
<para><simplesect kind="return"><para>One of the <ref refid="richtextbuffer_8h_1ad855d173e40a6cffd90b8fe2b78c1490" kindref="member">wxRichTextHitTestFlags</ref> values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3081" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1adc089d67677bb52f00da702da4fd6844" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::Draw</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextDrawingContext &amp;context, const wxRichTextRange &amp;range, const wxRichTextSelection &amp;selection, const wxRect &amp;rect, int descent, int style)</argsstring>
        <name>Draw</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::Draw</qualifiedname>
        <reimplements refid="classwx_rich_text_object_1a6b38fa20816060d1272c5b7f4678a843">Draw</reimplements>
        <reimplementedby refid="classwx_rich_text_box_1a4f5c83ec0d835a9da96ddd10ee39e6a1">Draw</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a983a0aa60b877fafdd400a0afad022d4">Draw</reimplementedby>
        <reimplementedby refid="classwx_rich_text_cell_1a62d5214bf4da06e1411a1f16a0b79ffa">Draw</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1ae1b17440fa828dfaf7514fd749cb98b0">Draw</reimplementedby>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_selection" kindref="compound">wxRichTextSelection</ref> &amp;</type>
          <declname>selection</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>descent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Draw the item, within the given range. </para>
        </briefdescription>
        <detaileddescription>
<para>Some objects may ignore the range (for example paragraphs) while others must obey it (lines, to implement wrapping) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3083" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a790b7411a1fc83b518f02f9d3ca040d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::Layout</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextDrawingContext &amp;context, const wxRect &amp;rect, const wxRect &amp;parentRect, int style)</argsstring>
        <name>Layout</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::Layout</qualifiedname>
        <reimplements refid="classwx_rich_text_object_1a4dc323418f095b5a68c0629c77f77d9d">Layout</reimplements>
        <reimplementedby refid="classwx_rich_text_field_1a75fbf6af12162f4e4d0b7c9ca0154013">Layout</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1a9cfed3a7dc80e664b23b3e18df5bc705">Layout</reimplementedby>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>parentRect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Lay the item out at the specified position with the given size constraint. </para>
        </briefdescription>
        <detaileddescription>
<para>Layout must set the cached size. <emphasis>rect</emphasis> is the available space for the object, and <emphasis>parentRect</emphasis> is the container that is used to determine a relative size or position (for example if a text box must be 50% of the parent text box). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3085" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a985582c33a34184e3c83e0263c13df1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::GetRangeSize</definition>
        <argsstring>(const wxRichTextRange &amp;range, wxSize &amp;size, int &amp;descent, wxDC &amp;dc, wxRichTextDrawingContext &amp;context, int flags, const wxPoint &amp;position=wxPoint(0, 0), const wxSize &amp;parentSize=wxDefaultSize, wxArrayInt *partialExtents=NULL) const</argsstring>
        <name>GetRangeSize</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetRangeSize</qualifiedname>
        <reimplements refid="classwx_rich_text_composite_object_1a16cf33919bc89115c4057adc6cd9fbd4">GetRangeSize</reimplements>
        <reimplementedby refid="classwx_rich_text_field_1a45546ef9af15de016cbf3d6821899016">GetRangeSize</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1aa407c40cba9f88ac8ba97002c5a6a4cd">GetRangeSize</reimplementedby>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>descent</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>position</declname>
          <defval><ref refid="classwx_point" kindref="compound">wxPoint</ref>(0, 0)</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>parentSize</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type><ref refid="dynarray_8h_1add87f199292e36ee87efd6d7f0d4ee66" kindref="member">wxArrayInt</ref> *</type>
          <declname>partialExtents</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Returns the object size for the given range. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the range is invalid for this object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3087" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1aff46150c2c2cca5c915290423d8031c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::DeleteRange</definition>
        <argsstring>(const wxRichTextRange &amp;range)</argsstring>
        <name>DeleteRange</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::DeleteRange</qualifiedname>
        <reimplements refid="classwx_rich_text_composite_object_1a5612c0efc7c5400cba4f465c2073b614">DeleteRange</reimplements>
        <reimplementedby refid="classwx_rich_text_table_1ae6ba99b87bf218683da2f47d41270d87">DeleteRange</reimplementedby>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Deletes the given range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3089" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a9d9f56c64410944983d94cc8409544c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxRichTextParagraphLayoutBox::GetTextForRange</definition>
        <argsstring>(const wxRichTextRange &amp;range) const</argsstring>
        <name>GetTextForRange</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetTextForRange</qualifiedname>
        <reimplements refid="classwx_rich_text_composite_object_1a142e15fc0f98387fb689af0e70ef26e6">GetTextForRange</reimplements>
        <reimplementedby refid="classwx_rich_text_table_1a740126c3913bd58f2e80b80ed9d0e956">GetTextForRange</reimplementedby>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Returns any text in this object for the given range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3091" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a992efc05c57f94759d9fef90124c299d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::ImportFromXML</definition>
        <argsstring>(wxRichTextBuffer *buffer, wxXmlNode *node, wxRichTextXMLHandler *handler, bool *recurse)</argsstring>
        <name>ImportFromXML</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::ImportFromXML</qualifiedname>
        <reimplements refid="classwx_rich_text_object_1aaec1b3467076b92a18a8a45bc82ac476">ImportFromXML</reimplements>
        <reimplementedby refid="classwx_rich_text_table_1a0073bccb4cbb2c2aa6012d1995dfae43">ImportFromXML</reimplementedby>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="classwx_xml_node" kindref="compound">wxXmlNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_x_m_l_handler" kindref="compound">wxRichTextXMLHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>recurse</declname>
        </param>
        <briefdescription>
<para>Imports this object from XML. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3093" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a5b6acc40f0550a4ba2641ec9c18c8004" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxRichTextParagraphLayoutBox::GetXMLNodeName</definition>
        <argsstring>() const</argsstring>
        <name>GetXMLNodeName</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetXMLNodeName</qualifiedname>
        <reimplements refid="classwx_rich_text_object_1adef22a86697af249d1ae3e7e34bbcaf3">GetXMLNodeName</reimplements>
        <reimplementedby refid="classwx_rich_text_box_1a7de133da30114379e7da3e52378dcadf">GetXMLNodeName</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a220e6a72fd9584881b4318d4cc8cde7f">GetXMLNodeName</reimplementedby>
        <reimplementedby refid="classwx_rich_text_cell_1aa77c6e43c0fd65117dda77da22ee11b2">GetXMLNodeName</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1a253433bbbae80780854428abb6b9e6b9">GetXMLNodeName</reimplementedby>
        <briefdescription>
<para>Returns the XML node name of this object. </para>
        </briefdescription>
        <detaileddescription>
<para>This must be overridden for wxXmlNode-base XML export to work. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3103" column="22" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3103" bodyend="3103"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1aeb248e14ee111b010ddcb8a6702dfe5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::AcceptsFocus</definition>
        <argsstring>() const</argsstring>
        <name>AcceptsFocus</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::AcceptsFocus</qualifiedname>
        <reimplements refid="classwx_rich_text_object_1a66588efdeeb790bc6738aeeeb1f3367d">AcceptsFocus</reimplements>
        <reimplementedby refid="classwx_rich_text_field_1aed348fa62b9f81150312da3d0efb53b4">AcceptsFocus</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1ab4b5e879fb19f148a14e374473fbccb3">AcceptsFocus</reimplementedby>
        <briefdescription>
<para>Returns true if objects of this class can accept the focus, i.e. a call to SetFocusObject is possible. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, containers supporting text, such as a text box object, can accept the focus, but a table can&apos;t (set the focus to individual cells instead). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3105" column="18" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3105" bodyend="3105"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1ab1369ec5f46b7cfb81fd7b29d1633ea1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextParagraphLayoutBox::SetRichTextCtrl</definition>
        <argsstring>(wxRichTextCtrl *ctrl)</argsstring>
        <name>SetRichTextCtrl</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::SetRichTextCtrl</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <briefdescription>
<para>Associates a control with the buffer, for operations that for example require refreshing the window. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3112" column="10" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3112" bodyend="3112"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a0885c082bc9cf5063a487fb1a8d69738" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> *</type>
        <definition>wxRichTextCtrl * wxRichTextParagraphLayoutBox::GetRichTextCtrl</definition>
        <argsstring>() const</argsstring>
        <name>GetRichTextCtrl</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetRichTextCtrl</qualifiedname>
        <briefdescription>
<para>Returns the associated control. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3117" column="20" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3117" bodyend="3117"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1aec7c83a331a6c52775254690d53871e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextParagraphLayoutBox::SetPartialParagraph</definition>
        <argsstring>(bool partialPara)</argsstring>
        <name>SetPartialParagraph</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::SetPartialParagraph</qualifiedname>
        <param>
          <type>bool</type>
          <declname>partialPara</declname>
        </param>
        <briefdescription>
<para>Sets a flag indicating whether the last paragraph is partial or complete. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3122" column="10" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3122" bodyend="3122"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1adef245b983e3348707625e1f2af8097d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxRichTextParagraphLayoutBox::GetPartialParagraph</definition>
        <argsstring>() const</argsstring>
        <name>GetPartialParagraph</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetPartialParagraph</qualifiedname>
        <briefdescription>
<para>Returns a flag indicating whether the last paragraph is partial or complete. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3127" column="10" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3127" bodyend="3127"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1ab36f7828f6341ffecb7b1238e999dfc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_style_sheet" kindref="compound">wxRichTextStyleSheet</ref> *</type>
        <definition>virtual wxRichTextStyleSheet * wxRichTextParagraphLayoutBox::GetStyleSheet</definition>
        <argsstring>() const</argsstring>
        <name>GetStyleSheet</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetStyleSheet</qualifiedname>
        <reimplementedby refid="classwx_rich_text_buffer_1aff1373b6b3c6e541e201b76467cff87a">GetStyleSheet</reimplementedby>
        <briefdescription>
<para>Returns the style sheet associated with the overall buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3132" column="34"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a9b0282688f73ce267797ca025cbe0072" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::IsTopLevel</definition>
        <argsstring>() const</argsstring>
        <name>IsTopLevel</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::IsTopLevel</qualifiedname>
        <reimplements refid="classwx_rich_text_object_1abaca17399348b08be89f129dda6bcd1f">IsTopLevel</reimplements>
        <reimplementedby refid="classwx_rich_text_field_1aa2fed25cc884b695b13361ccc9736432">IsTopLevel</reimplementedby>
        <briefdescription>
<para>Returns true if this object is top-level, i.e. contains its own paragraphs, such as a text box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3134" column="18" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3134" bodyend="3134"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a44943c709ae2a2e25eb2d73e96094692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxRichTextParagraphLayoutBox::InsertParagraphsWithUndo</definition>
        <argsstring>(wxRichTextBuffer *buffer, long pos, const wxRichTextParagraphLayoutBox &amp;paragraphs, wxRichTextCtrl *ctrl, int flags=0)</argsstring>
        <name>InsertParagraphsWithUndo</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::InsertParagraphsWithUndo</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_paragraph_layout_box" kindref="compound">wxRichTextParagraphLayoutBox</ref> &amp;</type>
          <declname>paragraphs</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Submits a command to insert paragraphs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3141" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a17c518c277dc5854f5bafb4e7703fdc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxRichTextParagraphLayoutBox::InsertTextWithUndo</definition>
        <argsstring>(wxRichTextBuffer *buffer, long pos, const wxString &amp;text, wxRichTextCtrl *ctrl, int flags=0)</argsstring>
        <name>InsertTextWithUndo</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::InsertTextWithUndo</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Submits a command to insert the given text. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3146" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a78892fd039f753b07e3caaf7ed9c3513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxRichTextParagraphLayoutBox::InsertNewlineWithUndo</definition>
        <argsstring>(wxRichTextBuffer *buffer, long pos, wxRichTextCtrl *ctrl, int flags=0)</argsstring>
        <name>InsertNewlineWithUndo</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::InsertNewlineWithUndo</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Submits a command to insert the given text. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3151" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1aff0773fa3647597329cb219b794c6594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxRichTextParagraphLayoutBox::InsertImageWithUndo</definition>
        <argsstring>(wxRichTextBuffer *buffer, long pos, const wxRichTextImageBlock &amp;imageBlock, wxRichTextCtrl *ctrl, int flags, const wxRichTextAttr &amp;textAttr)</argsstring>
        <name>InsertImageWithUndo</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::InsertImageWithUndo</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_image_block" kindref="compound">wxRichTextImageBlock</ref> &amp;</type>
          <declname>imageBlock</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>textAttr</declname>
        </param>
        <briefdescription>
<para>Submits a command to insert the given image. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3156" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1affb2cb70812a3e248390a7be0a1dc786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rich_text_field" kindref="compound">wxRichTextField</ref> *</type>
        <definition>wxRichTextField * wxRichTextParagraphLayoutBox::InsertFieldWithUndo</definition>
        <argsstring>(wxRichTextBuffer *buffer, long pos, const wxString &amp;fieldType, const wxRichTextProperties &amp;properties, wxRichTextCtrl *ctrl, int flags, const wxRichTextAttr &amp;textAttr)</argsstring>
        <name>InsertFieldWithUndo</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::InsertFieldWithUndo</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>fieldType</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_properties" kindref="compound">wxRichTextProperties</ref> &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>textAttr</declname>
        </param>
        <briefdescription>
<para>Submits a command to insert the given field. </para>
        </briefdescription>
        <detaileddescription>
<para>Field data can be included in properties.</para>
<para><simplesect kind="see"><para><ref refid="classwx_rich_text_field" kindref="compound">wxRichTextField</ref>, <ref refid="classwx_rich_text_field_type" kindref="compound">wxRichTextFieldType</ref>, <ref refid="classwx_rich_text_field_type_standard" kindref="compound">wxRichTextFieldTypeStandard</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3165" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a2488bcb83d081b62615d5e99ffeed93e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref></type>
        <definition>wxRichTextAttr wxRichTextParagraphLayoutBox::GetStyleForNewParagraph</definition>
        <argsstring>(wxRichTextBuffer *buffer, long pos, bool caretPosition=false, bool lookUpNewParaStyle=false) const</argsstring>
        <name>GetStyleForNewParagraph</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetStyleForNewParagraph</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caretPosition</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lookUpNewParaStyle</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the style that is appropriate for a new paragraph at this position. </para>
        </briefdescription>
        <detaileddescription>
<para>If the previous paragraph has a paragraph style name, looks up the next-paragraph style. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3175" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a2f4de7634824d8f3012172c36e2c4ef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
        <definition>wxRichTextObject * wxRichTextParagraphLayoutBox::InsertObjectWithUndo</definition>
        <argsstring>(wxRichTextBuffer *buffer, long pos, wxRichTextObject *object, wxRichTextCtrl *ctrl, int flags=0)</argsstring>
        <name>InsertObjectWithUndo</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::InsertObjectWithUndo</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Inserts an object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3180" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a16134998266a0f8a52e0ef7abaf8cb9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxRichTextParagraphLayoutBox::DeleteRangeWithUndo</definition>
        <argsstring>(const wxRichTextRange &amp;range, wxRichTextCtrl *ctrl, wxRichTextBuffer *buffer)</argsstring>
        <name>DeleteRangeWithUndo</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::DeleteRangeWithUndo</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> *</type>
          <declname>ctrl</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Submits a command to delete this range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3185" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a466086783eaec4b31c1574d1e9f05edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextParagraphLayoutBox::DrawFloats</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextDrawingContext &amp;context, const wxRichTextRange &amp;range, const wxRichTextSelection &amp;selection, const wxRect &amp;rect, int descent, int style)</argsstring>
        <name>DrawFloats</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::DrawFloats</qualifiedname>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_selection" kindref="compound">wxRichTextSelection</ref> &amp;</type>
          <declname>selection</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>descent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Draws the floating objects in this buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3190" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1af0b0f2cb12a0a03979b67cfbc2f28e9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextParagraphLayoutBox::MoveAnchoredObjectToParagraph</definition>
        <argsstring>(wxRichTextParagraph *from, wxRichTextParagraph *to, wxRichTextObject *obj)</argsstring>
        <name>MoveAnchoredObjectToParagraph</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::MoveAnchoredObjectToParagraph</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_paragraph" kindref="compound">wxRichTextParagraph</ref> *</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_paragraph" kindref="compound">wxRichTextParagraph</ref> *</type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Moves an anchored object to another paragraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3195" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a2dc790fa7b65a59c15efabc59985cfa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextParagraphLayoutBox::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::Init</qualifiedname>
        <briefdescription>
<para>Initializes the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3200" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1aa1b695dd07351d19b8d8fa4cc18847fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextParagraphLayoutBox::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::Clear</qualifiedname>
        <briefdescription>
<para>Clears all the children. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3205" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1aed81dbcc9670cea8b6056398202aad25" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextParagraphLayoutBox::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::Reset</qualifiedname>
        <briefdescription>
<para>Clears and initializes with one blank paragraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3210" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1aa4f673254e4cc4325e5b299cd4eb9955" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref></type>
        <definition>virtual wxRichTextRange wxRichTextParagraphLayoutBox::AddParagraph</definition>
        <argsstring>(const wxString &amp;text, wxRichTextAttr *paraStyle=NULL)</argsstring>
        <name>AddParagraph</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::AddParagraph</qualifiedname>
        <reimplementedby refid="classwx_rich_text_buffer_1a16edc6d717aa3fe161500c951c94c46e">AddParagraph</reimplementedby>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> *</type>
          <declname>paraStyle</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Convenience function to add a paragraph of text. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3215" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1aca17a22d4bd06a6c84e36c3c95705f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref></type>
        <definition>virtual wxRichTextRange wxRichTextParagraphLayoutBox::AddImage</definition>
        <argsstring>(const wxImage &amp;image, wxRichTextAttr *paraStyle=NULL)</argsstring>
        <name>AddImage</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::AddImage</qualifiedname>
        <param>
          <type>const <ref refid="classwx_image" kindref="compound">wxImage</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> *</type>
          <declname>paraStyle</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Convenience function to add an image. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3220" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a36c81d6861efc59bf5c690e0119e353b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref></type>
        <definition>virtual wxRichTextRange wxRichTextParagraphLayoutBox::AddParagraphs</definition>
        <argsstring>(const wxString &amp;text, wxRichTextAttr *paraStyle=NULL)</argsstring>
        <name>AddParagraphs</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::AddParagraphs</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> *</type>
          <declname>paraStyle</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Adds multiple paragraphs, based on newlines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3225" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a88183bc2c6221457282d0ee45d32df68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_line" kindref="compound">wxRichTextLine</ref> *</type>
        <definition>virtual wxRichTextLine * wxRichTextParagraphLayoutBox::GetLineAtPosition</definition>
        <argsstring>(long pos, bool caretPosition=false) const</argsstring>
        <name>GetLineAtPosition</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetLineAtPosition</qualifiedname>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caretPosition</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the line at the given position. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>caretPosition</emphasis> is true, the position is a caret position, which is normally a smaller number. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3231" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a6bd5209a91779aa86a442b32cc544ff1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_line" kindref="compound">wxRichTextLine</ref> *</type>
        <definition>virtual wxRichTextLine * wxRichTextParagraphLayoutBox::GetLineAtYPosition</definition>
        <argsstring>(int y) const</argsstring>
        <name>GetLineAtYPosition</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetLineAtYPosition</qualifiedname>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns the line at the given y pixel position, or the last line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3236" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a10bfeb4101fc68c2d8afe911a8a4a3bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_paragraph" kindref="compound">wxRichTextParagraph</ref> *</type>
        <definition>virtual wxRichTextParagraph * wxRichTextParagraphLayoutBox::GetParagraphAtPosition</definition>
        <argsstring>(long pos, bool caretPosition=false) const</argsstring>
        <name>GetParagraphAtPosition</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetParagraphAtPosition</qualifiedname>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caretPosition</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the paragraph at the given character or caret position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3241" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a0798d1d6b4a7784e2f23a01fc1eb3d51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxRichTextParagraphLayoutBox::GetLineSizeAtPosition</definition>
        <argsstring>(long pos, bool caretPosition=false) const</argsstring>
        <name>GetLineSizeAtPosition</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetLineSizeAtPosition</qualifiedname>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caretPosition</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the line size at the given position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3246" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a8f44027c2a859f313d3067e5b0a0b109" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long wxRichTextParagraphLayoutBox::GetVisibleLineNumber</definition>
        <argsstring>(long pos, bool caretPosition=false, bool startOfLine=false) const</argsstring>
        <name>GetVisibleLineNumber</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetVisibleLineNumber</qualifiedname>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caretPosition</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>startOfLine</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Given a position, returns the number of the visible line (potentially many to a paragraph), starting from zero at the start of the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>We also have to pass a bool (<emphasis>startOfLine</emphasis>) that indicates whether the caret is being shown at the end of the previous line or at the start of the next, since the caret can be shown at two visible positions for the same underlying position. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3255" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1ad9a4c30f66790c6ab95f06383e81639c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_line" kindref="compound">wxRichTextLine</ref> *</type>
        <definition>virtual wxRichTextLine * wxRichTextParagraphLayoutBox::GetLineForVisibleLineNumber</definition>
        <argsstring>(long lineNumber) const</argsstring>
        <name>GetLineForVisibleLineNumber</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetLineForVisibleLineNumber</qualifiedname>
        <param>
          <type>long</type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
<para>Given a line number, returns the corresponding <ref refid="classwx_rich_text_line" kindref="compound">wxRichTextLine</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3260" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a09ab0d065c39c24658d49bed574ec129" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
        <definition>virtual wxRichTextObject * wxRichTextParagraphLayoutBox::GetLeafObjectAtPosition</definition>
        <argsstring>(long position) const</argsstring>
        <name>GetLeafObjectAtPosition</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetLeafObjectAtPosition</qualifiedname>
        <param>
          <type>long</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Returns the leaf object in a paragraph at this position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3265" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1ac81a92f97ee7951c3f33500c5ba78bf7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_paragraph" kindref="compound">wxRichTextParagraph</ref> *</type>
        <definition>virtual wxRichTextParagraph * wxRichTextParagraphLayoutBox::GetParagraphAtLine</definition>
        <argsstring>(long paragraphNumber) const</argsstring>
        <name>GetParagraphAtLine</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetParagraphAtLine</qualifiedname>
        <param>
          <type>long</type>
          <declname>paragraphNumber</declname>
        </param>
        <briefdescription>
<para>Returns the paragraph by number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3270" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a1f02a40bbe57807fe70b872b625b405a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_paragraph" kindref="compound">wxRichTextParagraph</ref> *</type>
        <definition>virtual wxRichTextParagraph * wxRichTextParagraphLayoutBox::GetParagraphForLine</definition>
        <argsstring>(wxRichTextLine *line) const</argsstring>
        <name>GetParagraphForLine</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetParagraphForLine</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_line" kindref="compound">wxRichTextLine</ref> *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Returns the paragraph for a given line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3275" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1adf35f4f58d9c2629aba7422010c0ea75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxRichTextParagraphLayoutBox::GetParagraphLength</definition>
        <argsstring>(long paragraphNumber) const</argsstring>
        <name>GetParagraphLength</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetParagraphLength</qualifiedname>
        <param>
          <type>long</type>
          <declname>paragraphNumber</declname>
        </param>
        <briefdescription>
<para>Returns the length of the paragraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3280" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a89554ec1a1bc776349e7900e6ecc6f5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int wxRichTextParagraphLayoutBox::GetParagraphCount</definition>
        <argsstring>() const</argsstring>
        <name>GetParagraphCount</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetParagraphCount</qualifiedname>
        <briefdescription>
<para>Returns the number of paragraphs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3285" column="17" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3285" bodyend="3285"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1af341d8be4b0b7370bb2e1da3b660a413" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxRichTextParagraphLayoutBox::GetLineCount</definition>
        <argsstring>() const</argsstring>
        <name>GetLineCount</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetLineCount</qualifiedname>
        <briefdescription>
<para>Returns the number of visible lines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3290" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a1f6374da6151ad1e442f4c4d68da45d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxRichTextParagraphLayoutBox::GetParagraphText</definition>
        <argsstring>(long paragraphNumber) const</argsstring>
        <name>GetParagraphText</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetParagraphText</qualifiedname>
        <param>
          <type>long</type>
          <declname>paragraphNumber</declname>
        </param>
        <briefdescription>
<para>Returns the text of the paragraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3295" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a7f3d4e7820daa9c3a9ea122330bc53c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long wxRichTextParagraphLayoutBox::XYToPosition</definition>
        <argsstring>(long x, long y) const</argsstring>
        <name>XYToPosition</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::XYToPosition</qualifiedname>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Converts zero-based line column and paragraph number to a position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3300" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1af55ce183fd2b8d463b92653cef5a6d59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::PositionToXY</definition>
        <argsstring>(long pos, long *x, long *y) const</argsstring>
        <name>PositionToXY</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::PositionToXY</qualifiedname>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Converts a zero-based position to line column and paragraph number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3305" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a5f9a633f68368d63e56b92f04fdf62f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::SetStyle</definition>
        <argsstring>(const wxRichTextRange &amp;range, const wxRichTextAttr &amp;style, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO)</argsstring>
        <name>SetStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::SetStyle</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="richtextbuffer_8h_1aeafdee4672685bce0b5227a8901cc3f0" kindref="member">wxRICHTEXT_SETSTYLE_WITH_UNDO</ref></defval>
        </param>
        <briefdescription>
<para>Sets the attributes for the given range. </para>
        </briefdescription>
        <detaileddescription>
<para>Pass flags to determine how the attributes are set.</para>
<para>The end point of range is specified as the last character position of the span of text. So, for example, to set the style for a character at position 5, use the range (5,5). This differs from the <ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> API, where you would specify (5,6).</para>
<para><emphasis>flags</emphasis> may contain a bit list of the following values:<itemizedlist>
<listitem><para>wxRICHTEXT_SETSTYLE_NONE: no style flag.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_WITH_UNDO: specifies that this operation should be undoable.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_OPTIMIZE: specifies that the style should not be applied if the combined style at this point is already the style in question.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_PARAGRAPHS_ONLY: specifies that the style should only be applied to paragraphs, and not the content. This allows content styling to be preserved independently from that of e.g. a named paragraph style.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_CHARACTERS_ONLY: specifies that the style should only be applied to characters, and not the paragraph. This allows content styling to be preserved independently from that of e.g. a named paragraph style.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_RESET: resets (clears) the existing style before applying the new style.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_REMOVE: removes the specified style. Only the style flags are used in this operation. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3335" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a599ecbc7d96efecdbc1ead396347abe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextParagraphLayoutBox::SetStyle</definition>
        <argsstring>(wxRichTextObject *obj, const wxRichTextAttr &amp;textAttr, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO)</argsstring>
        <name>SetStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::SetStyle</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>textAttr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="richtextbuffer_8h_1aeafdee4672685bce0b5227a8901cc3f0" kindref="member">wxRICHTEXT_SETSTYLE_WITH_UNDO</ref></defval>
        </param>
        <briefdescription>
<para>Sets the attributes for the given object only, for example the box attributes for a text box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3340" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1ac89e47df481c5ce0ddb11ef0db616ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::GetStyle</definition>
        <argsstring>(long position, wxRichTextAttr &amp;style)</argsstring>
        <name>GetStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetStyle</qualifiedname>
        <param>
          <type>long</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Returns the combined text attributes for this position. </para>
        </briefdescription>
        <detaileddescription>
<para>This function gets the <emphasis>uncombined</emphasis> style - that is, the attributes associated with the paragraph or character content, and not necessarily the combined attributes you see on the screen. To get the combined attributes, use <ref refid="classwx_rich_text_paragraph_layout_box_1ac89e47df481c5ce0ddb11ef0db616ab2" kindref="member">GetStyle()</ref>. If you specify (any) paragraph attribute in <emphasis>style&apos;s</emphasis> flags, this function will fetch the paragraph attributes. Otherwise, it will return the character attributes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3352" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a0fc591ede823029284311ddb9d7bbe78" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::GetUncombinedStyle</definition>
        <argsstring>(long position, wxRichTextAttr &amp;style)</argsstring>
        <name>GetUncombinedStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetUncombinedStyle</qualifiedname>
        <param>
          <type>long</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Returns the content (uncombined) attributes for this position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3357" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1af9595681004d7a43088f1f8073113d61" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::DoGetStyle</definition>
        <argsstring>(long position, wxRichTextAttr &amp;style, bool combineStyles=true)</argsstring>
        <name>DoGetStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::DoGetStyle</qualifiedname>
        <param>
          <type>long</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>combineStyles</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Implementation helper for GetStyle. </para>
        </briefdescription>
        <detaileddescription>
<para>If combineStyles is true, combine base, paragraph and context attributes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3363" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1ac0df25c4cec456c39a48ea0bafbc7a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::GetStyleForRange</definition>
        <argsstring>(const wxRichTextRange &amp;range, wxRichTextAttr &amp;style)</argsstring>
        <name>GetStyleForRange</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetStyleForRange</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>This function gets a style representing the common, combined attributes in the given range. </para>
        </briefdescription>
        <detaileddescription>
<para>Attributes which have different values within the specified range will not be included the style flags.</para>
<para>The function is used to get the attributes to display in the formatting dialog: the user can edit the attributes common to the selection, and optionally specify the values of further attributes to be applied uniformly.</para>
<para>To apply the edited attributes, you can use <ref refid="classwx_rich_text_paragraph_layout_box_1a5f9a633f68368d63e56b92f04fdf62f7" kindref="member">SetStyle()</ref> specifying the wxRICHTEXT_SETSTYLE_OPTIMIZE flag, which will only apply attributes that are different from the <emphasis>combined</emphasis> attributes within the range. So, the user edits the effective, displayed attributes for the range, but his choice won&apos;t be applied unnecessarily to content. As an example, say the style for a paragraph specifies bold, but the paragraph text doesn&apos;t specify a weight. The combined style is bold, and this is what the user will see on-screen and in the formatting dialog. The user now specifies red text, in addition to bold. When applying with <ref refid="classwx_rich_text_paragraph_layout_box_1a5f9a633f68368d63e56b92f04fdf62f7" kindref="member">SetStyle()</ref>, the content font weight attributes won&apos;t be changed to bold because this is already specified by the paragraph. However the text colour attributes <emphasis>will</emphasis> be changed to show red. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3388" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a6b1e221fd930c6e3b362e6d21fd859ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxRichTextParagraphLayoutBox::CollectStyle</definition>
        <argsstring>(wxRichTextAttr &amp;currentStyle, const wxRichTextAttr &amp;style, wxRichTextAttr &amp;clashingAttr, wxRichTextAttr &amp;absentAttr)</argsstring>
        <name>CollectStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::CollectStyle</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>currentStyle</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>clashingAttr</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>absentAttr</declname>
        </param>
        <briefdescription>
<para>Combines <emphasis>style</emphasis> with <emphasis>currentStyle</emphasis> for the purpose of summarising the attributes of a range of content. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3394" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a4c459752dd789eb8fbf788284a101055" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::SetListStyle</definition>
        <argsstring>(const wxRichTextRange &amp;range, wxRichTextListStyleDefinition *def, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int startFrom=1, int specifiedLevel=-1)</argsstring>
        <name>SetListStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::SetListStyle</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_list_style_definition" kindref="compound">wxRichTextListStyleDefinition</ref> *</type>
          <declname>def</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="richtextbuffer_8h_1aeafdee4672685bce0b5227a8901cc3f0" kindref="member">wxRICHTEXT_SETSTYLE_WITH_UNDO</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>startFrom</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>specifiedLevel</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Sets the list attributes for the given range, passing flags to determine how the attributes are set. </para>
        </briefdescription>
        <detaileddescription>
<para>Either the style definition or the name of the style definition (in the current sheet) can be passed.</para>
<para><emphasis>flags</emphasis> is a bit list of the following:<itemizedlist>
<listitem><para>wxRICHTEXT_SETSTYLE_WITH_UNDO: specifies that this command will be undoable.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_RENUMBER: specifies that numbering should start from <emphasis>startFrom</emphasis>, otherwise existing attributes are used.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_SPECIFY_LEVEL: specifies that <emphasis>listLevel</emphasis> should be used as the level for all paragraphs, otherwise the current indentation will be used.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="classwx_rich_text_paragraph_layout_box_1a825085f7c9721d359720198593320850" kindref="member">NumberList()</ref>, <ref refid="classwx_rich_text_paragraph_layout_box_1a8b43b3d776a08006cfe3db3564038606" kindref="member">PromoteList()</ref>, <ref refid="classwx_rich_text_paragraph_layout_box_1af91db14fd01bde17aa12ad400a749e97" kindref="member">ClearListStyle()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3412" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1aa0a346dcc964a3fa12f34fbb2ba01e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::SetListStyle</definition>
        <argsstring>(const wxRichTextRange &amp;range, const wxString &amp;defName, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int startFrom=1, int specifiedLevel=-1)</argsstring>
        <name>SetListStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::SetListStyle</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>defName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="richtextbuffer_8h_1aeafdee4672685bce0b5227a8901cc3f0" kindref="member">wxRICHTEXT_SETSTYLE_WITH_UNDO</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>startFrom</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>specifiedLevel</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3413" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1af91db14fd01bde17aa12ad400a749e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::ClearListStyle</definition>
        <argsstring>(const wxRichTextRange &amp;range, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO)</argsstring>
        <name>ClearListStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::ClearListStyle</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="richtextbuffer_8h_1aeafdee4672685bce0b5227a8901cc3f0" kindref="member">wxRICHTEXT_SETSTYLE_WITH_UNDO</ref></defval>
        </param>
        <briefdescription>
<para>Clears the list style from the given range, clearing list-related attributes and applying any named paragraph style associated with each paragraph. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>flags</emphasis> is a bit list of the following:<itemizedlist>
<listitem><para>wxRICHTEXT_SETSTYLE_WITH_UNDO: specifies that this command will be undoable.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="classwx_rich_text_paragraph_layout_box_1a4c459752dd789eb8fbf788284a101055" kindref="member">SetListStyle()</ref>, <ref refid="classwx_rich_text_paragraph_layout_box_1a8b43b3d776a08006cfe3db3564038606" kindref="member">PromoteList()</ref>, <ref refid="classwx_rich_text_paragraph_layout_box_1a825085f7c9721d359720198593320850" kindref="member">NumberList()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3425" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a825085f7c9721d359720198593320850" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::NumberList</definition>
        <argsstring>(const wxRichTextRange &amp;range, wxRichTextListStyleDefinition *def=NULL, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int startFrom=1, int specifiedLevel=-1)</argsstring>
        <name>NumberList</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::NumberList</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_list_style_definition" kindref="compound">wxRichTextListStyleDefinition</ref> *</type>
          <declname>def</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="richtextbuffer_8h_1aeafdee4672685bce0b5227a8901cc3f0" kindref="member">wxRICHTEXT_SETSTYLE_WITH_UNDO</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>startFrom</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>specifiedLevel</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Numbers the paragraphs in the given range. </para>
        </briefdescription>
        <detaileddescription>
<para>Pass flags to determine how the attributes are set. Either the style definition or the name of the style definition (in the current sheet) can be passed.</para>
<para><emphasis>flags</emphasis> is a bit list of the following:<itemizedlist>
<listitem><para>wxRICHTEXT_SETSTYLE_WITH_UNDO: specifies that this command will be undoable.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_RENUMBER: specifies that numbering should start from <emphasis>startFrom</emphasis>, otherwise existing attributes are used.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_SPECIFY_LEVEL: specifies that <emphasis>listLevel</emphasis> should be used as the level for all paragraphs, otherwise the current indentation will be used.</para>
</listitem></itemizedlist>
</para>
<para><emphasis>def</emphasis> can be NULL to indicate that the existing list style should be used.</para>
<para><simplesect kind="see"><para><ref refid="classwx_rich_text_paragraph_layout_box_1a4c459752dd789eb8fbf788284a101055" kindref="member">SetListStyle()</ref>, <ref refid="classwx_rich_text_paragraph_layout_box_1a8b43b3d776a08006cfe3db3564038606" kindref="member">PromoteList()</ref>, <ref refid="classwx_rich_text_paragraph_layout_box_1af91db14fd01bde17aa12ad400a749e97" kindref="member">ClearListStyle()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3446" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1ae8064f76f2624d882291f377e774eaf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::NumberList</definition>
        <argsstring>(const wxRichTextRange &amp;range, const wxString &amp;defName, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int startFrom=1, int specifiedLevel=-1)</argsstring>
        <name>NumberList</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::NumberList</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>defName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="richtextbuffer_8h_1aeafdee4672685bce0b5227a8901cc3f0" kindref="member">wxRICHTEXT_SETSTYLE_WITH_UNDO</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>startFrom</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>specifiedLevel</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3447" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a8b43b3d776a08006cfe3db3564038606" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::PromoteList</definition>
        <argsstring>(int promoteBy, const wxRichTextRange &amp;range, wxRichTextListStyleDefinition *def=NULL, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int specifiedLevel=-1)</argsstring>
        <name>PromoteList</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::PromoteList</qualifiedname>
        <param>
          <type>int</type>
          <declname>promoteBy</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_list_style_definition" kindref="compound">wxRichTextListStyleDefinition</ref> *</type>
          <declname>def</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="richtextbuffer_8h_1aeafdee4672685bce0b5227a8901cc3f0" kindref="member">wxRICHTEXT_SETSTYLE_WITH_UNDO</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>specifiedLevel</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Promotes the list items within the given range. </para>
        </briefdescription>
        <detaileddescription>
<para>A positive <emphasis>promoteBy</emphasis> produces a smaller indent, and a negative number produces a larger indent. Pass flags to determine how the attributes are set. Either the style definition or the name of the style definition (in the current sheet) can be passed.</para>
<para><emphasis>flags</emphasis> is a bit list of the following:<itemizedlist>
<listitem><para>wxRICHTEXT_SETSTYLE_WITH_UNDO: specifies that this command will be undoable.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_RENUMBER: specifies that numbering should start from <emphasis>startFrom</emphasis>, otherwise existing attributes are used.</para>
</listitem><listitem><para>wxRICHTEXT_SETSTYLE_SPECIFY_LEVEL: specifies that <emphasis>listLevel</emphasis> should be used as the level for all paragraphs, otherwise the current indentation will be used.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="classwx_rich_text_paragraph_layout_box_1a4c459752dd789eb8fbf788284a101055" kindref="member">SetListStyle()</ref>, <ref refid="classwx_rich_text_paragraph_layout_box_1a4c459752dd789eb8fbf788284a101055" kindref="member">SetListStyle()</ref>, <ref refid="classwx_rich_text_paragraph_layout_box_1af91db14fd01bde17aa12ad400a749e97" kindref="member">ClearListStyle()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3467" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1acc19656c798ebdd26a6dd2b9c28b19ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::PromoteList</definition>
        <argsstring>(int promoteBy, const wxRichTextRange &amp;range, const wxString &amp;defName, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int specifiedLevel=-1)</argsstring>
        <name>PromoteList</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::PromoteList</qualifiedname>
        <param>
          <type>int</type>
          <declname>promoteBy</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>defName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="richtextbuffer_8h_1aeafdee4672685bce0b5227a8901cc3f0" kindref="member">wxRICHTEXT_SETSTYLE_WITH_UNDO</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>specifiedLevel</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3468" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1aaceead41d7029976ee6371d8412acaec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::DoNumberList</definition>
        <argsstring>(const wxRichTextRange &amp;range, const wxRichTextRange &amp;promotionRange, int promoteBy, wxRichTextListStyleDefinition *def, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int startFrom=1, int specifiedLevel=-1)</argsstring>
        <name>DoNumberList</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::DoNumberList</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>promotionRange</declname>
        </param>
        <param>
          <type>int</type>
          <declname>promoteBy</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_list_style_definition" kindref="compound">wxRichTextListStyleDefinition</ref> *</type>
          <declname>def</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="richtextbuffer_8h_1aeafdee4672685bce0b5227a8901cc3f0" kindref="member">wxRICHTEXT_SETSTYLE_WITH_UNDO</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>startFrom</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>specifiedLevel</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Helper for NumberList and PromoteList, that does renumbering and promotion simultaneously <emphasis>def</emphasis> can be NULL/empty to indicate that the existing list style should be used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3475" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1ac14d48b8ac670ff7760c1bb5d5ee2fe3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::FindNextParagraphNumber</definition>
        <argsstring>(wxRichTextParagraph *previousParagraph, wxRichTextAttr &amp;attr) const</argsstring>
        <name>FindNextParagraphNumber</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::FindNextParagraphNumber</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_paragraph" kindref="compound">wxRichTextParagraph</ref> *</type>
          <declname>previousParagraph</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Fills in the attributes for numbering a paragraph after previousParagraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3480" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a701a9e4333dc76afc54cf633128dd619" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::SetProperties</definition>
        <argsstring>(const wxRichTextRange &amp;range, const wxRichTextProperties &amp;properties, int flags=wxRICHTEXT_SETPROPERTIES_WITH_UNDO)</argsstring>
        <name>SetProperties</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::SetProperties</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_properties" kindref="compound">wxRichTextProperties</ref> &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="richtextbuffer_8h_1a44b78fa79b9b1ff210d896e6de170790" kindref="member">wxRICHTEXT_SETPROPERTIES_WITH_UNDO</ref></defval>
        </param>
        <briefdescription>
<para>Sets the properties for the given range, passing flags to determine how the attributes are set. </para>
        </briefdescription>
        <detaileddescription>
<para>You can merge properties or replace them.</para>
<para>The end point of range is specified as the last character position of the span of text, plus one. So, for example, to set the properties for a character at position 5, use the range (5,6).</para>
<para><emphasis>flags</emphasis> may contain a bit list of the following values:<itemizedlist>
<listitem><para>wxRICHTEXT_SETPROPERTIES_NONE: no flag.</para>
</listitem><listitem><para>wxRICHTEXT_SETPROPERTIES_WITH_UNDO: specifies that this operation should be undoable.</para>
</listitem><listitem><para>wxRICHTEXT_SETPROPERTIES_PARAGRAPHS_ONLY: specifies that the properties should only be applied to paragraphs, and not the content.</para>
</listitem><listitem><para>wxRICHTEXT_SETPROPERTIES_CHARACTERS_ONLY: specifies that the properties should only be applied to characters, and not the paragraph.</para>
</listitem><listitem><para>wxRICHTEXT_SETPROPERTIES_RESET: resets (clears) the existing properties before applying the new properties.</para>
</listitem><listitem><para>wxRICHTEXT_SETPROPERTIES_REMOVE: removes the specified properties. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3502" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a0f53e6015a03394d874219a386a30d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::SetObjectPropertiesWithUndo</definition>
        <argsstring>(wxRichTextObject &amp;obj, const wxRichTextProperties &amp;properties, wxRichTextObject *objToSet=NULL)</argsstring>
        <name>SetObjectPropertiesWithUndo</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::SetObjectPropertiesWithUndo</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_properties" kindref="compound">wxRichTextProperties</ref> &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
          <declname>objToSet</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Sets with undo the properties for the given object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3507" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a1652515ccd8101d56c040d853131042a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::HasCharacterAttributes</definition>
        <argsstring>(const wxRichTextRange &amp;range, const wxRichTextAttr &amp;style) const</argsstring>
        <name>HasCharacterAttributes</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::HasCharacterAttributes</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Test if this whole range has character attributes of the specified kind. </para>
        </briefdescription>
        <detaileddescription>
<para>If any of the attributes are different within the range, the test fails. You can use this to implement, for example, bold button updating. style must have flags indicating which attributes are of interest. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3515" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a9eea88be8a371fac4c3b78a2c9a840c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::HasParagraphAttributes</definition>
        <argsstring>(const wxRichTextRange &amp;range, const wxRichTextAttr &amp;style) const</argsstring>
        <name>HasParagraphAttributes</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::HasParagraphAttributes</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Test if this whole range has paragraph attributes of the specified kind. </para>
        </briefdescription>
        <detaileddescription>
<para>If any of the attributes are different within the range, the test fails. You can use this to implement, for example, centering button updating. style must have flags indicating which attributes are of interest. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3523" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a702deeb61baa435628293fd409fb2d59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
        <definition>virtual wxRichTextObject * wxRichTextParagraphLayoutBox::Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::Clone</qualifiedname>
        <reimplements refid="classwx_rich_text_object_1a70676a4cea61c0f55d30bfe86c518e23">Clone</reimplements>
        <reimplementedby refid="classwx_rich_text_box_1a48e141130aa491b60c7f7a406e220409">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a6c66ab864ce0bcfbb0973a194baa2d0b">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_buffer_1a9ca4471d96ef69b20922fad109dc5794">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_cell_1ae3a5736f8bb367dbf3c7a023f3b14f51">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1a0abf1e98da5955446686b15f89e6d33c">Clone</reimplementedby>
        <briefdescription>
<para>Clones the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3525" column="30" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3525" bodyend="3525"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1adedef613a2a2d00c9bc6332c1cb5f5e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextParagraphLayoutBox::PrepareContent</definition>
        <argsstring>(wxRichTextParagraphLayoutBox &amp;container)</argsstring>
        <name>PrepareContent</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::PrepareContent</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_paragraph_layout_box" kindref="compound">wxRichTextParagraphLayoutBox</ref> &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
<para>Prepares the content just before insertion (or after buffer reset). </para>
        </briefdescription>
        <detaileddescription>
<para>Currently is only called if undo mode is on. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3531" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1af53fe665d0b017bbcc7554909501284d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::InsertFragment</definition>
        <argsstring>(long position, wxRichTextParagraphLayoutBox &amp;fragment)</argsstring>
        <name>InsertFragment</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::InsertFragment</qualifiedname>
        <param>
          <type>long</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_paragraph_layout_box" kindref="compound">wxRichTextParagraphLayoutBox</ref> &amp;</type>
          <declname>fragment</declname>
        </param>
        <briefdescription>
<para>Insert fragment into this box at the given position. </para>
        </briefdescription>
        <detaileddescription>
<para>If partialParagraph is true, it is assumed that the last (or only) paragraph is just a piece of data with no paragraph marker. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3538" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a1d47ab0f916c94047481e90492cbfffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::CopyFragment</definition>
        <argsstring>(const wxRichTextRange &amp;range, wxRichTextParagraphLayoutBox &amp;fragment)</argsstring>
        <name>CopyFragment</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::CopyFragment</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_paragraph_layout_box" kindref="compound">wxRichTextParagraphLayoutBox</ref> &amp;</type>
          <declname>fragment</declname>
        </param>
        <briefdescription>
<para>Make a copy of the fragment corresponding to the given range, putting it in <emphasis>fragment</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3543" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a855d561b3774d6d18a32983d740b63b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::ApplyStyleSheet</definition>
        <argsstring>(wxRichTextStyleSheet *styleSheet)</argsstring>
        <name>ApplyStyleSheet</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::ApplyStyleSheet</qualifiedname>
        <param>
          <type><ref refid="classwx_rich_text_style_sheet" kindref="compound">wxRichTextStyleSheet</ref> *</type>
          <declname>styleSheet</declname>
        </param>
        <briefdescription>
<para>Apply the style sheet to the buffer, for example if the styles have changed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3548" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a5abcd2bbc2e7cf3887f4c0a2a69d6e6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextParagraphLayoutBox::Copy</definition>
        <argsstring>(const wxRichTextParagraphLayoutBox &amp;obj)</argsstring>
        <name>Copy</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::Copy</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_paragraph_layout_box" kindref="compound">wxRichTextParagraphLayoutBox</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3550" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a77ff540c9d6012b71fae36b6a46cdce6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextParagraphLayoutBox::operator=</definition>
        <argsstring>(const wxRichTextParagraphLayoutBox &amp;obj)</argsstring>
        <name>operator=</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_paragraph_layout_box" kindref="compound">wxRichTextParagraphLayoutBox</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3552" column="10" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3552" bodyend="3552"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a8c8fece1531e898432d50d7b49f1d557" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextParagraphLayoutBox::UpdateRanges</definition>
        <argsstring>()</argsstring>
        <name>UpdateRanges</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::UpdateRanges</qualifiedname>
        <briefdescription>
<para>Calculate ranges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3557" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a8d6aa637c5f57d2fa6dd1a03143b5ca7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxRichTextParagraphLayoutBox::GetText</definition>
        <argsstring>() const</argsstring>
        <name>GetText</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetText</qualifiedname>
        <briefdescription>
<para>Get all the text. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3562" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a393bc5e364ed68a62972c3c2a4ec358e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::SetDefaultStyle</definition>
        <argsstring>(const wxRichTextAttr &amp;style)</argsstring>
        <name>SetDefaultStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::SetDefaultStyle</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Sets the default style, affecting the style currently being applied (for example, setting the default style to bold will cause subsequently inserted text to be bold). </para>
        </briefdescription>
        <detaileddescription>
<para>This is not cumulative - setting the default style will replace the previous default style.</para>
<para>Setting it to a default attribute object makes new content take on the &apos;basic&apos; style. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3574" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1ab6663a83defc9f7d135449a3ef39a1e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
        <definition>virtual const wxRichTextAttr &amp; wxRichTextParagraphLayoutBox::GetDefaultStyle</definition>
        <argsstring>() const</argsstring>
        <name>GetDefaultStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetDefaultStyle</qualifiedname>
        <briefdescription>
<para>Returns the current default style, affecting the style currently being applied (for example, setting the default style to bold will cause subsequently inserted text to be bold). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3581" column="34" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3581" bodyend="3581"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a89b556af9bcc3528923fc8ff8635ec89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextParagraphLayoutBox::SetBasicStyle</definition>
        <argsstring>(const wxRichTextAttr &amp;style)</argsstring>
        <name>SetBasicStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::SetBasicStyle</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Sets the basic (overall) style. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the style of the whole buffer before further styles are applied, unlike the default style, which only affects the style currently being applied (for example, setting the default style to bold will cause subsequently inserted text to be bold). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3589" column="18" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3589" bodyend="3589"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a85196e87bb9033334f427276ef2f0da1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
        <definition>virtual const wxRichTextAttr &amp; wxRichTextParagraphLayoutBox::GetBasicStyle</definition>
        <argsstring>() const</argsstring>
        <name>GetBasicStyle</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetBasicStyle</qualifiedname>
        <briefdescription>
<para>Returns the basic (overall) style. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the style of the whole buffer before further styles are applied, unlike the default style, which only affects the style currently being applied (for example, setting the default style to bold will cause subsequently inserted text to be bold). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3599" column="34" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3599" bodyend="3599"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a4c42a77d95fa066494dce473dad7b0af" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextParagraphLayoutBox::Invalidate</definition>
        <argsstring>(const wxRichTextRange &amp;invalidRange=wxRICHTEXT_ALL)</argsstring>
        <name>Invalidate</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::Invalidate</qualifiedname>
        <reimplements refid="classwx_rich_text_composite_object_1a0f304041c6947c6370235dbbdec74cb7">Invalidate</reimplements>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>invalidRange</declname>
          <defval><ref refid="richtextbuffer_8h_1a36e1a7d465ccfcf85c58069b15a91635" kindref="member">wxRICHTEXT_ALL</ref></defval>
        </param>
        <briefdescription>
<para>Invalidates the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>With no argument, invalidates whole buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3604" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a3b6740bb00599b1963612a7b67547d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextParagraphLayoutBox::DoInvalidate</definition>
        <argsstring>(const wxRichTextRange &amp;invalidRange)</argsstring>
        <name>DoInvalidate</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::DoInvalidate</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>invalidRange</declname>
        </param>
        <briefdescription>
<para>Do the (in)validation for this object only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3609" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a60fa2053c7138c2b8a3aae8c42d06303" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextParagraphLayoutBox::InvalidateHierarchy</definition>
        <argsstring>(const wxRichTextRange &amp;invalidRange=wxRICHTEXT_ALL)</argsstring>
        <name>InvalidateHierarchy</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::InvalidateHierarchy</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>invalidRange</declname>
          <defval><ref refid="richtextbuffer_8h_1a36e1a7d465ccfcf85c58069b15a91635" kindref="member">wxRICHTEXT_ALL</ref></defval>
        </param>
        <briefdescription>
<para>Do the (in)validation both up and down the hierarchy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3614" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1acd113ab80e9b9bb2256c0f8fb2458126" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextParagraphLayoutBox::UpdateFloatingObjects</definition>
        <argsstring>(const wxRect &amp;availableRect, wxRichTextObject *untilObj=NULL)</argsstring>
        <name>UpdateFloatingObjects</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::UpdateFloatingObjects</qualifiedname>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>availableRect</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
          <declname>untilObj</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Gather information about floating objects. </para>
        </briefdescription>
        <detaileddescription>
<para>If untilObj is non-NULL, will stop getting information if the current object is this, since we will collect the rest later. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3621" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a771464515723e91890623ce43c38a1de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref></type>
        <definition>wxRichTextRange wxRichTextParagraphLayoutBox::GetInvalidRange</definition>
        <argsstring>(bool wholeParagraphs=false) const</argsstring>
        <name>GetInvalidRange</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetInvalidRange</qualifiedname>
        <param>
          <type>bool</type>
          <declname>wholeParagraphs</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get invalid range, rounding to entire paragraphs if argument is true. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3626" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a62dbb6e2bdd9af9a7c1d87de608f2639" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxRichTextParagraphLayoutBox::IsDirty</definition>
        <argsstring>() const</argsstring>
        <name>IsDirty</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::IsDirty</qualifiedname>
        <briefdescription>
<para>Returns true if this object needs layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3631" column="10" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3631" bodyend="3631"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a649248bf3110d3f815b6609b91edc81e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>wxRichTextFloatCollector *</type>
        <definition>wxRichTextFloatCollector * wxRichTextParagraphLayoutBox::GetFloatCollector</definition>
        <argsstring>()</argsstring>
        <name>GetFloatCollector</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetFloatCollector</qualifiedname>
        <briefdescription>
<para>Returns the wxRichTextFloatCollector of this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3636" column="30" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3636" bodyend="3636"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a738909b78742b19d2159bf90a6a7742d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxRichTextParagraphLayoutBox::GetFloatingObjectCount</definition>
        <argsstring>() const</argsstring>
        <name>GetFloatingObjectCount</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetFloatingObjectCount</qualifiedname>
        <briefdescription>
<para>Returns the number of floating objects at this level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3641" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_paragraph_layout_box_1a0f4ac495718beaf26a93d4203db9e0a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxRichTextParagraphLayoutBox::GetFloatingObjects</definition>
        <argsstring>(wxRichTextObjectList &amp;objects) const</argsstring>
        <name>GetFloatingObjects</name>
        <qualifiedname>wxRichTextParagraphLayoutBox::GetFloatingObjects</qualifiedname>
        <param>
          <type>wxRichTextObjectList &amp;</type>
          <declname>objects</declname>
        </param>
        <briefdescription>
<para>Returns a list of floating objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="3646" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class knows how to lay out paragraphs. </para>
    </briefdescription>
    <detaileddescription>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxrichtext" kindref="member">wxRichText</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__richtext" kindref="compound">Rich Text</ref></para>
<para><simplesect kind="see"><para><ref refid="classwx_rich_text_composite_object" kindref="compound">wxRichTextCompositeObject</ref>, <ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref>, <ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref>, <ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="5">
        <label>wxRichTextBox</label>
        <link refid="classwx_rich_text_box"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>wxRichTextBuffer</label>
        <link refid="classwx_rich_text_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>wxRichTextCell</label>
        <link refid="classwx_rich_text_cell"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxRichTextCompositeObject</label>
        <link refid="classwx_rich_text_composite_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>wxRichTextField</label>
        <link refid="classwx_rich_text_field"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxRichTextObject</label>
        <link refid="classwx_rich_text_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxRichTextParagraphLayoutBox</label>
        <link refid="classwx_rich_text_paragraph_layout_box"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>wxRichTextTable</label>
        <link refid="classwx_rich_text_table"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="40">
        <label>wxArray</label>
      </node>
      <node id="39">
        <label>wxArrayString</label>
        <link refid="classwx_array_string"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>wxCommand</label>
        <link refid="classwx_command"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>wxCommandProcessor</label>
        <link refid="classwx_command_processor"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>wxCursor</label>
        <link refid="classwx_cursor"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>wxGDIObject</label>
        <link refid="classwx_g_d_i_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>wxLongLong</label>
        <link refid="classwx_long_long"/>
      </node>
      <node id="34">
        <label>wxMenu</label>
        <link refid="classwx_menu"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
      <node id="7">
        <label>wxPoint</label>
        <link refid="classwx_point"/>
      </node>
      <node id="9">
        <label>wxRichTextAttr</label>
        <link refid="classwx_rich_text_attr"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_textBoxAttr</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>wxRichTextBuffer</label>
        <link refid="classwx_rich_text_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_commandProcessor</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_fontTable</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_batchedCommandsName</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_batchedCommand</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_styleSheet</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>sm_renderer</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>wxRichTextCommand</label>
        <link refid="classwx_rich_text_command"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxRichTextCompositeObject</label>
        <link refid="classwx_rich_text_composite_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>wxRichTextContextMenuPropertiesInfo</label>
        <link refid="classwx_rich_text_context_menu_properties_info"/>
        <childnode refid="39" relation="usage">
          <edgelabel>m_labels</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>wxRichTextCtrl</label>
        <link refid="classwx_rich_text_ctrl"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>m_buffer</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_contextMenu</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_selection</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_selectionAnchorObject</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>m_delayedImageProcessingTime</edgelabel>
          <edgelabel>m_fullLayoutTime</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>m_textCursor</edgelabel>
          <edgelabel>m_urlCursor</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>sm_availableFontNames</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>m_contextMenuPropertiesInfo</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>m_focusObject</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_lastWindowSize</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_delayedImageProcessingTimer</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>wxRichTextFontTable</label>
        <link refid="classwx_rich_text_font_table"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxRichTextObject</label>
        <link refid="classwx_rich_text_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_maxSize</edgelabel>
          <edgelabel>m_minSize</edgelabel>
          <edgelabel>m_size</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_pos</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_ownRange</edgelabel>
          <edgelabel>m_range</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_attributes</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_properties</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>wxRichTextParagraphLayoutBox</label>
        <link refid="classwx_rich_text_paragraph_layout_box"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_ctrl</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_defaultAttributes</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_invalidRange</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>wxRichTextProperties</label>
        <link refid="classwx_rich_text_properties"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>wxRichTextRange</label>
        <link refid="classwx_rich_text_range"/>
      </node>
      <node id="33">
        <label>wxRichTextRenderer</label>
        <link refid="classwx_rich_text_renderer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>wxRichTextSelection</label>
        <link refid="classwx_rich_text_selection"/>
        <childnode refid="1" relation="usage">
          <edgelabel>m_container</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>wxRichTextStyleSheet</label>
        <link refid="classwx_rich_text_style_sheet"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>wxScrollHelper</label>
      </node>
      <node id="6">
        <label>wxSize</label>
        <link refid="classwx_size"/>
      </node>
      <node id="17">
        <label>wxString</label>
        <link refid="classwx_string"/>
      </node>
      <node id="10">
        <label>wxTextAttr</label>
        <link refid="classwx_text_attr"/>
      </node>
      <node id="16">
        <label>wxTextAttrBorder</label>
        <link refid="classwx_text_attr_border"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_borderWidth</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>wxTextAttrBorders</label>
        <link refid="classwx_text_attr_borders"/>
        <childnode refid="16" relation="usage">
          <edgelabel>m_bottom</edgelabel>
          <edgelabel>m_left</edgelabel>
          <edgelabel>m_right</edgelabel>
          <edgelabel>m_top</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>wxTextAttrDimension</label>
        <link refid="classwx_text_attr_dimension"/>
      </node>
      <node id="12">
        <label>wxTextAttrDimensions</label>
        <link refid="classwx_text_attr_dimensions"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_bottom</edgelabel>
          <edgelabel>m_left</edgelabel>
          <edgelabel>m_right</edgelabel>
          <edgelabel>m_top</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>wxTextAttrShadow</label>
        <link refid="classwx_text_attr_shadow"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_blurDistance</edgelabel>
          <edgelabel>m_offsetX</edgelabel>
          <edgelabel>m_offsetY</edgelabel>
          <edgelabel>m_opacity</edgelabel>
          <edgelabel>m_spread</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>wxTextAttrSize</label>
        <link refid="classwx_text_attr_size"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_height</edgelabel>
          <edgelabel>m_width</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>wxTextBoxAttr</label>
        <link refid="classwx_text_box_attr"/>
        <childnode refid="12" relation="usage">
          <edgelabel>m_margins</edgelabel>
          <edgelabel>m_padding</edgelabel>
          <edgelabel>m_position</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_maxSize</edgelabel>
          <edgelabel>m_minSize</edgelabel>
          <edgelabel>m_size</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_border</edgelabel>
          <edgelabel>m_outline</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_cornerRadius</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_boxStyleName</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_shadow</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>wxTextCtrlIface</label>
      </node>
      <node id="42">
        <label>wxTimer</label>
        <link refid="classwx_timer"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="22">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/richtext/richtextbuffer.h" line="3070" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="3071" bodyend="3660"/>
    <listofallmembers>
      <member refid="classwx_rich_text_paragraph_layout_box_1aeb248e14ee111b010ddcb8a6702dfe5c" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>AcceptsFocus</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1aca17a22d4bd06a6c84e36c3c95705f4a" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>AddImage</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1aa4f673254e4cc4325e5b299cd4eb9955" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>AddParagraph</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a36c81d6861efc59bf5c690e0119e353b" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>AddParagraphs</name></member>
      <member refid="classwx_rich_text_object_1a591ee431cd21bbde31b102231e79d8a1" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>AdjustAttributes</name></member>
      <member refid="classwx_rich_text_object_1adc43eb3cd639c5b0934fbed69d528127" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>AdjustAvailableSpace</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>AllocExclusive</name></member>
      <member refid="classwx_rich_text_composite_object_1a0100117df12c900c7359f89d39dad6d8" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>AppendChild</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a855d561b3774d6d18a32983d740b63b4" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>ApplyStyleSheet</name></member>
      <member refid="classwx_rich_text_composite_object_1aebf68a6362a97f48625aae7e0685a17d" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>CalculateRange</name></member>
      <member refid="classwx_rich_text_object_1afe4a68694490ae90052a1b6614b9e897" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>CanEditProperties</name></member>
      <member refid="classwx_rich_text_object_1a388d09a56e73bc37ee322b4197551e70" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>CanMerge</name></member>
      <member refid="classwx_rich_text_object_1a1c8132e6a920eb979621f0168a0a07d5" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>CanSplit</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1aa1b695dd07351d19b8d8fa4cc18847fb" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Clear</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1af91db14fd01bde17aa12ad400a749e97" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>ClearListStyle</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a702deeb61baa435628293fd409fb2d59" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Clone</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>CloneRefData</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a6b1e221fd930c6e3b362e6d21fd859ed" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>CollectStyle</name></member>
      <member refid="classwx_rich_text_object_1a970cf24913e4895f954def198913d3de" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>ConvertPixelsToTenthsMM</name></member>
      <member refid="classwx_rich_text_object_1aa582aba937334f039ab903b826787058" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>ConvertPixelsToTenthsMM</name></member>
      <member refid="classwx_rich_text_object_1ae2e8da5396a81d45154e79bace382f4e" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>ConvertTenthsMMToPixels</name></member>
      <member refid="classwx_rich_text_object_1a5bd92fad77d258b0953627c1270a1a5c" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>ConvertTenthsMMToPixels</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a5abcd2bbc2e7cf3887f4c0a2a69d6e6b" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Copy</name></member>
      <member refid="classwx_rich_text_composite_object_1a051d7532eabd9b57b65746c8d512b803" prot="public" virt="non-virtual" ambiguityscope="wxRichTextCompositeObject::"><scope>wxRichTextParagraphLayoutBox</scope><name>Copy</name></member>
      <member refid="classwx_rich_text_object_1a0cc072c62eb1b6bacf09fd38101274cf" prot="public" virt="non-virtual" ambiguityscope="wxRichTextObject::"><scope>wxRichTextParagraphLayoutBox</scope><name>Copy</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a1d47ab0f916c94047481e90492cbfffd" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>CopyFragment</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>CreateRefData</name></member>
      <member refid="classwx_rich_text_composite_object_1aa9864eb072fd6b24f81db90692e725bd" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Defragment</name></member>
      <member refid="classwx_rich_text_composite_object_1a0f0632c8ca40d41aee15d6e2286d6ee3" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>DeleteChildren</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1aff46150c2c2cca5c915290423d8031c7" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>DeleteRange</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a16134998266a0f8a52e0ef7abaf8cb9e" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>DeleteRangeWithUndo</name></member>
      <member refid="classwx_rich_text_object_1a7ff137a3eea87599a9d29a34f236664e" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Dereference</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1af9595681004d7a43088f1f8073113d61" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>DoGetStyle</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a3b6740bb00599b1963612a7b67547d6f" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>DoInvalidate</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1aaceead41d7029976ee6371d8412acaec" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>DoNumberList</name></member>
      <member refid="classwx_rich_text_object_1a60fbc94406e393a1daf0e41cde602bf4" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>DoSplit</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1adc089d67677bb52f00da702da4fd6844" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Draw</name></member>
      <member refid="classwx_rich_text_object_1a07f6e3b4a9edb1c276b7c0007bdf0886" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>DrawBorder</name></member>
      <member refid="classwx_rich_text_object_1a0b02aac99c7d13b89c8ba3f26229c2e2" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>DrawBoxAttributes</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a466086783eaec4b31c1574d1e9f05edf" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>DrawFloats</name></member>
      <member refid="classwx_rich_text_composite_object_1af9198cc97c85fafc2391d3ee57b1aef7" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Dump</name></member>
      <member refid="classwx_rich_text_object_1a988c9871f0050a661ca61a0cf44f6ed4" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>EditProperties</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1ac14d48b8ac670ff7760c1bb5d5ee2fe3" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>FindNextParagraphNumber</name></member>
      <member refid="classwx_rich_text_composite_object_1a0880fd7648c61f5b50425757552d18d8" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>FindPosition</name></member>
      <member refid="classwx_rich_text_object_1a7e690b5bfea130b020c5825d3dacfb7f" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetAbsolutePosition</name></member>
      <member refid="classwx_rich_text_object_1a1437535eaf6cb95719af86e8e0b9ebb7" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetAttributes</name></member>
      <member refid="classwx_rich_text_object_1af5f7cc5de8692de3dff6d2996f6c08b7" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetAttributes</name></member>
      <member refid="classwx_rich_text_object_1af2064d8b876da4c2f3cc48d7cbe0de76" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetAvailableContentArea</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a85196e87bb9033334f427276ef2f0da1" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetBasicStyle</name></member>
      <member refid="classwx_rich_text_object_1a8e850d1a313fde7e6cd54c8d7db27938" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetBestSize</name></member>
      <member refid="classwx_rich_text_object_1a09e681bc141e0e040491e89135116fc3" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetBottomMargin</name></member>
      <member refid="classwx_rich_text_object_1a83fbb3a582041933320491c304716c19" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetBoxRects</name></member>
      <member refid="classwx_rich_text_object_1a893805b1acd2bab22b9f3ad3fa9399b1" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetBuffer</name></member>
      <member refid="classwx_rich_text_object_1a2edd5915d43f0a161255d68be03395e8" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetCachedSize</name></member>
      <member refid="classwx_rich_text_composite_object_1a840508abc4b0c5b0dc30ed1fa96d1655" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetChild</name></member>
      <member refid="classwx_rich_text_composite_object_1a437c196e67077b99bab56db785c64cae" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetChildAtPosition</name></member>
      <member refid="classwx_rich_text_composite_object_1afc5f18ceecf5439342b6851c3f2e45e6" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetChildCount</name></member>
      <member refid="classwx_rich_text_composite_object_1a077abf220d91574aaa76d45c8c8dedae" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetChildren</name></member>
      <member refid="classwx_rich_text_composite_object_1a8b3801f9c5b36dda564a7312ab6ee275" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetChildren</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetClassInfo</name></member>
      <member refid="classwx_rich_text_object_1a998e7b694eb4f38f837b1339e699503a" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetContainer</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1ab6663a83defc9f7d135449a3ef39a1e5" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetDefaultStyle</name></member>
      <member refid="classwx_rich_text_object_1a6937e7da544e0a0422a8f74d8074853b" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetDescent</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a649248bf3110d3f815b6609b91edc81e" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetFloatCollector</name></member>
      <member refid="classwx_rich_text_object_1a57f431aeb760ce0cee6933e11800c872" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetFloatDirection</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a738909b78742b19d2159bf90a6a7742d" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetFloatingObjectCount</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a0f4ac495718beaf26a93d4203db9e0a7" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetFloatingObjects</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a771464515723e91890623ce43c38a1de" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetInvalidRange</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a09ab0d065c39c24658d49bed574ec129" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetLeafObjectAtPosition</name></member>
      <member refid="classwx_rich_text_object_1ab902753d501b0a7435e31ca59e14ab67" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetLeftMargin</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a88183bc2c6221457282d0ee45d32df68" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetLineAtPosition</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a6bd5209a91779aa86a442b32cc544ff1" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetLineAtYPosition</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1af341d8be4b0b7370bb2e1da3b660a413" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetLineCount</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1ad9a4c30f66790c6ab95f06383e81639c" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetLineForVisibleLineNumber</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a0798d1d6b4a7784e2f23a01fc1eb3d51" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetLineSizeAtPosition</name></member>
      <member refid="classwx_rich_text_object_1a030799ad6d7df6c75eaeed5134932faa" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetMaxSize</name></member>
      <member refid="classwx_rich_text_object_1a2891ae0478b440b7c847d1b8b3724c60" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetMinSize</name></member>
      <member refid="classwx_rich_text_object_1a3435f588eec4162a42ac0d9fd78b9155" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetName</name></member>
      <member refid="classwx_rich_text_object_1a179d44d9d9408511cf3fdad00250bd51" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetNaturalSize</name></member>
      <member refid="classwx_rich_text_object_1a5c89f03831e296af6ae2c55b72e27e1d" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetOwnRange</name></member>
      <member refid="classwx_rich_text_object_1a15b33c44d92fa9006a786d630e6383e5" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetOwnRange</name></member>
      <member refid="classwx_rich_text_object_1aaec43225e105e2040671ebdd2cb421b8" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetOwnRangeIfTopLevel</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1ac81a92f97ee7951c3f33500c5ba78bf7" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetParagraphAtLine</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a10bfeb4101fc68c2d8afe911a8a4a3bf" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetParagraphAtPosition</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a89554ec1a1bc776349e7900e6ecc6f5c" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetParagraphCount</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a1f02a40bbe57807fe70b872b625b405a" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetParagraphForLine</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1adf35f4f58d9c2629aba7422010c0ea75" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetParagraphLength</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a1f6374da6151ad1e442f4c4d68da45d9" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetParagraphText</name></member>
      <member refid="classwx_rich_text_object_1a86e169d8369fdd920ca5860079c19fff" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetParent</name></member>
      <member refid="classwx_rich_text_object_1a983b8138ebe2321b61622fecf6896ff1" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetParentContainer</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1adef245b983e3348707625e1f2af8097d" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetPartialParagraph</name></member>
      <member refid="classwx_rich_text_object_1a5f6329dbd80870c54d62350367a64ea0" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetPosition</name></member>
      <member refid="classwx_rich_text_object_1ad877ee2afaefd7dedaf252a61349fdb5" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetProperties</name></member>
      <member refid="classwx_rich_text_object_1a558d5052e4739598228d46cb7666f602" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetProperties</name></member>
      <member refid="classwx_rich_text_object_1a07dc6cf8d17350df5a1260d398a97177" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetPropertiesMenuLabel</name></member>
      <member refid="classwx_rich_text_object_1a397c99e62c7a0553d1d90c556b467f63" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetRange</name></member>
      <member refid="classwx_rich_text_object_1a170954f91ba22cf4bb5a6ab545147bb3" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetRange</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a985582c33a34184e3c83e0263c13df1c" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetRangeSize</name></member>
      <member refid="classwx_rich_text_object_1adfc953ad9b8064746af6d3dd4e76afd3" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetRect</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetRefData</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a0885c082bc9cf5063a487fb1a8d69738" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetRichTextCtrl</name></member>
      <member refid="classwx_rich_text_object_1a3dac4d63560660438f74c7f11c9767e8" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetRightMargin</name></member>
      <member refid="classwx_rich_text_object_1a2f700ec707fff1956785a48d6824be77" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetSelection</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1ac89e47df481c5ce0ddb11ef0db616ab2" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetStyle</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a2488bcb83d081b62615d5e99ffeed93e" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetStyleForNewParagraph</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1ac0df25c4cec456c39a48ea0bafbc7a09" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetStyleForRange</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1ab36f7828f6341ffecb7b1238e999dfc4" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetStyleSheet</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a8d6aa637c5f57d2fa6dd1a03143b5ca7" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetText</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a9d9f56c64410944983d94cc8409544c9" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetTextForRange</name></member>
      <member refid="classwx_rich_text_object_1a1453e5d422874d4b15fcc2c885e301bb" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetTopMargin</name></member>
      <member refid="classwx_rich_text_object_1a53bd3bc25232fe0147be88d480732628" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetTotalMargin</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a0fc591ede823029284311ddb9d7bbe78" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetUncombinedStyle</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a8f44027c2a859f313d3067e5b0a0b109" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetVisibleLineNumber</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a5b6acc40f0550a4ba2641ec9c18c8004" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>GetXMLNodeName</name></member>
      <member refid="classwx_rich_text_object_1a88a6d9038361e944d6a0595e2cb6e3e5" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>HandlesChildSelections</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a1652515ccd8101d56c040d853131042a" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>HasCharacterAttributes</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a9eea88be8a371fac4c3b78a2c9a840c4" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>HasParagraphAttributes</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1affec7c54228ff46b74beda1609f444d8" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>HitTest</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a992efc05c57f94759d9fef90124c299d" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>ImportFromXML</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a2dc790fa7b65a59c15efabc59985cfa8" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Init</name></member>
      <member refid="classwx_rich_text_composite_object_1af50faa4bfc25c0e39cda21205ecc1b57" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>InsertChild</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1affb2cb70812a3e248390a7be0a1dc786" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>InsertFieldWithUndo</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1af53fe665d0b017bbcc7554909501284d" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>InsertFragment</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1aff0773fa3647597329cb219b794c6594" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>InsertImageWithUndo</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a78892fd039f753b07e3caaf7ed9c3513" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>InsertNewlineWithUndo</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a2f4de7634824d8f3012172c36e2c4ef2" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>InsertObjectWithUndo</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a44943c709ae2a2e25eb2d73e96094692" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>InsertParagraphsWithUndo</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a17c518c277dc5854f5bafb4e7703fdc3" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>InsertTextWithUndo</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a4c42a77d95fa066494dce473dad7b0af" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Invalidate</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a60fa2053c7138c2b8a3aae8c42d06303" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>InvalidateHierarchy</name></member>
      <member refid="classwx_rich_text_composite_object_1ad157fd423e7f2a493cfdd22a02df478d" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>IsAtomic</name></member>
      <member refid="classwx_rich_text_composite_object_1a14b9d9fc8db9121b15277787dc4fe3ed" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>IsComposite</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a62dbb6e2bdd9af9a7c1d87de608f2639" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>IsDirty</name></member>
      <member refid="classwx_rich_text_composite_object_1a854a76b4b3313760e00368c53aaf463d" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>IsEmpty</name></member>
      <member refid="classwx_rich_text_object_1a6375bd24f56c059c934f0ff9333b97cd" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>IsFloatable</name></member>
      <member refid="classwx_rich_text_object_1a4185a0f2f89b1af8c9319d58b97962e3" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>IsFloating</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>IsSameAs</name></member>
      <member refid="classwx_rich_text_object_1abb9e9cee48e725c78e2d7a9a5c31d48e" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>IsShown</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a9b0282688f73ce267797ca025cbe0072" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>IsTopLevel</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a790b7411a1fc83b518f02f9d3ca040d0" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Layout</name></member>
      <member refid="classwx_rich_text_object_1a207fff9a88e3bde658309d615bd29518" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>LayoutToBestSize</name></member>
      <member refid="classwx_rich_text_object_1abfda428cbcad6e98bb5c3b5e1e1fdbeb" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_attributes</name></member>
      <member refid="classwx_rich_text_composite_object_1a9f416cec961e400592af9a06b324983b" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_children</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1aad3ecacd81aac8d87200f5c4c0fb9d48" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_ctrl</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a62c26becf6c117c10a2b1d81f6905d8d" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_defaultAttributes</name></member>
      <member refid="classwx_rich_text_object_1a11d2eb57124f37163e3380752f29ae3b" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_descent</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a00249be9f4b41a8a022eed7ac8de6eab" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_floatCollector</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a639814c45caa533a4c64536315a9124d" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_invalidRange</name></member>
      <member refid="classwx_rich_text_object_1a1de7d6f9a0161940337499f3e2c435af" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_maxSize</name></member>
      <member refid="classwx_rich_text_object_1a5f3c7ef5f2a4810552c9469544a425a3" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_minSize</name></member>
      <member refid="classwx_rich_text_object_1ad5dbfa9994dc36033bd6b3ec0788c66d" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_ownRange</name></member>
      <member refid="classwx_rich_text_object_1a95363ba559f3f9ba0cf67992391a4cd5" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_parent</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a257576a394ce11b4f8bd5ba8ed9a09cd" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_partialParagraph</name></member>
      <member refid="classwx_rich_text_object_1a54877607aefc660eb096d597f5f571b8" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_pos</name></member>
      <member refid="classwx_rich_text_object_1af2b36d1d5df497c7c1c795ca98b4f972" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_properties</name></member>
      <member refid="classwx_rich_text_object_1a39f2fc10746006cca791047c5ca0dfb4" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_range</name></member>
      <member refid="classwx_rich_text_object_1a46010f35ddb4d2104a16f4fe093dfd70" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_refCount</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_refData</name></member>
      <member refid="classwx_rich_text_object_1a74dcf7cb3b3426d799b97fe20f696c55" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_show</name></member>
      <member refid="classwx_rich_text_object_1a4ca6121d75119045c4b3872aaed911b8" prot="protected" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>m_size</name></member>
      <member refid="classwx_rich_text_object_1ad70ee3cfab55a5e48fb604f915871843" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Merge</name></member>
      <member refid="classwx_rich_text_composite_object_1a972cfc5642595f484850c0d3e75c92ff" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Move</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1af0b0f2cb12a0a03979b67cfbc2f28e9a" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>MoveAnchoredObjectToParagraph</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a825085f7c9721d359720198593320850" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>NumberList</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1ae8064f76f2624d882291f377e774eaf1" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>NumberList</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>operator new</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a77ff540c9d6012b71fae36b6a46cdce6" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>operator=</name></member>
      <member refid="classwx_rich_text_composite_object_1a786622a50fafac5c786e1c84024bfce1" prot="public" virt="non-virtual" ambiguityscope="wxRichTextCompositeObject::"><scope>wxRichTextParagraphLayoutBox</scope><name>operator=</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1af55ce183fd2b8d463b92653cef5a6d59" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>PositionToXY</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1adedef613a2a2d00c9bc6332c1cb5f5e5" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>PrepareContent</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a8b43b3d776a08006cfe3db3564038606" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>PromoteList</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1acc19656c798ebdd26a6dd2b9c28b19ca" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>PromoteList</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Ref</name></member>
      <member refid="classwx_rich_text_object_1a1c380d0908d2121c6aad114ba8e19cd5" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Reference</name></member>
      <member refid="classwx_rich_text_composite_object_1a0136c69c5935b539de860adc8e0fe158" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>RemoveChild</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1aed81dbcc9670cea8b6056398202aad25" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Reset</name></member>
      <member refid="classwx_rich_text_object_1a4829cfbe45213f9a8f6e66e09e517399" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetAttributes</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a89b556af9bcc3528923fc8ff8635ec89" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetBasicStyle</name></member>
      <member refid="classwx_rich_text_object_1a8bd8debc46fb2621ea6b23aa73ddcb25" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetCachedSize</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a393bc5e364ed68a62972c3c2a4ec358e" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetDefaultStyle</name></member>
      <member refid="classwx_rich_text_object_1aba580ffb36a1b59f70deeede41ef0b7b" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetDescent</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a4c459752dd789eb8fbf788284a101055" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetListStyle</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1aa0a346dcc964a3fa12f34fbb2ba01e27" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetListStyle</name></member>
      <member refid="classwx_rich_text_object_1a3834dbf885e97fd8bd1e8732ddd2bf79" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetMargins</name></member>
      <member refid="classwx_rich_text_object_1a2e2e9f166eadacfca017d2dc33eefa13" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetMargins</name></member>
      <member refid="classwx_rich_text_object_1aadb78a01fffb53096c171d3c58b1adfc" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetMaxSize</name></member>
      <member refid="classwx_rich_text_object_1a8b31e9928b6f68dd17eed50106aaffda" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetMinSize</name></member>
      <member refid="classwx_rich_text_object_1a228e281da67b7c61ac4829992ff183bd" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetName</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a0f53e6015a03394d874219a386a30d2e" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetObjectPropertiesWithUndo</name></member>
      <member refid="classwx_rich_text_object_1a93e5f786c3f2d591df850678e1e0490f" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetOwnRange</name></member>
      <member refid="classwx_rich_text_object_1a20dfd3d8011aef58f658bf437e9ae7f2" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetParent</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1aec7c83a331a6c52775254690d53871e7" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetPartialParagraph</name></member>
      <member refid="classwx_rich_text_object_1ae7c9cff59495ff166cb72d4417d1f782" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetPosition</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a701a9e4333dc76afc54cf633128dd619" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetProperties</name></member>
      <member refid="classwx_rich_text_object_1a13c33b7e80a60b1d76b320680983aa4b" prot="public" virt="non-virtual" ambiguityscope="wxRichTextCompositeObject::"><scope>wxRichTextParagraphLayoutBox</scope><name>SetProperties</name></member>
      <member refid="classwx_rich_text_object_1a16b84f91b15cdd1c89df64a9c4197fad" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetRange</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetRefData</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1ab1369ec5f46b7cfb81fd7b29d1633ea1" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetRichTextCtrl</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a5f9a633f68368d63e56b92f04fdf62f7" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetStyle</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a599ecbc7d96efecdbc1ead396347abe8" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>SetStyle</name></member>
      <member refid="classwx_rich_text_object_1a7346bc1dc24479957ff322969094377a" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Show</name></member>
      <member refid="classwx_rich_text_object_1ac53ccdf663517fad1234cfa4b278f18b" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>Split</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>UnShare</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1acd113ab80e9b9bb2256c0f8fb2458126" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>UpdateFloatingObjects</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a8c8fece1531e898432d50d7b49f1d557" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>UpdateRanges</name></member>
      <member refid="classwx_rich_text_object_1a7e7b5386f084a1063ef418d384844030" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>UsesParagraphAttributes</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>wxObject</name></member>
      <member refid="classwx_rich_text_composite_object_1a90542fd487c2d5cfcea230f95b2c8eab" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>wxRichTextCompositeObject</name></member>
      <member refid="classwx_rich_text_object_1ae4fdbd4a8097fdc7f02a3e0172b58169" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>wxRichTextObject</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1adfe786694855ff4e007d420d77da73de" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>wxRichTextParagraphLayoutBox</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1aad0eb446f3a2b47cb74679d3524ddf21" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>wxRichTextParagraphLayoutBox</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a7f3d4e7820daa9c3a9ea122330bc53c1" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>XYToPosition</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>~wxObject</name></member>
      <member refid="classwx_rich_text_composite_object_1aa77299932f56cb3c8ca696234a8525f8" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>~wxRichTextCompositeObject</name></member>
      <member refid="classwx_rich_text_object_1a8908daf9460edf3623fee7334301ba35" prot="public" virt="virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>~wxRichTextObject</name></member>
      <member refid="classwx_rich_text_paragraph_layout_box_1a1614feaa729be3c031a048fd017a2274" prot="public" virt="non-virtual"><scope>wxRichTextParagraphLayoutBox</scope><name>~wxRichTextParagraphLayoutBox</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
