<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classwx_data_view_custom_renderer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>wxDataViewCustomRenderer</compoundname>
    <basecompoundref refid="classwx_data_view_renderer" prot="public" virt="non-virtual">wxDataViewRenderer</basecompoundref>
    <derivedcompoundref refid="classwx_data_view_spin_renderer" prot="public" virt="non-virtual">wxDataViewSpinRenderer</derivedcompoundref>
    <includes local="no">wx/dataview.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a30b8dfd2ed53f58fd31bd38e078244a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>static wxString wxDataViewCustomRenderer::GetDefaultType</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultType</name>
        <briefdescription>
<para>Returns the <ref refid="classwx_variant" kindref="compound">wxVariant</ref> type used with this renderer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>3.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2492" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1aba508ddbc1afd4e2653042350e1e3e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxDataViewCustomRenderer::wxDataViewCustomRenderer</definition>
        <argsstring>(const wxString &amp;varianttype=GetDefaultType(), wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int align=wxDVR_DEFAULT_ALIGNMENT)</argsstring>
        <name>wxDataViewCustomRenderer</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>varianttype</declname>
          <defval><ref refid="classwx_data_view_custom_renderer_1a30b8dfd2ed53f58fd31bd38e078244a4" kindref="member">GetDefaultType</ref>()</defval>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>align</declname>
          <defval><ref refid="dataview_8h_1a77ad20c54ebb9682cd3cbd1f7c90affe" kindref="member">wxDVR_DEFAULT_ALIGNMENT</ref></defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2497" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a66c5554b962ec195279a51b1b7d3cac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxDataViewCustomRenderer::~wxDataViewCustomRenderer</definition>
        <argsstring>()</argsstring>
        <name>~wxDataViewCustomRenderer</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2504" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a76e85467c89adae6612236d803a552fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::ActivateCell</definition>
        <argsstring>(const wxRect &amp;cell, wxDataViewModel *model, const wxDataViewItem &amp;item, unsigned int col, const wxMouseEvent *mouseEvent)</argsstring>
        <name>ActivateCell</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_mouse_event" kindref="compound">wxMouseEvent</ref> *</type>
          <declname>mouseEvent</declname>
        </param>
        <briefdescription>
<para>Override this to react to cell <emphasis>activation</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Activating a cell is an alternative to showing inline editor when the value can be edited in a simple way that doesn&apos;t warrant full editor control. The most typical use of cell activation is toggling the checkbox in <ref refid="classwx_data_view_toggle_renderer" kindref="compound">wxDataViewToggleRenderer</ref>; others would be e.g. an embedded volume slider or a five-star rating column.</para>
<para>The exact means of activating a cell are platform-dependent, but they are usually similar to those used for inline editing of values. Typically, a cell would be activated by Space or Enter keys or by left mouse click.</para>
<para>This method will only be called if the cell has the wxDATAVIEW_CELL_ACTIVATABLE mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinates of the activated cell&apos;s area. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>The model to manipulate in response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Activated item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>Activated column of <emphasis>item</emphasis>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mouseEvent</parametername>
</parameternamelist>
<parameterdescription>
<para>If the activation was triggered by mouse click, contains the corresponding event. Is NULL otherwise (for keyboard activation). Mouse coordinates are adjusted to be relative to the cell.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>2.9.3</para>
</simplesect>
<simplesect kind="note"><para>Do not confuse this method with item activation in <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> and the wxEVT_DATAVIEW_ITEM_ACTIVATED event. That one is used for activating the item (or, to put it differently, the entire row) similarly to analogous messages in <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> and <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref>, and the effect differs (play a song, open a file etc.). Cell activation, on the other hand, is all about interacting with the individual cell.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classwx_data_view_custom_renderer_1aa4eae092be8e25fd06eaac3ac5106e41" kindref="member">CreateEditorCtrl()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2547" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1aa4eae092be8e25fd06eaac3ac5106e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>virtual wxWindow * wxDataViewCustomRenderer::CreateEditorCtrl</definition>
        <argsstring>(wxWindow *parent, wxRect labelRect, const wxVariant &amp;value)</argsstring>
        <name>CreateEditorCtrl</name>
        <reimplements refid="classwx_data_view_renderer_1a7aa7242adf07781af9a25dc64272c73a">CreateEditorCtrl</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
          <declname>labelRect</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Override this to create the actual editor control once editing is about to start. </para>
        </briefdescription>
        <detaileddescription>
<para>This method will only be called if the cell has the wxDATAVIEW_CELL_EDITABLE mode. Editing is typically triggered by slowly double-clicking the cell or by a platform-dependent keyboard shortcut (F2 is typical on Windows, Space and/or Enter is common elsewhere and supported on Windows too).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent of the editor control. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labelRect</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the position and size of the editor control. The control should be created in place of the cell and <emphasis>labelRect</emphasis> should be respected as much as possible. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value of the editor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
An example: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classwx_spin_ctrl" kindref="compound">wxSpinCtrl</ref>(<sp/>parent,<sp/><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member">wxID_ANY</ref>,<sp/><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labelRect.GetTopLeft(),<sp/>labelRect.GetSize(),<sp/>0,<sp/>0,<sp/>100,<sp/>l<sp/>);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><simplesect kind="note"><para>Currently support for this method is not implemented in the native macOS version of the control, i.e. it will be never called there.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classwx_data_view_custom_renderer_1a76e85467c89adae6612236d803a552fc" kindref="member">ActivateCell()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2587" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1abb608aea38255f682d0f79cdcbabc54c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_data_view_item_attr" kindref="compound">wxDataViewItemAttr</ref> &amp;</type>
        <definition>const wxDataViewItemAttr &amp; wxDataViewCustomRenderer::GetAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetAttr</name>
        <briefdescription>
<para>Return the attribute to be used for rendering. </para>
        </briefdescription>
        <detaileddescription>
<para>This function may be called from <ref refid="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" kindref="member">Render()</ref> implementation to use the attributes defined for the item if the renderer supports them.</para>
<para>Notice that when <ref refid="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" kindref="member">Render()</ref> is called, the <ref refid="classwx_d_c" kindref="compound">wxDC</ref> object passed to it is already set up to use the correct attributes (e.g. its font is set to bold or italic version if <ref refid="classwx_data_view_item_attr_1a1db4b28a74883685b5c72e57afe580c5" kindref="member">wxDataViewItemAttr::GetBold()</ref> or GetItalic() returns true) so it may not be necessary to call it explicitly if you only want to render text using the items attributes.</para>
<para><simplesect kind="since"><para>2.9.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2605" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a0c5e1d559b46c9456836c27dce0ffa4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxDataViewCustomRenderer::GetSize</definition>
        <argsstring>() const =0</argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Return size required to show content. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2610" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a903359019fcc481b7b6a359d7f3845f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::GetValueFromEditorCtrl</definition>
        <argsstring>(wxWindow *editor, wxVariant &amp;value)</argsstring>
        <name>GetValueFromEditorCtrl</name>
        <reimplements refid="classwx_data_view_renderer_1a6d35e275733f4da63414bf98855278f7">GetValueFromEditorCtrl</reimplements>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>editor</declname>
        </param>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Override this so that the renderer can get the value from the editor control (pointed to by <emphasis>editor</emphasis>): </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_spin_ctrl" kindref="compound">wxSpinCtrl</ref><sp/>*sc<sp/>=<sp/>(<ref refid="classwx_spin_ctrl" kindref="compound">wxSpinCtrl</ref>*)<sp/>editor;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>sc-&gt;<ref refid="classwx_spin_ctrl_1aa8ec6e624432bf37b0172a15a913f015" kindref="member">GetValue</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>l;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2624" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a22c4cfbb75813a49da5b9297e5c5c8e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::HasEditorCtrl</definition>
        <argsstring>() const</argsstring>
        <name>HasEditorCtrl</name>
        <reimplements refid="classwx_data_view_renderer_1a71ba6f4bc0c54b83540660cdf40a64d0">HasEditorCtrl</reimplements>
        <briefdescription>
<para>Override this and make it return true in order to indicate that this renderer supports in-place editing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2631" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1ab7fe7693a94fee896eb0b60b843cd474" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::LeftClick</definition>
        <argsstring>(wxPoint cursor, wxRect cell, wxDataViewModel *model, const wxDataViewItem &amp;item, unsigned int col)</argsstring>
        <name>LeftClick</name>
        <param>
          <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
          <declname>cursor</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Override this to react to a left click. </para>
        </briefdescription>
        <detaileddescription>
<para>This method will only be called in <computeroutput>wxDATAVIEW_CELL_ACTIVATABLE</computeroutput> mode.</para>
<para><xrefsect id="deprecated_1_deprecated000013"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use ActivateCell instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2639" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a242d0992df73be6830e66d74b211974d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::Activate</definition>
        <argsstring>(wxRect cell, wxDataViewModel *model, const wxDataViewItem &amp;item, unsigned int col)</argsstring>
        <name>Activate</name>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Override this to react to the activation of a cell. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000014"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use ActivateCell instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2650" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::Render</definition>
        <argsstring>(wxRect cell, wxDC *dc, int state)=0</argsstring>
        <name>Render</name>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> *</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Override this to render the cell. </para>
        </briefdescription>
        <detaileddescription>
<para>Before this is called, <ref refid="classwx_data_view_renderer_1ac4494f39d056c1b0976481647b24117f" kindref="member">wxDataViewRenderer::SetValue</ref> was called so that this instance knows what to render. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2660" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a87f09758076f3fc8b859655212d330ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewCustomRenderer::RenderText</definition>
        <argsstring>(const wxString &amp;text, int xoffset, wxRect cell, wxDC *dc, int state)</argsstring>
        <name>RenderText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xoffset</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> *</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>This method should be called from within <ref refid="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" kindref="member">Render()</ref> whenever you need to render simple text. </para>
        </briefdescription>
        <detaileddescription>
<para>This will ensure that the correct colour, font and vertical alignment will be chosen so the text will look the same as text drawn by native renderers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2668" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a36d6d5c64097bb48f67a712ddb7f97bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCustomRenderer::StartDrag</definition>
        <argsstring>(const wxPoint &amp;cursor, const wxRect &amp;cell, wxDataViewModel *model, const wxDataViewItem &amp;item, unsigned int col)</argsstring>
        <name>StartDrag</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>cursor</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Override this to start a drag operation. </para>
        </briefdescription>
        <detaileddescription>
<para>Not yet supported. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2674" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_data_view_custom_renderer_1a985e365caf0cf59f8856d131c664dc60" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxDataViewCustomRenderer::GetTextExtent</definition>
        <argsstring>(const wxString &amp;str) const</argsstring>
        <name>GetTextExtent</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Helper for <ref refid="classwx_data_view_custom_renderer_1a0c5e1d559b46c9456836c27dce0ffa4d" kindref="member">GetSize()</ref> implementations, respects attributes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="2684" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>You need to derive a new class from <ref refid="classwx_data_view_custom_renderer" kindref="compound">wxDataViewCustomRenderer</ref> in order to write a new renderer. </para>
    </briefdescription>
    <detaileddescription>
<para>You need to override at least <ref refid="classwx_data_view_renderer_1ac4494f39d056c1b0976481647b24117f" kindref="member">wxDataViewRenderer::SetValue</ref>, <ref refid="classwx_data_view_renderer_1ad7c52082d76074cae4ceaf94e55cf604" kindref="member">wxDataViewRenderer::GetValue</ref>, <ref refid="classwx_data_view_custom_renderer_1a0c5e1d559b46c9456836c27dce0ffa4d" kindref="member">wxDataViewCustomRenderer::GetSize</ref> and <ref refid="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" kindref="member">wxDataViewCustomRenderer::Render</ref>.</para>
<para>If you want your renderer to support in-place editing then you also need to override <ref refid="classwx_data_view_custom_renderer_1a22c4cfbb75813a49da5b9297e5c5c8e8" kindref="member">wxDataViewCustomRenderer::HasEditorCtrl</ref>, <ref refid="classwx_data_view_custom_renderer_1aa4eae092be8e25fd06eaac3ac5106e41" kindref="member">wxDataViewCustomRenderer::CreateEditorCtrl</ref> and <ref refid="classwx_data_view_custom_renderer_1a903359019fcc481b7b6a359d7f3845f2" kindref="member">wxDataViewCustomRenderer::GetValueFromEditorCtrl</ref>.</para>
<para>If <computeroutput>wxUSE_ACCESSIBILITY</computeroutput> setup symbol is set to 1, you might need to override also <ref refid="classwx_data_view_renderer_1a368362d97818135237cc244dc6f15809" kindref="member">wxDataViewRenderer::GetAccessibleDescription</ref>.</para>
<para>Note that a special event handler will be pushed onto that editor control which handles <emphasis>&lt;ENTER&gt;</emphasis> and focus out events in order to end the editing.</para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt; </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>wxDataViewCustomRenderer</label>
        <link refid="classwx_data_view_custom_renderer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxDataViewRenderer</label>
        <link refid="classwx_data_view_renderer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>wxDataViewSpinRenderer</label>
        <link refid="classwx_data_view_spin_renderer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>wxDataViewCustomRenderer</label>
        <link refid="classwx_data_view_custom_renderer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxDataViewRenderer</label>
        <link refid="classwx_data_view_renderer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/dataview.h" line="2484" column="1" bodyfile="interface/wx/dataview.h" bodystart="2485" bodyend="2685"/>
    <listofallmembers>
      <member refid="classwx_data_view_custom_renderer_1a242d0992df73be6830e66d74b211974d" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>Activate</name></member>
      <member refid="classwx_data_view_custom_renderer_1a76e85467c89adae6612236d803a552fc" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>ActivateCell</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>AllocExclusive</name></member>
      <member refid="classwx_data_view_renderer_1a179780588351469d8c21a66bc2bc2b3d" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>CancelEditing</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>CloneRefData</name></member>
      <member refid="classwx_data_view_custom_renderer_1aa4eae092be8e25fd06eaac3ac5106e41" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>CreateEditorCtrl</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>CreateRefData</name></member>
      <member refid="classwx_data_view_renderer_1ad88c4e7dcf842d1ac56544ca85e72f9a" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>DisableEllipsize</name></member>
      <member refid="classwx_data_view_renderer_1aeea4804c641149896b8e213bba672e64" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>EnableEllipsize</name></member>
      <member refid="classwx_data_view_renderer_1adad0f7c140a4ad6fc2c0935435631beb" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>FinishEditing</name></member>
      <member refid="classwx_data_view_renderer_1a368362d97818135237cc244dc6f15809" prot="public" virt="pure-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetAccessibleDescription</name></member>
      <member refid="classwx_data_view_renderer_1a0137573f0ab266e4b05fe8237f830870" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>GetAlignment</name></member>
      <member refid="classwx_data_view_custom_renderer_1abb608aea38255f682d0f79cdcbabc54c" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetAttr</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>GetClassInfo</name></member>
      <member refid="classwx_data_view_custom_renderer_1a30b8dfd2ed53f58fd31bd38e078244a4" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetDefaultType</name></member>
      <member refid="classwx_data_view_renderer_1aecc01bf475dd5607bef9a9e1ef137ac5" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetEditorCtrl</name></member>
      <member refid="classwx_data_view_renderer_1a452740b38d2d9ca5eb2fdb84ff50526f" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetEllipsizeMode</name></member>
      <member refid="classwx_data_view_renderer_1a17ce11df4e93b5a50bfa435cb9f93b35" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>GetMode</name></member>
      <member refid="classwx_data_view_renderer_1acb902597ff5a2023654a0ac1c045a381" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetOwner</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetRefData</name></member>
      <member refid="classwx_data_view_custom_renderer_1a0c5e1d559b46c9456836c27dce0ffa4d" prot="public" virt="pure-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetSize</name></member>
      <member refid="classwx_data_view_custom_renderer_1a985e365caf0cf59f8856d131c664dc60" prot="protected" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetTextExtent</name></member>
      <member refid="classwx_data_view_renderer_1ad7c52082d76074cae4ceaf94e55cf604" prot="public" virt="pure-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetValue</name></member>
      <member refid="classwx_data_view_custom_renderer_1a903359019fcc481b7b6a359d7f3845f2" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>GetValueFromEditorCtrl</name></member>
      <member refid="classwx_data_view_renderer_1aaa95f8d49da1b296df8bedd1f76ecc28" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetVariantType</name></member>
      <member refid="classwx_data_view_renderer_1a7e5388a6978cd5577440bf58a03e2288" prot="protected" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>GetView</name></member>
      <member refid="classwx_data_view_custom_renderer_1a22c4cfbb75813a49da5b9297e5c5c8e8" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>HasEditorCtrl</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>IsSameAs</name></member>
      <member refid="classwx_data_view_custom_renderer_1ab7fe7693a94fee896eb0b60b843cd474" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>LeftClick</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>Ref</name></member>
      <member refid="classwx_data_view_custom_renderer_1a0884c149dac5ff57137a5803eb6f72da" prot="public" virt="pure-virtual"><scope>wxDataViewCustomRenderer</scope><name>Render</name></member>
      <member refid="classwx_data_view_custom_renderer_1a87f09758076f3fc8b859655212d330ee" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>RenderText</name></member>
      <member refid="classwx_data_view_renderer_1a2c67ceb437b6c2d2280ca651712dec1c" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>SetAlignment</name></member>
      <member refid="classwx_data_view_renderer_1a388da7afbbf86971c1e945255344666c" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>SetOwner</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>SetRefData</name></member>
      <member refid="classwx_data_view_renderer_1ac4494f39d056c1b0976481647b24117f" prot="public" virt="pure-virtual"><scope>wxDataViewCustomRenderer</scope><name>SetValue</name></member>
      <member refid="classwx_data_view_renderer_1a6e7ed0fa9820b5f9f0a97b8cd82677a0" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>SetValueAdjuster</name></member>
      <member refid="classwx_data_view_custom_renderer_1a36d6d5c64097bb48f67a712ddb7f97bf" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>StartDrag</name></member>
      <member refid="classwx_data_view_renderer_1a2d5d351f5dff1194d0db45d5feb38a90" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>StartEditing</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>UnShare</name></member>
      <member refid="classwx_data_view_renderer_1a64c9df3410623498956ce5ed7524a9cf" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>Validate</name></member>
      <member refid="classwx_data_view_custom_renderer_1aba508ddbc1afd4e2653042350e1e3e6f" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>wxDataViewCustomRenderer</name></member>
      <member refid="classwx_data_view_renderer_1ada4b068514a9732e32e03aae8b4581e6" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>wxDataViewRenderer</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxDataViewCustomRenderer</scope><name>wxObject</name></member>
      <member refid="classwx_data_view_custom_renderer_1a66c5554b962ec195279a51b1b7d3cac4" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>~wxDataViewCustomRenderer</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxDataViewCustomRenderer</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
