<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_node_3_01_t_01_4" kind="class" language="C++" prot="public">
    <compoundname>wxNode&lt; T &gt;</compoundname>
    <includes local="no">wx/list.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_node_3_01_t_01_4_1ab93a460e7f1cf64eb93443f0530ad533" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T *</type>
        <definition>T * wxNode&lt; T &gt;::GetData</definition>
        <argsstring>() const</argsstring>
        <name>GetData</name>
        <qualifiedname>wxNode&lt; T &gt;::GetData</qualifiedname>
        <briefdescription>
<para>Retrieves the client data pointer associated with the node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/list.h" line="436" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classwx_node_3_01_t_01_4_1ab133e2d18c1552336c2efddd5117d367" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>wxNode&lt; T &gt; *</type>
        <definition>wxNode&lt; T &gt; * wxNode&lt; T &gt;::GetNext</definition>
        <argsstring>() const</argsstring>
        <name>GetNext</name>
        <qualifiedname>wxNode&lt; T &gt;::GetNext</qualifiedname>
        <briefdescription>
<para>Retrieves the next node or NULL if this node is the last one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/list.h" line="441" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_node_3_01_t_01_4_1ad8b4e4e74f73b1b5560fa4cb3a2725f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxNode&lt; T &gt; *</type>
        <definition>wxNode&lt; T &gt; * wxNode&lt; T &gt;::GetPrevious</definition>
        <argsstring>()</argsstring>
        <name>GetPrevious</name>
        <qualifiedname>wxNode&lt; T &gt;::GetPrevious</qualifiedname>
        <briefdescription>
<para>Retrieves the previous node or NULL if this node is the first one in the list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/list.h" line="446" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_node_3_01_t_01_4_1a7a647f2893f29c40553b85fd16ffb48c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxNode&lt; T &gt;::IndexOf</definition>
        <argsstring>()</argsstring>
        <name>IndexOf</name>
        <qualifiedname>wxNode&lt; T &gt;::IndexOf</qualifiedname>
        <briefdescription>
<para>Returns the zero-based index of this node within the list. </para>
        </briefdescription>
        <detaileddescription>
<para>The return value will be <computeroutput>wxNOT_FOUND</computeroutput> if the node has not been added to a list yet. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/list.h" line="452" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_node_3_01_t_01_4_1a929534c6f612a52b22ed674a3d61e131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxNode&lt; T &gt;::SetData</definition>
        <argsstring>(T *data)</argsstring>
        <name>SetData</name>
        <qualifiedname>wxNode&lt; T &gt;::SetData</qualifiedname>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Sets the data associated with the node (usually the pointer will have been set when the node was created). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/list.h" line="458" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_node_3_01_t_01_4" kindref="compound">wxNode&lt;T&gt;</ref> is the node structure used in linked lists (see wxList) and derived classes. </para>
    </briefdescription>
    <detaileddescription>
<para>You should never use <ref refid="classwx_node_3_01_t_01_4" kindref="compound">wxNode&lt;T&gt;</ref> class directly, however, because it works with untyped (<computeroutput>void</computeroutput> *) data and this is unsafe. Use <ref refid="classwx_node_3_01_t_01_4" kindref="compound">wxNode&lt;T&gt;</ref>-derived classes which are automatically defined by WX_DECLARE_LIST and WX_DEFINE_LIST macros instead as described in wxList documentation (see example there).</para>
<para>Also note that although there is a class called wxNode, it is defined for backwards compatibility only and usage of this class is strongly deprecated.</para>
<para>In the documentation below, the type <computeroutput>T</computeroutput> should be thought of as a &quot;template&quot; parameter: this is the type of data stored in the linked list or, in other words, the first argument of WX_DECLARE_LIST macro. Also, wxNode is written as wxNodeT even though it isn&apos;t really a template class <ndash/> but it helps to think of it as if it were.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type stored in the wxNode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__data" kindref="compound">Data Structures</ref></para>
<para><simplesect kind="see"><para><ref refid="classwx_list_3_01_t_01_4" kindref="compound">wxList&lt;T&gt;</ref>, <ref refid="classwx_hash_table" kindref="compound">wxHashTable</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="interface/wx/list.h" line="430" column="1" bodyfile="interface/wx/list.h" bodystart="431" bodyend="459"/>
    <listofallmembers>
      <member refid="classwx_node_3_01_t_01_4_1ab93a460e7f1cf64eb93443f0530ad533" prot="public" virt="non-virtual"><scope>wxNode&lt; T &gt;</scope><name>GetData</name></member>
      <member refid="classwx_node_3_01_t_01_4_1ab133e2d18c1552336c2efddd5117d367" prot="public" virt="non-virtual"><scope>wxNode&lt; T &gt;</scope><name>GetNext</name></member>
      <member refid="classwx_node_3_01_t_01_4_1ad8b4e4e74f73b1b5560fa4cb3a2725f3" prot="public" virt="non-virtual"><scope>wxNode&lt; T &gt;</scope><name>GetPrevious</name></member>
      <member refid="classwx_node_3_01_t_01_4_1a7a647f2893f29c40553b85fd16ffb48c" prot="public" virt="non-virtual"><scope>wxNode&lt; T &gt;</scope><name>IndexOf</name></member>
      <member refid="classwx_node_3_01_t_01_4_1a929534c6f612a52b22ed674a3d61e131" prot="public" virt="non-virtual"><scope>wxNode&lt; T &gt;</scope><name>SetData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
