<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_memory_output_stream" kind="class" language="C++" prot="public">
    <compoundname>wxMemoryOutputStream</compoundname>
    <basecompoundref refid="classwx_output_stream" prot="public" virt="non-virtual">wxOutputStream</basecompoundref>
    <includes local="no">wx/mstream.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_memory_output_stream_1a6f70b6b01d433b4e6b631c3ab89fba2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxMemoryOutputStream::wxMemoryOutputStream</definition>
        <argsstring>(void *data=NULL, size_t length=0)</argsstring>
        <name>wxMemoryOutputStream</name>
        <qualifiedname>wxMemoryOutputStream::wxMemoryOutputStream</qualifiedname>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>If <emphasis>data</emphasis> is NULL, then it will initialize a new empty buffer which will grow if required. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>If the buffer is created by <ref refid="classwx_memory_output_stream" kindref="compound">wxMemoryOutputStream</ref>, it will be destroyed at the destruction of the stream. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mstream.h" line="48" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_memory_output_stream_1a619e3e36463589e813df94910b6f6d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxMemoryOutputStream::~wxMemoryOutputStream</definition>
        <argsstring>()</argsstring>
        <name>~wxMemoryOutputStream</name>
        <qualifiedname>wxMemoryOutputStream::~wxMemoryOutputStream</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>If the buffer wasn&apos;t provided by the user, it will be deleted here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mstream.h" line="55" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classwx_memory_output_stream_1acc9bbeb4ec6c148e5b298893ca5774ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxMemoryOutputStream::CopyTo</definition>
        <argsstring>(void *buffer, size_t len) const</argsstring>
        <name>CopyTo</name>
        <qualifiedname>wxMemoryOutputStream::CopyTo</qualifiedname>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Allows you to transfer data from the internal buffer of <ref refid="classwx_memory_output_stream" kindref="compound">wxMemoryOutputStream</ref> to an external buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>len</emphasis> specifies the size of the buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mstream.h" line="61" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_memory_output_stream_1a9874d310cee79d919e7ba585ee4844fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_stream_buffer" kindref="compound">wxStreamBuffer</ref> *</type>
        <definition>wxStreamBuffer * wxMemoryOutputStream::GetOutputStreamBuffer</definition>
        <argsstring>() const</argsstring>
        <name>GetOutputStreamBuffer</name>
        <qualifiedname>wxMemoryOutputStream::GetOutputStreamBuffer</qualifiedname>
        <briefdescription>
<para>Returns the pointer to the stream object used as an internal buffer for this stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mstream.h" line="67" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class allows using all methods taking a <ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> reference to write to in-memory data. </para>
    </briefdescription>
    <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal"><ref refid="classwx_memory_output_stream" kindref="compound">wxMemoryOutputStream</ref><sp/>stream;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!my_wxImage.SaveFile(stream))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>can<sp/>access<sp/>the<sp/>saved<sp/>image<sp/>bytes:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classwx_stream_buffer" kindref="compound">wxStreamBuffer</ref>*<sp/>theBuffer<sp/>=<sp/>stream.<ref refid="classwx_memory_output_stream_1a9874d310cee79d919e7ba585ee4844fc" kindref="member">GetOutputStreamBuffer</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theBuffer-&gt;<ref refid="classwx_stream_buffer_1a5c5772b548442c2a86c8f154c6b27dff" kindref="member">Read</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">,<sp/>1)<sp/>!=<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...<sp/>do<sp/>something<sp/>with<sp/>&apos;byte&apos;...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>remember<sp/>that<sp/>~wxMemoryOutputStream<sp/>will<sp/>destroy<sp/>the<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>buffer<sp/>since<sp/>we<sp/>didn&apos;t<sp/>provide<sp/>our<sp/>own<sp/>when<sp/>constructing<sp/>it</highlight></codeline>
</programlisting></para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__streams" kindref="compound">Streams</ref></para>
<para><simplesect kind="see"><para><ref refid="classwx_stream_buffer" kindref="compound">wxStreamBuffer</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>wxMemoryOutputStream</label>
        <link refid="classwx_memory_output_stream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxOutputStream</label>
        <link refid="classwx_output_stream"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxStreamBase</label>
        <link refid="classwx_stream_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>wxMemoryOutputStream</label>
        <link refid="classwx_memory_output_stream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wxOutputStream</label>
        <link refid="classwx_output_stream"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxStreamBase</label>
        <link refid="classwx_stream_base"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/mstream.h" line="37" column="1" bodyfile="interface/wx/mstream.h" bodystart="38" bodyend="68"/>
    <listofallmembers>
      <member refid="classwx_output_stream_1a1c306ce99990d525921f8f6ae8432083" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>Close</name></member>
      <member refid="classwx_memory_output_stream_1acc9bbeb4ec6c148e5b298893ca5774ac" prot="public" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>CopyTo</name></member>
      <member refid="classwx_stream_base_1a33440c8ea3f8df382adecd7d188a1662" prot="public" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>GetLastError</name></member>
      <member refid="classwx_stream_base_1a052d67c85f63873fabb45ecd108ea615" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>GetLength</name></member>
      <member refid="classwx_memory_output_stream_1a9874d310cee79d919e7ba585ee4844fc" prot="public" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>GetOutputStreamBuffer</name></member>
      <member refid="classwx_stream_base_1aae8094702c3aee35c38e3e06e052479c" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>GetSize</name></member>
      <member refid="classwx_stream_base_1ad33abd694469e858fc3bbb0163a7fc4b" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>IsOk</name></member>
      <member refid="classwx_stream_base_1a927368a32e940a11b96dbfb617d9afda" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>IsSeekable</name></member>
      <member refid="classwx_output_stream_1ac21c598e20937355e538fdf2e2926164" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>LastWrite</name></member>
      <member refid="classwx_stream_base_1ae38e82c374f82d39993909f0a5d3017e" prot="protected" virt="virtual"><scope>wxMemoryOutputStream</scope><name>OnSysSeek</name></member>
      <member refid="classwx_stream_base_1a7131a1f866ea911e90bb85bc1937d29b" prot="protected" virt="virtual"><scope>wxMemoryOutputStream</scope><name>OnSysTell</name></member>
      <member refid="classwx_output_stream_1a41773bceb97b1981cbc3d69c596df929" prot="protected" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>OnSysWrite</name></member>
      <member refid="classwx_stream_base_1a2559b4fcfc7f7173259d703b39cb0d33" prot="public" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>operator!</name></member>
      <member refid="classwx_output_stream_1a526dbd35592b0280659cf96c0a77e804" prot="public" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>PutC</name></member>
      <member refid="classwx_stream_base_1a52353ac42f72538b2022a84f416e5fe2" prot="public" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>Reset</name></member>
      <member refid="classwx_output_stream_1ac898dd36e44e5f4785a6658f470e9752" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>SeekO</name></member>
      <member refid="classwx_output_stream_1a468208f94273630dcbdb0c692645e42c" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>TellO</name></member>
      <member refid="classwx_output_stream_1afc577008c335756968530cdae4b05b34" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>Write</name></member>
      <member refid="classwx_output_stream_1a7c7a356201ad354949a5a9cf3bf97d30" prot="public" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>Write</name></member>
      <member refid="classwx_output_stream_1aa82aca41108fba5cebbba951c84431f0" prot="public" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>WriteAll</name></member>
      <member refid="classwx_memory_output_stream_1a6f70b6b01d433b4e6b631c3ab89fba2e" prot="public" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>wxMemoryOutputStream</name></member>
      <member refid="classwx_output_stream_1ab2391df744df6ec2d4e4e3f561c51118" prot="public" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>wxOutputStream</name></member>
      <member refid="classwx_stream_base_1a2bdb01f1ccd34d551d3cfc848054bf1e" prot="public" virt="non-virtual"><scope>wxMemoryOutputStream</scope><name>wxStreamBase</name></member>
      <member refid="classwx_memory_output_stream_1a619e3e36463589e813df94910b6f6d4c" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>~wxMemoryOutputStream</name></member>
      <member refid="classwx_output_stream_1aadf4d69a6ab7430e99ecb8d02feecfd3" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>~wxOutputStream</name></member>
      <member refid="classwx_stream_base_1aebba32b4da79c60933fa997735a8bfe5" prot="public" virt="virtual"><scope>wxMemoryOutputStream</scope><name>~wxStreamBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
