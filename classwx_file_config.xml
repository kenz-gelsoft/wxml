<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_file_config" kind="class" language="C++" prot="public">
    <compoundname>wxFileConfig</compoundname>
    <basecompoundref refid="classwx_config_base" prot="public" virt="non-virtual">wxConfigBase</basecompoundref>
    <includes local="no">wx/fileconf.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_file_config_1a43f81c0b303155e84cecded7fc2f9a30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFileConfig::wxFileConfig</definition>
        <argsstring>(const wxString &amp;appName=wxEmptyString, const wxString &amp;vendorName=wxEmptyString, const wxString &amp;localFilename=wxEmptyString, const wxString &amp;globalFilename=wxEmptyString, long style=wxCONFIG_USE_LOCAL_FILE|wxCONFIG_USE_GLOBAL_FILE, const wxMBConv &amp;conv=wxConvAuto())</argsstring>
        <name>wxFileConfig</name>
        <qualifiedname>wxFileConfig::wxFileConfig</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>appName</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>vendorName</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>localFilename</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>globalFilename</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval><ref refid="interface_2wx_2config_8h_1a385c44f6fb256e5716a2302a5b940388a2a23b2ec7fd6b2169ae2536cbce3ff64" kindref="member">wxCONFIG_USE_LOCAL_FILE</ref>|<ref refid="interface_2wx_2config_8h_1a385c44f6fb256e5716a2302a5b940388a85c4768e6a0c1989e9251c7405c546bc" kindref="member">wxCONFIG_USE_GLOBAL_FILE</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> &amp;</type>
          <declname>conv</declname>
          <defval><ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref>()</defval>
        </param>
        <briefdescription>
<para>Constructor allowing to choose the file names to use. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>localFilename</emphasis> and/or <emphasis>globalFilename</emphasis> are explicitly specified, they are used as the names of the user and system-wide configuration files (the latter is only read by the program while the former is read from and written to). Otherwise the behaviour depends on <emphasis>style</emphasis> parameter. If it includes <ref refid="interface_2wx_2config_8h_1a385c44f6fb256e5716a2302a5b940388a2a23b2ec7fd6b2169ae2536cbce3ff64" kindref="member">wxCONFIG_USE_LOCAL_FILE</ref>, then the local file name is constructed from the information in <emphasis>appName</emphasis> and <emphasis>vendorName</emphasis> arguments in a system-dependent way. If <ref refid="interface_2wx_2config_8h_1a385c44f6fb256e5716a2302a5b940388a85c4768e6a0c1989e9251c7405c546bc" kindref="member">wxCONFIG_USE_GLOBAL_FILE</ref> is not specified at all (and <emphasis>globalFilename</emphasis> is empty) then the system-wide file is not used at all. Otherwise its name and path are also constructed in the way appropriate for the current platform from the application and vendor names. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="44" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a98f3c3d151840d9e7dc821586c4c07e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFileConfig::wxFileConfig</definition>
        <argsstring>(wxInputStream &amp;is, const wxMBConv &amp;conv=wxConvAuto())</argsstring>
        <name>wxFileConfig</name>
        <qualifiedname>wxFileConfig::wxFileConfig</qualifiedname>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> &amp;</type>
          <declname>conv</declname>
          <defval><ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref>()</defval>
        </param>
        <briefdescription>
<para>Read the config data from the specified stream instead of the associated file, as usual. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_file_config_1a6220fdc0f07a7e36e559e58d29965337" kindref="member">Save()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="57" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a6220fdc0f07a7e36e559e58d29965337" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::Save</definition>
        <argsstring>(wxOutputStream &amp;os, const wxMBConv &amp;conv=wxConvAuto())</argsstring>
        <name>Save</name>
        <qualifiedname>wxFileConfig::Save</qualifiedname>
        <param>
          <type><ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> &amp;</type>
          <declname>conv</declname>
          <defval><ref refid="classwx_conv_auto" kindref="compound">wxConvAuto</ref>()</defval>
        </param>
        <briefdescription>
<para>Saves all config data to the given stream, returns true if data was saved successfully or false on error. </para>
        </briefdescription>
        <detaileddescription>
<para>Note the interaction of this function with the internal &quot;dirty flag&quot;: the data is saved unconditionally, i.e. even if the object is not dirty. However after saving it successfully, the dirty flag is reset so no changes will be written back to the file this object is associated with until you change its contents again.</para>
<para><simplesect kind="see"><para><ref refid="classwx_config_base_1a0b8cfc81de4d2534e8ab980b0fc6b9b8" kindref="member">wxConfigBase::Flush</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="96" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a2f3cddb34e623aad19405bcd6060adb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxFileConfig::EnableAutoSave</definition>
        <argsstring>()</argsstring>
        <name>EnableAutoSave</name>
        <qualifiedname>wxFileConfig::EnableAutoSave</qualifiedname>
        <briefdescription>
<para>Enables saving data to the disk file when this object is destroyed. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the default behaviour and this function doesn&apos;t need to be called explicitly unless <ref refid="classwx_file_config_1af8c93013400e52dd7ea75be9aec25a9e" kindref="member">DisableAutoSave()</ref> had been previously called.</para>
<para><simplesect kind="since"><para>3.1.3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="106" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1af8c93013400e52dd7ea75be9aec25a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxFileConfig::DisableAutoSave</definition>
        <argsstring>()</argsstring>
        <name>DisableAutoSave</name>
        <qualifiedname>wxFileConfig::DisableAutoSave</qualifiedname>
        <briefdescription>
<para>Prevent this object from saving data to the disk file when it is destroyed. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, changes to this object are only saved permanently when <ref refid="classwx_file_config_1a237986fb7e05f7e5404dec1941da308d" kindref="member">Flush()</ref> is explicitly called or when it is destroyed. If this method is called, <ref refid="classwx_file_config_1a237986fb7e05f7e5404dec1941da308d" kindref="member">Flush()</ref> won&apos;t be called automatically from the destructor, meaning that any non-explicitly-flushed changes will be lost.</para>
<para><simplesect kind="since"><para>3.1.3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="119" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a709b9d8592d746ca7a0d80abdf20ce95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxFileConfig::SetUmask</definition>
        <argsstring>(int mode)</argsstring>
        <name>SetUmask</name>
        <qualifiedname>wxFileConfig::SetUmask</qualifiedname>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Allows setting the mode to be used for the config file creation. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, to create a config file which is not readable by other users (useful if it stores some sensitive information, such as passwords), you could use <computeroutput>SetUmask(0077)</computeroutput>.</para>
<para>This function doesn&apos;t do anything on non-Unix platforms.</para>
<para><simplesect kind="see"><para><ref refid="filefn_8h_1af20a1b90767d4e46462f2af875048922" kindref="member">wxCHANGE_UMASK()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="130" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1ac2b05e8f651d7390e3c340e5c7feea0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxFileConfig::SetPath</definition>
        <argsstring>(const wxString &amp;strPath)</argsstring>
        <name>SetPath</name>
        <qualifiedname>wxFileConfig::SetPath</qualifiedname>
        <reimplements refid="classwx_config_base_1ad290d3fe7fad4f39a4bb2959db89b379">SetPath</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>strPath</declname>
        </param>
        <briefdescription>
<para>Set current path: if the first character is &apos;/&apos;, it is the absolute path, otherwise it is a relative path. </para>
        </briefdescription>
        <detaileddescription>
<para>&apos;..&apos; is supported. If <emphasis>strPath</emphasis> doesn&apos;t exist, it is created.</para>
<para><simplesect kind="see"><para><ref refid="classwx_config_path_changer" kindref="compound">wxConfigPathChanger</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="133" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a75c6a1cf08cddd3376dc62610c279400" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>virtual const wxString &amp; wxFileConfig::GetPath</definition>
        <argsstring>() const</argsstring>
        <name>GetPath</name>
        <qualifiedname>wxFileConfig::GetPath</qualifiedname>
        <reimplements refid="classwx_config_base_1a36e42b9ffada7c3e86466b2b4e57f8bc">GetPath</reimplements>
        <briefdescription>
<para>Retrieve the current path (always as absolute path). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="134" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1aa0a82bdc1a523b9324a2233a8ac42c86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::GetFirstGroup</definition>
        <argsstring>(wxString &amp;str, long &amp;lIndex) const</argsstring>
        <name>GetFirstGroup</name>
        <qualifiedname>wxFileConfig::GetFirstGroup</qualifiedname>
        <reimplements refid="classwx_config_base_1af111cb376665bd1b7fc77ae20d985a6d">GetFirstGroup</reimplements>
        <param>
          <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the first group. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> In wxPerl this method takes no parameters and returns a 3-element list (continue_flag, string, index_for_getnextentry).  </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="136" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a1f8fd10b6f7ad744da343ee0af5b603a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::GetNextGroup</definition>
        <argsstring>(wxString &amp;str, long &amp;lIndex) const</argsstring>
        <name>GetNextGroup</name>
        <qualifiedname>wxFileConfig::GetNextGroup</qualifiedname>
        <reimplements refid="classwx_config_base_1a491e0d51c86d4facd8184969ea6d341c">GetNextGroup</reimplements>
        <param>
          <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the next group. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> In wxPerl this method only takes the <emphasis>index</emphasis> parameter and returns a 3-element list (continue_flag, string, index_for_getnextentry).  </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="137" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a731918aafd6b8f2552900aa79c60b48b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::GetFirstEntry</definition>
        <argsstring>(wxString &amp;str, long &amp;lIndex) const</argsstring>
        <name>GetFirstEntry</name>
        <qualifiedname>wxFileConfig::GetFirstEntry</qualifiedname>
        <reimplements refid="classwx_config_base_1a1f8338dd47972d196c6475e7e1140ae7">GetFirstEntry</reimplements>
        <param>
          <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the first entry. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> In wxPerl this method takes no parameters and returns a 3-element list (continue_flag, string, index_for_getnextentry).  </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="138" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a2e28f5f742466f9f6a77cd8c8e4f5d62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::GetNextEntry</definition>
        <argsstring>(wxString &amp;str, long &amp;lIndex) const</argsstring>
        <name>GetNextEntry</name>
        <qualifiedname>wxFileConfig::GetNextEntry</qualifiedname>
        <reimplements refid="classwx_config_base_1a0c99d5eb83f8ebad82e1a13d1295f644">GetNextEntry</reimplements>
        <param>
          <type><ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the next entry. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> In wxPerl this method only takes the <emphasis>index</emphasis> parameter and returns a 3-element list (continue_flag, string, index_for_getnextentry).  </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="139" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a11c6187c8a07a6e722dbb4b135d7eb51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t wxFileConfig::GetNumberOfEntries</definition>
        <argsstring>(bool bRecursive=false) const</argsstring>
        <name>GetNumberOfEntries</name>
        <qualifiedname>wxFileConfig::GetNumberOfEntries</qualifiedname>
        <reimplements refid="classwx_config_base_1a993bdb14c4115ddc1458fb8bdc9de604">GetNumberOfEntries</reimplements>
        <param>
          <type>bool</type>
          <declname>bRecursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get number of entries in the current group. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="141" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a132f34eca0d959b05e00477e983a045c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t wxFileConfig::GetNumberOfGroups</definition>
        <argsstring>(bool bRecursive=false) const</argsstring>
        <name>GetNumberOfGroups</name>
        <qualifiedname>wxFileConfig::GetNumberOfGroups</qualifiedname>
        <reimplements refid="classwx_config_base_1ad695ef5dd7dee1b24c7813aa08599eb9">GetNumberOfGroups</reimplements>
        <param>
          <type>bool</type>
          <declname>bRecursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get number of entries/subgroups in the current group, with or without its subgroups. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="142" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a0d3f43185ea086a7d17be0be2135efbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::HasGroup</definition>
        <argsstring>(const wxString &amp;strName) const</argsstring>
        <name>HasGroup</name>
        <qualifiedname>wxFileConfig::HasGroup</qualifiedname>
        <reimplements refid="classwx_config_base_1a27472b872af09e73597735d0938b007d">HasGroup</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>strName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the group by this name exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="144" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a58afc69f93a1e7fa440a0b7fbdd2ad46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::HasEntry</definition>
        <argsstring>(const wxString &amp;strName) const</argsstring>
        <name>HasEntry</name>
        <qualifiedname>wxFileConfig::HasEntry</qualifiedname>
        <reimplements refid="classwx_config_base_1aaca0748de0e2e2841aaec85f63403d3b">HasEntry</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>strName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the entry by this name exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="145" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a237986fb7e05f7e5404dec1941da308d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::Flush</definition>
        <argsstring>(bool bCurrentOnly=false)</argsstring>
        <name>Flush</name>
        <qualifiedname>wxFileConfig::Flush</qualifiedname>
        <reimplements refid="classwx_config_base_1a0b8cfc81de4d2534e8ab980b0fc6b9b8">Flush</reimplements>
        <param>
          <type>bool</type>
          <declname>bCurrentOnly</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Permanently writes all changes (otherwise, they&apos;re only written from object&apos;s destructor). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="147" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a562a1b81e23d70c1921c2139dcf5580d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::RenameEntry</definition>
        <argsstring>(const wxString &amp;oldName, const wxString &amp;newName)</argsstring>
        <name>RenameEntry</name>
        <qualifiedname>wxFileConfig::RenameEntry</qualifiedname>
        <reimplements refid="classwx_config_base_1a1871d5f0aec990c1552242203c5ed0c4">RenameEntry</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>oldName</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>newName</declname>
        </param>
        <briefdescription>
<para>Renames an entry in the current group. </para>
        </briefdescription>
        <detaileddescription>
<para>The entries names (both the old and the new one) shouldn&apos;t contain backslashes, i.e. only simple names and not arbitrary paths are accepted by this function.</para>
<para><simplesect kind="return"><para>false if <emphasis>oldName</emphasis> doesn&apos;t exist or if <emphasis>newName</emphasis> already exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="149" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a3827f9711a31782a2d4f1ea61e1ea592" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::RenameGroup</definition>
        <argsstring>(const wxString &amp;oldName, const wxString &amp;newName)</argsstring>
        <name>RenameGroup</name>
        <qualifiedname>wxFileConfig::RenameGroup</qualifiedname>
        <reimplements refid="classwx_config_base_1a4f85e2947979146ccc77b42c15409834">RenameGroup</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>oldName</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>newName</declname>
        </param>
        <briefdescription>
<para>Renames a subgroup of the current group. </para>
        </briefdescription>
        <detaileddescription>
<para>The subgroup names (both the old and the new one) shouldn&apos;t contain backslashes, i.e. only simple names and not arbitrary paths are accepted by this function.</para>
<para><simplesect kind="return"><para>false if <emphasis>oldName</emphasis> doesn&apos;t exist or if <emphasis>newName</emphasis> already exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="150" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a120130d8a59bbdadf510b658b4d45952" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::DeleteEntry</definition>
        <argsstring>(const wxString &amp;key, bool bGroupIfEmptyAlso=true)</argsstring>
        <name>DeleteEntry</name>
        <qualifiedname>wxFileConfig::DeleteEntry</qualifiedname>
        <reimplements refid="classwx_config_base_1a4032a0432b4a7f956ec30dfc4f4b8593">DeleteEntry</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bDeleteGroupIfEmpty</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Deletes the specified entry and the group it belongs to if it was the last key in it and the second parameter is true. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="152" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1aed9b867b366bb656ddd3fdf3108e726d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::DeleteGroup</definition>
        <argsstring>(const wxString &amp;szKey)</argsstring>
        <name>DeleteGroup</name>
        <qualifiedname>wxFileConfig::DeleteGroup</qualifiedname>
        <reimplements refid="classwx_config_base_1ac66bcb140f09c8cb522d3117aa1aa0e7">DeleteGroup</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Delete the group (with all subgroups). </para>
        </briefdescription>
        <detaileddescription>
<para>If the current path is under the group being deleted it is changed to its deepest still existing component. E.g. if the current path is <computeroutput>&quot;/A/B/C/D&quot;</computeroutput> and the group <computeroutput>C</computeroutput> is deleted, the path becomes <computeroutput>&quot;/A/B&quot;</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="153" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1aeb7cd89ccb242ed30506e63fd79ed82f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxFileConfig::DeleteAll</definition>
        <argsstring>()</argsstring>
        <name>DeleteAll</name>
        <qualifiedname>wxFileConfig::DeleteAll</qualifiedname>
        <reimplements refid="classwx_config_base_1af2dd5ec6b56f89decf0e96b057c4846f">DeleteAll</reimplements>
        <briefdescription>
<para>Delete the whole underlying object (disk file, registry key, ...). </para>
        </briefdescription>
        <detaileddescription>
<para>Primarily for use by uninstallation routine. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="154" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_file_config_1af67ee0d35efdc5486c09682e4385dfb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_file_name" kindref="compound">wxFileName</ref></type>
        <definition>static wxFileName wxFileConfig::GetGlobalFile</definition>
        <argsstring>(const wxString &amp;basename)</argsstring>
        <name>GetGlobalFile</name>
        <qualifiedname>wxFileConfig::GetGlobalFile</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>basename</declname>
        </param>
        <briefdescription>
<para>Return the full path to the file which would be used by <ref refid="classwx_file_config" kindref="compound">wxFileConfig</ref> as global, system-wide, file if it were constructed with <emphasis>basename</emphasis> as &quot;global filename&quot; parameter in the constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Notice that this function cannot be used if <emphasis>basename</emphasis> is already a full path name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="66" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a479f242f67dca8149dfbd7e9b6394fe9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_file_name" kindref="compound">wxFileName</ref></type>
        <definition>static wxFileName wxFileConfig::GetLocalFile</definition>
        <argsstring>(const wxString &amp;basename, int style=0)</argsstring>
        <name>GetLocalFile</name>
        <qualifiedname>wxFileConfig::GetLocalFile</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>basename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return the full path to the file which would be used by <ref refid="classwx_file_config" kindref="compound">wxFileConfig</ref> as local, user-specific, file if it were constructed with <emphasis>basename</emphasis> as &quot;local filename&quot; parameter in the constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>style</emphasis> has the same meaning as in <ref refid="classwx_config_base_1a7c3ce1f79df2837bc532c0ff551e7bac" kindref="member">wxConfig constructor</ref> and can contain any combination of styles but only wxCONFIG_USE_SUBDIR bit is examined by this function.</para>
<para>Notice that this function cannot be used if <emphasis>basename</emphasis> is already a full path name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="79" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1ae70471e1167791f26bdc88175476674f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>static wxString wxFileConfig::GetGlobalFileName</definition>
        <argsstring>(const wxString &amp;szFile)</argsstring>
        <name>GetGlobalFileName</name>
        <qualifiedname>wxFileConfig::GetGlobalFileName</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>szFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="81" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_config_1a50ecc124ab06aa5e6461e70f0673b06a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>static wxString wxFileConfig::GetLocalFileName</definition>
        <argsstring>(const wxString &amp;szFile, int style=0)</argsstring>
        <name>GetLocalFileName</name>
        <qualifiedname>wxFileConfig::GetLocalFileName</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>szFile</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fileconf.h" line="82" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_file_config" kindref="compound">wxFileConfig</ref> implements <ref refid="classwx_config_base" kindref="compound">wxConfigBase</ref> interface for storing and retrieving configuration information using plain text files. </para>
    </briefdescription>
    <detaileddescription>
<para>The files have a simple format reminiscent of Windows INI files with lines of the form <computeroutput>&quot;key = value&quot;</computeroutput> defining the keys and lines of special form <computeroutput>&quot;[group]&quot;</computeroutput> indicating the start of each group.</para>
<para>This class is used by default for wxConfig on Unix platforms but may also be used explicitly if you want to use files and not the registry even under Windows.</para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__cfg" kindref="compound">Application and System configuration</ref></para>
<para><simplesect kind="see"><para><ref refid="classwx_file_config_1a6220fdc0f07a7e36e559e58d29965337" kindref="member">wxFileConfig::Save</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>wxConfigBase</label>
        <link refid="classwx_config_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxFileConfig</label>
        <link refid="classwx_file_config"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>wxConfigBase</label>
        <link refid="classwx_config_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxFileConfig</label>
        <link refid="classwx_file_config"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/fileconf.h" line="26" column="1" bodyfile="interface/wx/fileconf.h" bodystart="27" bodyend="155"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxFileConfig</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxFileConfig</scope><name>CloneRefData</name></member>
      <member refid="classwx_config_base_1aa51cc5ffca89038de554a07499a30c2b" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Create</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxFileConfig</scope><name>CreateRefData</name></member>
      <member refid="classwx_file_config_1aeb7cd89ccb242ed30506e63fd79ed82f" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>DeleteAll</name></member>
      <member refid="classwx_file_config_1a120130d8a59bbdadf510b658b4d45952" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>DeleteEntry</name></member>
      <member refid="classwx_file_config_1aed9b867b366bb656ddd3fdf3108e726d" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>DeleteGroup</name></member>
      <member refid="classwx_file_config_1af8c93013400e52dd7ea75be9aec25a9e" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>DisableAutoSave</name></member>
      <member refid="classwx_config_base_1a0e8ad0cb0c5b374a99b99ea6212e496b" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>DontCreateOnDemand</name></member>
      <member refid="classwx_file_config_1a2f3cddb34e623aad19405bcd6060adb9" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>EnableAutoSave</name></member>
      <member refid="classwx_config_base_1a499282208b4b9e90cbfe60de25745bc4" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>EntryType</name></member>
      <member refid="classwx_config_base_1adf827c37b0872f16ccc286c8678718b6" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Exists</name></member>
      <member refid="classwx_file_config_1a237986fb7e05f7e5404dec1941da308d" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>Flush</name></member>
      <member refid="classwx_config_base_1ab31367e3dcc02e9df9e76aff92b624b8" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Get</name></member>
      <member refid="classwx_config_base_1ac5b951ebb367a4bbc2ccebc045cb1591" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>GetAppName</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>GetClassInfo</name></member>
      <member refid="classwx_config_base_1a2fd2205a9bbcd9fe248dc43174117d59" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>GetEntryType</name></member>
      <member refid="classwx_file_config_1a731918aafd6b8f2552900aa79c60b48b" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>GetFirstEntry</name></member>
      <member refid="classwx_file_config_1aa0a82bdc1a523b9324a2233a8ac42c86" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>GetFirstGroup</name></member>
      <member refid="classwx_file_config_1af67ee0d35efdc5486c09682e4385dfb1" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>GetGlobalFile</name></member>
      <member refid="classwx_file_config_1ae70471e1167791f26bdc88175476674f" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>GetGlobalFileName</name></member>
      <member refid="classwx_file_config_1a479f242f67dca8149dfbd7e9b6394fe9" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>GetLocalFile</name></member>
      <member refid="classwx_file_config_1a50ecc124ab06aa5e6461e70f0673b06a" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>GetLocalFileName</name></member>
      <member refid="classwx_file_config_1a2e28f5f742466f9f6a77cd8c8e4f5d62" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>GetNextEntry</name></member>
      <member refid="classwx_file_config_1a1f8fd10b6f7ad744da343ee0af5b603a" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>GetNextGroup</name></member>
      <member refid="classwx_file_config_1a11c6187c8a07a6e722dbb4b135d7eb51" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>GetNumberOfEntries</name></member>
      <member refid="classwx_file_config_1a132f34eca0d959b05e00477e983a045c" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>GetNumberOfGroups</name></member>
      <member refid="classwx_file_config_1a75c6a1cf08cddd3376dc62610c279400" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>GetPath</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>GetRefData</name></member>
      <member refid="classwx_config_base_1affb49e611d184a7c0d4a2ccde9452026" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>GetVendorName</name></member>
      <member refid="classwx_file_config_1a58afc69f93a1e7fa440a0b7fbdd2ad46" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>HasEntry</name></member>
      <member refid="classwx_file_config_1a0d3f43185ea086a7d17be0be2135efbb" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>HasGroup</name></member>
      <member refid="classwx_config_base_1aab9d00f613c88574093082c394fb706d" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>IsExpandingEnvVars</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>IsKindOf</name></member>
      <member refid="classwx_config_base_1aba4b4badd839e0af4a5b0c15692351a5" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>IsRecordingDefaults</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxFileConfig</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>operator new</name></member>
      <member refid="classwx_config_base_1a0fe9238f38e565f3218563c674e66161" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1aa664f00931a8cbf4990c3aa4b6b1098c" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1a1a593fc959d10854daa9dba04b6747ba" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1a8655c70b311edf7d808e5babb565ab77" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1a06fafffd5e7ac33927ba38cec18e30f0" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1a44b631c8f1e598b4d31d1cafe5fb3090" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1a216a3fe2cae0e21448f6d34bdff6e295" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1ac85a62c0a6e1c49c7916267a4b9ed06a" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1a8ca7eafa519c7e077c1655def6aa5917" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1a09e29da759fd763f159334bd19bffd3d" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1a8441c70cfe5e56d40e84283c081e4073" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1a39c887dcf0861245e88ac9892faf23cf" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1a3e1ae84c1e9d076fcbcf78bf9ea9ee63" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1abd35ea62d3335d3ada07fe8c132839e6" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1af202773331d956a89eb2e8e725369b9e" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1a1bf0a08978ce2762903c9f2a65ee6e18" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1ae158d4ec48abb69e06c1e64c0a39218b" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1ace056b62faa3197aaa9b4210c25954fb" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Read</name></member>
      <member refid="classwx_config_base_1ad74920f9fe36e57497bda2fe9b8fd879" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>ReadBool</name></member>
      <member refid="classwx_config_base_1a5c2236796c64ff86d7e2aafa41de6dcc" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>ReadDouble</name></member>
      <member refid="classwx_config_base_1abc1db67d6a39e3e14624f38d2878d79b" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>ReadLong</name></member>
      <member refid="classwx_config_base_1a6e17b847e46895e5babcc267e680efd6" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>ReadLongLong</name></member>
      <member refid="classwx_config_base_1ab4ecd16e102f04f125b9f0f943488933" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>ReadObject</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Ref</name></member>
      <member refid="classwx_file_config_1a562a1b81e23d70c1921c2139dcf5580d" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>RenameEntry</name></member>
      <member refid="classwx_file_config_1a3827f9711a31782a2d4f1ea61e1ea592" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>RenameGroup</name></member>
      <member refid="classwx_file_config_1a6220fdc0f07a7e36e559e58d29965337" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>Save</name></member>
      <member refid="classwx_config_base_1a0e06983d7d6d101af213855feb8b87ad" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Set</name></member>
      <member refid="classwx_config_base_1a3a8c651d2bdde14e6248b0cd85062476" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>SetExpandEnvVars</name></member>
      <member refid="classwx_file_config_1ac2b05e8f651d7390e3c340e5c7feea0e" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>SetPath</name></member>
      <member refid="classwx_config_base_1a80bff71cc742251419ba499ce7b4da3c" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>SetRecordDefaults</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>SetRefData</name></member>
      <member refid="classwx_file_config_1a709b9d8592d746ca7a0d80abdf20ce95" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>SetUmask</name></member>
      <member refid="classwx_config_base_1a499282208b4b9e90cbfe60de25745bc4a5338e90a8c51020109928f3177c06caf" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Type_Boolean</name></member>
      <member refid="classwx_config_base_1a499282208b4b9e90cbfe60de25745bc4af1cafe0a03c8c929511258c31ea138cb" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Type_Float</name></member>
      <member refid="classwx_config_base_1a499282208b4b9e90cbfe60de25745bc4abf7985582695bbed6da7d2de5b22b6e8" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Type_Integer</name></member>
      <member refid="classwx_config_base_1a499282208b4b9e90cbfe60de25745bc4afeb4cd8ae582520fd2d45ec35b316d0a" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Type_String</name></member>
      <member refid="classwx_config_base_1a499282208b4b9e90cbfe60de25745bc4a186e69ade61db5ba7e5fc2366d2388fc" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Type_Unknown</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>UnShare</name></member>
      <member refid="classwx_config_base_1ace24f1478e71ac309ecf1d9273f19ce3" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Write</name></member>
      <member refid="classwx_config_base_1a052e7e5df90589f8094f860a9bdfd8a8" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Write</name></member>
      <member refid="classwx_config_base_1a3792a7c7f632471589950456212b3206" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Write</name></member>
      <member refid="classwx_config_base_1a108d7427200466a240f8ea835e74db7b" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Write</name></member>
      <member refid="classwx_config_base_1a97465083477038dc7d01e363c511f6cd" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Write</name></member>
      <member refid="classwx_config_base_1a83efe80538c9f3e4056ae6d44d362f49" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Write</name></member>
      <member refid="classwx_config_base_1a9ac693bd370a81d7fd0cad255869a041" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>Write</name></member>
      <member refid="classwx_config_base_1a7c3ce1f79df2837bc532c0ff551e7bac" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>wxConfigBase</name></member>
      <member refid="classwx_file_config_1a43f81c0b303155e84cecded7fc2f9a30" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>wxFileConfig</name></member>
      <member refid="classwx_file_config_1a98f3c3d151840d9e7dc821586c4c07e5" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>wxFileConfig</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxFileConfig</scope><name>wxObject</name></member>
      <member refid="classwx_config_base_1a43a12ede8b28e1a62820101105f380d0" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>~wxConfigBase</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxFileConfig</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
