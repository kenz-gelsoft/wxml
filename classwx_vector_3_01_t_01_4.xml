<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_vector_3_01_t_01_4" kind="class" language="C++" prot="public">
    <compoundname>wxVector&lt; T &gt;</compoundname>
    <includes local="no">wx/vector.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t wxVector&lt; T &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>wxVector&lt; T &gt;::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="28" column="20" bodyfile="interface/wx/vector.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classwx_vector_3_01_t_01_4_1a37a805d9c23b6fd1adb465c66bd35f0a" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t wxVector&lt; T &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>wxVector&lt; T &gt;::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="29" column="20" bodyfile="interface/wx/vector.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" prot="public" static="no">
        <type>T</type>
        <definition>typedef T wxVector&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>wxVector&lt; T &gt;::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="30" column="15" bodyfile="interface/wx/vector.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classwx_vector_3_01_t_01_4_1ad6d7a3ad4a85b5c6696ddef93c1a99a9" prot="public" static="no">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> *</type>
        <definition>typedef value_type* wxVector&lt; T &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>wxVector&lt; T &gt;::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="31" column="24" bodyfile="interface/wx/vector.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" prot="public" static="no">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> *</type>
        <definition>typedef value_type* wxVector&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>wxVector&lt; T &gt;::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="32" column="24" bodyfile="interface/wx/vector.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classwx_vector_3_01_t_01_4_1a82f52b139a4601c6e2fa40541d586161" prot="public" static="no">
        <type>const <ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> *</type>
        <definition>typedef const value_type* wxVector&lt; T &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>wxVector&lt; T &gt;::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="33" column="30" bodyfile="interface/wx/vector.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classwx_vector_3_01_t_01_4_1a1f821be1999ac7794de8a8ab948cdc21" prot="public" static="no">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
        <definition>typedef value_type&amp; wxVector&lt; T &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>wxVector&lt; T &gt;::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="34" column="24" bodyfile="interface/wx/vector.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a58e0a6f4026f10bb6c2ae6b332983d33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxVector&lt; T &gt;::wxVector</definition>
        <argsstring>()</argsstring>
        <name>wxVector</name>
        <qualifiedname>wxVector&lt; T &gt;::wxVector</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="39" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a82ee76027215aba38c1aad81fee32c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxVector&lt; T &gt;::wxVector</definition>
        <argsstring>(size_type size)</argsstring>
        <name>wxVector</name>
        <qualifiedname>wxVector&lt; T &gt;::wxVector</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Constructor initializing the vector with the given number of default-constructed objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="45" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a39e1538b613ab0f01820d26a84dc51c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxVector&lt; T &gt;::wxVector</definition>
        <argsstring>(size_type size, const value_type &amp;value)</argsstring>
        <name>wxVector</name>
        <qualifiedname>wxVector&lt; T &gt;::wxVector</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructor initializing the vector with the given number of copies of the given object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="51" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a5702375e58d91492d5922fdbf5a11ce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>wxVector&lt; T &gt;::wxVector</definition>
        <argsstring>(InputIterator first, InputIterator last)</argsstring>
        <name>wxVector</name>
        <qualifiedname>wxVector&lt; T &gt;::wxVector</qualifiedname>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Constructor initializing the vector with the elements in the given range. </para>
        </briefdescription>
        <detaileddescription>
<para>The <emphasis>InputIterator</emphasis> template parameter must be an input iterator type. This constructor adds all elements from <emphasis>first</emphasis> until, not including, <emphasis>last</emphasis> to the vector.</para>
<para><simplesect kind="since"><para>2.9.5 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="64" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1ae9336ab1785c3ab56ac1e127c5ffd4de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxVector&lt; T &gt;::wxVector</definition>
        <argsstring>(const wxVector&lt; T &gt; &amp;c)</argsstring>
        <name>wxVector</name>
        <qualifiedname>wxVector&lt; T &gt;::wxVector</qualifiedname>
        <param>
          <type>const wxVector&lt; T &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="69" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a84d557b24714a696457bac771136ce3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxVector&lt; T &gt;::~wxVector</definition>
        <argsstring>()</argsstring>
        <name>~wxVector</name>
        <qualifiedname>wxVector&lt; T &gt;::~wxVector</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="74" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a92a64359e755d51bc3805bc4fcea81fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVector&lt; T &gt;::assign</definition>
        <argsstring>(size_type n, const value_type &amp;v)</argsstring>
        <name>assign</name>
        <qualifiedname>wxVector&lt; T &gt;::assign</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Resizes the vector to <emphasis>n</emphasis> and assigns <emphasis>v</emphasis> to all elements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_vector_3_01_t_01_4_1a407c7b9d71a1a27255a175bffd281568" kindref="member">resize()</ref></para>
</simplesect>
<simplesect kind="since"><para>2.9.5 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="83" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a5764081b8ef1b1b003c4f30b08d10699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void wxVector&lt; T &gt;::assign</definition>
        <argsstring>(InputIterator first, InputIterator last)</argsstring>
        <name>assign</name>
        <qualifiedname>wxVector&lt; T &gt;::assign</qualifiedname>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Assigns the elements in the given range to the vector. </para>
        </briefdescription>
        <detaileddescription>
<para>The <emphasis>InputIterator</emphasis> template parameter must be an input iterator type. This method clears the vector and then adds all elements from <emphasis>first</emphasis> until, not not including, <emphasis>last</emphasis> to it.</para>
<para><simplesect kind="since"><para>2.9.5 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="95" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a275fd2ffe49343a9e558d0b91b329011" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
        <definition>const value_type &amp; wxVector&lt; T &gt;::at</definition>
        <argsstring>(size_type idx) const</argsstring>
        <name>at</name>
        <qualifiedname>wxVector&lt; T &gt;::at</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Returns item at position <emphasis>idx</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="100" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1ab652390cb548c9d9b19a1694cd512aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
        <definition>value_type &amp; wxVector&lt; T &gt;::at</definition>
        <argsstring>(size_type idx)</argsstring>
        <name>at</name>
        <qualifiedname>wxVector&lt; T &gt;::at</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Returns item at position <emphasis>idx</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="105" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a1eb9cc7bdaa429ead1bea87796dfb079" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
        <definition>const value_type &amp; wxVector&lt; T &gt;::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <qualifiedname>wxVector&lt; T &gt;::back</qualifiedname>
        <briefdescription>
<para>Return the last item. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="110" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1affdeafed6af638205a6310279efebb94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
        <definition>value_type &amp; wxVector&lt; T &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <qualifiedname>wxVector&lt; T &gt;::back</qualifiedname>
        <briefdescription>
<para>Return the last item. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="115" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1ab1903ebb90c5b4e7cc9d98d3f72bd08f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a82f52b139a4601c6e2fa40541d586161" kindref="member">const_iterator</ref></type>
        <definition>const_iterator wxVector&lt; T &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>wxVector&lt; T &gt;::begin</qualifiedname>
        <briefdescription>
<para>Return iterator to beginning of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="120" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a7f22b9bd87c197c1faa0cc2dca7734b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" kindref="member">iterator</ref></type>
        <definition>iterator wxVector&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>wxVector&lt; T &gt;::begin</qualifiedname>
        <briefdescription>
<para>Return iterator to beginning of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="125" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a78a8ee0844d5c70f94c88c4f1850dbcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>reverse_iterator</type>
        <definition>reverse_iterator wxVector&lt; T &gt;::rbegin</definition>
        <argsstring>()</argsstring>
        <name>rbegin</name>
        <qualifiedname>wxVector&lt; T &gt;::rbegin</qualifiedname>
        <briefdescription>
<para>Return reverse iterator to end of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="130" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a3b05b4697465aae97ba7680087954527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>reverse_iterator</type>
        <definition>reverse_iterator wxVector&lt; T &gt;::rend</definition>
        <argsstring>()</argsstring>
        <name>rend</name>
        <qualifiedname>wxVector&lt; T &gt;::rend</qualifiedname>
        <briefdescription>
<para>Return reverse iterator to beginning of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="135" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a63e4a24cf490207e96c6d325163f2d7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
        <definition>size_type wxVector&lt; T &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <qualifiedname>wxVector&lt; T &gt;::capacity</qualifiedname>
        <briefdescription>
<para>Returns vector&apos;s current capacity, i.e. how much memory is allocated. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_vector_3_01_t_01_4_1aa9acd20ae5b71ea5ea06b8150f37b117" kindref="member">reserve()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="143" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1ae21785a57b42f87b231b6fd671023962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVector&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>wxVector&lt; T &gt;::clear</qualifiedname>
        <briefdescription>
<para>Clears the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="148" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a9c7169bc89afc3a9cbbea1bc280d7d76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxVector&lt; T &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>wxVector&lt; T &gt;::empty</qualifiedname>
        <briefdescription>
<para>Returns true if the vector is empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="153" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1ac631a1571cdd568a5b13cf3f698014aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a82f52b139a4601c6e2fa40541d586161" kindref="member">const_iterator</ref></type>
        <definition>const_iterator wxVector&lt; T &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>wxVector&lt; T &gt;::end</qualifiedname>
        <briefdescription>
<para>Returns iterator to the end of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="158" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1aa24253d529b71c87994d3b66c00772ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" kindref="member">iterator</ref></type>
        <definition>iterator wxVector&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>wxVector&lt; T &gt;::end</qualifiedname>
        <briefdescription>
<para>Returns iterator to the end of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="163" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1aae28862c925b2c8441cd4f44450a9198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" kindref="member">iterator</ref></type>
        <definition>iterator wxVector&lt; T &gt;::erase</definition>
        <argsstring>(iterator it)</argsstring>
        <name>erase</name>
        <qualifiedname>wxVector&lt; T &gt;::erase</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" kindref="member">iterator</ref></type>
          <declname>it</declname>
        </param>
        <briefdescription>
<para>Erase item pointed to by iterator <emphasis>it</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator pointing to the item immediately after the erased one. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="170" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a0d8227912dd736d3e131f04166b7bb9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" kindref="member">iterator</ref></type>
        <definition>iterator wxVector&lt; T &gt;::erase</definition>
        <argsstring>(iterator first, iterator last)</argsstring>
        <name>erase</name>
        <qualifiedname>wxVector&lt; T &gt;::erase</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" kindref="member">iterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" kindref="member">iterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Erase items in the range <emphasis>first</emphasis> to <emphasis>last</emphasis> (<emphasis>last</emphasis> is not erased). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator pointing to the item immediately after the erased range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="178" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a5196354fa8a095d5c19953b1ed1a4e5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
        <definition>const value_type &amp; wxVector&lt; T &gt;::front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <qualifiedname>wxVector&lt; T &gt;::front</qualifiedname>
        <briefdescription>
<para>Returns the first item. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="183" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1aa2d448707fa0fefc588c0fa0aa7798a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
        <definition>value_type &amp; wxVector&lt; T &gt;::front</definition>
        <argsstring>()</argsstring>
        <name>front</name>
        <qualifiedname>wxVector&lt; T &gt;::front</qualifiedname>
        <briefdescription>
<para>Returns the first item. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="188" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a5a0bcd7b375194b35c6056529b343a18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" kindref="member">iterator</ref></type>
        <definition>iterator wxVector&lt; T &gt;::insert</definition>
        <argsstring>(iterator it, const value_type &amp;v=value_type())</argsstring>
        <name>insert</name>
        <qualifiedname>wxVector&lt; T &gt;::insert</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" kindref="member">iterator</ref></type>
          <declname>it</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
          <declname>v</declname>
          <defval><ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref>()</defval>
        </param>
        <briefdescription>
<para>Insert item <emphasis>v</emphasis> at given position <emphasis>it</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator for the inserted item. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="195" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1abd690b7727d742a3eb8a1bccd39852d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" kindref="member">iterator</ref></type>
        <definition>iterator wxVector&lt; T &gt;::insert</definition>
        <argsstring>(iterator it, size_type count, const value_type &amp;v)</argsstring>
        <name>insert</name>
        <qualifiedname>wxVector&lt; T &gt;::insert</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" kindref="member">iterator</ref></type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Insert the given number of copies of <emphasis>v</emphasis> at the given position. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator for the first inserted item.</para>
</simplesect>
<simplesect kind="since"><para>3.1.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="204" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1aa718baec3b8ecc3e17399eaaeb758947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a58e0a6f4026f10bb6c2ae6b332983d33" kindref="member">wxVector</ref> &amp;</type>
        <definition>wxVector &amp; wxVector&lt; T &gt;::operator=</definition>
        <argsstring>(const wxVector &amp;vb)</argsstring>
        <name>operator=</name>
        <qualifiedname>wxVector&lt; T &gt;::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classwx_vector_3_01_t_01_4_1a58e0a6f4026f10bb6c2ae6b332983d33" kindref="member">wxVector</ref> &amp;</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="209" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1abe6a2fbc0e9038958d74307cd048c1fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a58e0a6f4026f10bb6c2ae6b332983d33" kindref="member">wxVector</ref> &amp;</type>
        <definition>wxVector &amp; wxVector&lt; T &gt;::operator==</definition>
        <argsstring>(const wxVector &amp;vb) const</argsstring>
        <name>operator==</name>
        <qualifiedname>wxVector&lt; T &gt;::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classwx_vector_3_01_t_01_4_1a58e0a6f4026f10bb6c2ae6b332983d33" kindref="member">wxVector</ref> &amp;</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>3.1.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="216" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a68bcfae511fbc4f87dd286bbb0eae0c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a58e0a6f4026f10bb6c2ae6b332983d33" kindref="member">wxVector</ref> &amp;</type>
        <definition>wxVector &amp; wxVector&lt; T &gt;::operator!=</definition>
        <argsstring>(const wxVector &amp;vb) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>wxVector&lt; T &gt;::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classwx_vector_3_01_t_01_4_1a58e0a6f4026f10bb6c2ae6b332983d33" kindref="member">wxVector</ref> &amp;</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>Inequality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>3.1.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="223" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1ae9b9a3fe2b2a1c78f084c4bfcc5c936d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
        <definition>const value_type &amp; wxVector&lt; T &gt;::operator[]</definition>
        <argsstring>(size_type idx) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>wxVector&lt; T &gt;::operator[]</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Returns item at position <emphasis>idx</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="228" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a0851c22181787b79dc05e82c6f27a2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
        <definition>value_type &amp; wxVector&lt; T &gt;::operator[]</definition>
        <argsstring>(size_type idx)</argsstring>
        <name>operator[]</name>
        <qualifiedname>wxVector&lt; T &gt;::operator[]</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Returns item at position <emphasis>idx</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="233" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1ad99c85acaf59452ea211d1ea4905d8e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVector&lt; T &gt;::pop_back</definition>
        <argsstring>()</argsstring>
        <name>pop_back</name>
        <qualifiedname>wxVector&lt; T &gt;::pop_back</qualifiedname>
        <briefdescription>
<para>Removes the last item. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="238" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1ae8681598f2600c22bee07d74992edf85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVector&lt; T &gt;::push_back</definition>
        <argsstring>(const value_type &amp;v)</argsstring>
        <name>push_back</name>
        <qualifiedname>wxVector&lt; T &gt;::push_back</qualifiedname>
        <param>
          <type>const <ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Adds an item to the end of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="243" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1aa9acd20ae5b71ea5ea06b8150f37b117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVector&lt; T &gt;::reserve</definition>
        <argsstring>(size_type n)</argsstring>
        <name>reserve</name>
        <qualifiedname>wxVector&lt; T &gt;::reserve</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Reserves memory for at least <emphasis>n</emphasis> items. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_vector_3_01_t_01_4_1a63e4a24cf490207e96c6d325163f2d7e" kindref="member">capacity()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="250" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a407c7b9d71a1a27255a175bffd281568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVector&lt; T &gt;::resize</definition>
        <argsstring>(size_type n)</argsstring>
        <name>resize</name>
        <qualifiedname>wxVector&lt; T &gt;::resize</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Makes the vector of size <emphasis>n</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>n</emphasis> is less than the current <ref refid="classwx_vector_3_01_t_01_4_1ac5cdd275fa6fd1e484b916d06fa2ce06" kindref="member">size()</ref>, the elements at the end of the vector are erased. If it is greater, then the vector is completed with either the copies of the given object <emphasis>v</emphasis> or <computeroutput><ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type()</ref></computeroutput> objects until it becomes of size <emphasis>n</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="261" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1ac4fb0422e58df05b76e0ddadd2f5b886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVector&lt; T &gt;::resize</definition>
        <argsstring>(size_type n, const value_type &amp;v)</argsstring>
        <name>resize</name>
        <qualifiedname>wxVector&lt; T &gt;::resize</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" kindref="member">value_type</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="262" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1abfe1204bdbc9d161959a59b224a79ae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVector&lt; T &gt;::shrink_to_fit</definition>
        <argsstring>()</argsstring>
        <name>shrink_to_fit</name>
        <qualifiedname>wxVector&lt; T &gt;::shrink_to_fit</qualifiedname>
        <briefdescription>
<para>Free unused memory allocated by the vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Reduces the memory used by the vector to the bare minimum required to hold its current number of elements, possibly 0.</para>
<para>After calling this method, <ref refid="classwx_vector_3_01_t_01_4_1a63e4a24cf490207e96c6d325163f2d7e" kindref="member">capacity()</ref> returns the same as <ref refid="classwx_vector_3_01_t_01_4_1ac5cdd275fa6fd1e484b916d06fa2ce06" kindref="member">size()</ref>.</para>
<para><simplesect kind="since"><para>3.1.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="275" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1ac5cdd275fa6fd1e484b916d06fa2ce06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" kindref="member">size_type</ref></type>
        <definition>size_type wxVector&lt; T &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>wxVector&lt; T &gt;::size</qualifiedname>
        <briefdescription>
<para>Returns the size of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="280" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classwx_vector_3_01_t_01_4_1a637549cb7d4ff507a6a867430e0c033a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVector&lt; T &gt;::swap</definition>
        <argsstring>(wxVector &amp;v)</argsstring>
        <name>swap</name>
        <qualifiedname>wxVector&lt; T &gt;::swap</qualifiedname>
        <param>
          <type><ref refid="classwx_vector_3_01_t_01_4_1a58e0a6f4026f10bb6c2ae6b332983d33" kindref="member">wxVector</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Efficiently exchanges contents of this vector with another one. </para>
        </briefdescription>
        <detaileddescription>
<para>After the execution of this function the contents of this vector is equal to the original contents of <emphasis>v</emphasis> and the contents of <emphasis>v</emphasis> becomes the original contents of this vector without copying the data.</para>
<para><simplesect kind="since"><para>2.9.1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vector.h" line="291" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_vector_3_01_t_01_4" kindref="compound">wxVector&lt;T&gt;</ref> is a template class which implements most of the <computeroutput>std::vector</computeroutput> class and can be used like it. </para>
    </briefdescription>
    <detaileddescription>
<para>If wxWidgets is compiled in STL mode, wxVector will just be a typedef to <computeroutput>std::vector</computeroutput>. Just like for <computeroutput>std::vector</computeroutput>, objects stored in <ref refid="classwx_vector_3_01_t_01_4" kindref="compound">wxVector&lt;T&gt;</ref> need to be <emphasis>assignable</emphasis> but don&apos;t have to be <emphasis>&quot;default constructible&quot;</emphasis>.</para>
<para>Please refer to the STL documentation for further information.</para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/>None; this class implementation is entirely header-based.</para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__containers" kindref="compound">Containers</ref></para>
<para><simplesect kind="see"><para><ref refid="overview_container" kindref="compound">Container Classes</ref>, <ref refid="classwx_list_3_01_t_01_4" kindref="compound">wxList&lt;T&gt;</ref>, <ref refid="classwx_array_3_01_t_01_4" kindref="compound">wxArray&lt;T&gt;</ref>, <ref refid="vector_8h_1a51f3ce4aa4cecea615da3fc293d40e6c" kindref="member">wxVectorSort&lt;T&gt;</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="interface/wx/vector.h" line="25" column="1" bodyfile="interface/wx/vector.h" bodystart="26" bodyend="292"/>
    <listofallmembers>
      <member refid="classwx_vector_3_01_t_01_4_1a92a64359e755d51bc3805bc4fcea81fa" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>assign</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a5764081b8ef1b1b003c4f30b08d10699" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>assign</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a275fd2ffe49343a9e558d0b91b329011" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>at</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ab652390cb548c9d9b19a1694cd512aa1" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>at</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a1eb9cc7bdaa429ead1bea87796dfb079" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>back</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1affdeafed6af638205a6310279efebb94" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>back</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ab1903ebb90c5b4e7cc9d98d3f72bd08f" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>begin</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a7f22b9bd87c197c1faa0cc2dca7734b1" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>begin</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a63e4a24cf490207e96c6d325163f2d7e" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>capacity</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ae21785a57b42f87b231b6fd671023962" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>clear</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a82f52b139a4601c6e2fa40541d586161" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>const_iterator</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a37a805d9c23b6fd1adb465c66bd35f0a" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>difference_type</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a9c7169bc89afc3a9cbbea1bc280d7d76" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>empty</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ac631a1571cdd568a5b13cf3f698014aa" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>end</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1aa24253d529b71c87994d3b66c00772ae" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>end</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1aae28862c925b2c8441cd4f44450a9198" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>erase</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a0d8227912dd736d3e131f04166b7bb9e" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>erase</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a5196354fa8a095d5c19953b1ed1a4e5e" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>front</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1aa2d448707fa0fefc588c0fa0aa7798a0" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>front</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a5a0bcd7b375194b35c6056529b343a18" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>insert</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1abd690b7727d742a3eb8a1bccd39852d7" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>insert</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ab5863ae8b75987f416b5bddc471703ed" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>iterator</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a68bcfae511fbc4f87dd286bbb0eae0c5" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>operator!=</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1aa718baec3b8ecc3e17399eaaeb758947" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>operator=</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1abe6a2fbc0e9038958d74307cd048c1fd" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>operator==</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ae9b9a3fe2b2a1c78f084c4bfcc5c936d" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>operator[]</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a0851c22181787b79dc05e82c6f27a2a1" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>operator[]</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ad6d7a3ad4a85b5c6696ddef93c1a99a9" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>pointer</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ad99c85acaf59452ea211d1ea4905d8e2" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>pop_back</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ae8681598f2600c22bee07d74992edf85" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>push_back</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a78a8ee0844d5c70f94c88c4f1850dbcc" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>rbegin</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a1f821be1999ac7794de8a8ab948cdc21" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>reference</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a3b05b4697465aae97ba7680087954527" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>rend</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1aa9acd20ae5b71ea5ea06b8150f37b117" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>reserve</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a407c7b9d71a1a27255a175bffd281568" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>resize</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ac4fb0422e58df05b76e0ddadd2f5b886" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>resize</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1abfe1204bdbc9d161959a59b224a79ae4" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>shrink_to_fit</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ac5cdd275fa6fd1e484b916d06fa2ce06" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>size</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a84a2f5af718ce03a212a65b8b5c1cb8a" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>size_type</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a637549cb7d4ff507a6a867430e0c033a" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>swap</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a200a710822fc0779945b7d5bf943d9cc" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>value_type</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a58e0a6f4026f10bb6c2ae6b332983d33" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>wxVector</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a82ee76027215aba38c1aad81fee32c5b" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>wxVector</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a39e1538b613ab0f01820d26a84dc51c7" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>wxVector</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a5702375e58d91492d5922fdbf5a11ce0" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>wxVector</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1ae9336ab1785c3ab56ac1e127c5ffd4de" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>wxVector</name></member>
      <member refid="classwx_vector_3_01_t_01_4_1a84d557b24714a696457bac771136ce3d" prot="public" virt="non-virtual"><scope>wxVector&lt; T &gt;</scope><name>~wxVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
