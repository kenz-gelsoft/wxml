<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_string_tokenizer" kind="class" language="C++" prot="public">
    <compoundname>wxStringTokenizer</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/tokenzr.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_string_tokenizer_1a59aa6a8673730d97a235c9a77ee93866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxStringTokenizer::wxStringTokenizer</definition>
        <argsstring>()</argsstring>
        <name>wxStringTokenizer</name>
        <qualifiedname>wxStringTokenizer::wxStringTokenizer</qualifiedname>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>You must call <ref refid="classwx_string_tokenizer_1acac18438a15dbe799d659f13a10187e9" kindref="member">SetString()</ref> before calling any other methods. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/tokenzr.h" line="102" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_string_tokenizer_1a44fd704314604082b029f8b0e19411dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxStringTokenizer::wxStringTokenizer</definition>
        <argsstring>(const wxString &amp;str, const wxString &amp;delims=wxDEFAULT_DELIMITERS, wxStringTokenizerMode mode=wxTOKEN_DEFAULT)</argsstring>
        <name>wxStringTokenizer</name>
        <qualifiedname>wxStringTokenizer::wxStringTokenizer</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>delims</declname>
          <defval><ref refid="tokenzr_8h_1a58f42335052e241a3ee01fd735263922" kindref="member">wxDEFAULT_DELIMITERS</ref></defval>
        </param>
        <param>
          <type><ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9f" kindref="member">wxStringTokenizerMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9fa47d7692cd4311164d35b0b7a0770f533" kindref="member">wxTOKEN_DEFAULT</ref></defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Pass the string to tokenize, a string containing delimiters, and the <emphasis>mode</emphasis> specifying how the string should be tokenized.</para>
<para><simplesect kind="see"><para><ref refid="classwx_string_tokenizer_1acac18438a15dbe799d659f13a10187e9" kindref="member">SetString()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/tokenzr.h" line="110" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_string_tokenizer_1ae4a9499d5fc9acb1f755e4dd4a0da192" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxStringTokenizer::CountTokens</definition>
        <argsstring>() const</argsstring>
        <name>CountTokens</name>
        <qualifiedname>wxStringTokenizer::CountTokens</qualifiedname>
        <briefdescription>
<para>Returns the number of tokens remaining in the input string. </para>
        </briefdescription>
        <detaileddescription>
<para>The number of tokens returned by this function is decremented each time <ref refid="classwx_string_tokenizer_1a6537282af1f6b9757393046d780e5270" kindref="member">GetNextToken()</ref> is called and when it reaches 0, <ref refid="classwx_string_tokenizer_1a6d92050756fa2f3cf405549f670bef53" kindref="member">HasMoreTokens()</ref> returns false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/tokenzr.h" line="120" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_string_tokenizer_1a802e2bfdf2e2b93b59b3d04c1d569def" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="chartype_8h_1ad42f64d8c82f1ce4ae58773a89b2d6a7" kindref="member">wxChar</ref></type>
        <definition>wxChar wxStringTokenizer::GetLastDelimiter</definition>
        <argsstring>() const</argsstring>
        <name>GetLastDelimiter</name>
        <qualifiedname>wxStringTokenizer::GetLastDelimiter</qualifiedname>
        <briefdescription>
<para>Returns the delimiter which ended scan for the last token returned by <ref refid="classwx_string_tokenizer_1a6537282af1f6b9757393046d780e5270" kindref="member">GetNextToken()</ref> or <computeroutput>NUL</computeroutput> if there had been no calls to this function yet or if it returned the trailing empty token in <ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9faa4d5162c3be9163135a2a79bbe6ecacd" kindref="member">wxTOKEN_RET_EMPTY_ALL</ref> mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.7.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/tokenzr.h" line="130" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_string_tokenizer_1a6537282af1f6b9757393046d780e5270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStringTokenizer::GetNextToken</definition>
        <argsstring>()</argsstring>
        <name>GetNextToken</name>
        <qualifiedname>wxStringTokenizer::GetNextToken</qualifiedname>
        <briefdescription>
<para>Returns the next token or empty string if the end of string was reached. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/tokenzr.h" line="135" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_string_tokenizer_1ae1bbecec383b8f0a5b7c7cc4ea4b45c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxStringTokenizer::GetPosition</definition>
        <argsstring>() const</argsstring>
        <name>GetPosition</name>
        <qualifiedname>wxStringTokenizer::GetPosition</qualifiedname>
        <briefdescription>
<para>Returns the current position (i.e. one index after the last returned token or 0 if <ref refid="classwx_string_tokenizer_1a6537282af1f6b9757393046d780e5270" kindref="member">GetNextToken()</ref> has never been called) in the original string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/tokenzr.h" line="142" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_string_tokenizer_1ac41a76076506d07fbe9bce2281727a63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxStringTokenizer::GetString</definition>
        <argsstring>() const</argsstring>
        <name>GetString</name>
        <qualifiedname>wxStringTokenizer::GetString</qualifiedname>
        <briefdescription>
<para>Returns the part of the initial string which is yet to be tokenized. </para>
        </briefdescription>
        <detaileddescription>
<para>That is, the substring from the current position up to the end, possibly empty if there are no more tokens left. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/tokenzr.h" line="150" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classwx_string_tokenizer_1a6d92050756fa2f3cf405549f670bef53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxStringTokenizer::HasMoreTokens</definition>
        <argsstring>() const</argsstring>
        <name>HasMoreTokens</name>
        <qualifiedname>wxStringTokenizer::HasMoreTokens</qualifiedname>
        <briefdescription>
<para>Returns true if the tokenizer has further tokens, false if none are left. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/tokenzr.h" line="155" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_string_tokenizer_1acac18438a15dbe799d659f13a10187e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxStringTokenizer::SetString</definition>
        <argsstring>(const wxString &amp;str, const wxString &amp;delims=wxDEFAULT_DELIMITERS, wxStringTokenizerMode mode=wxTOKEN_DEFAULT)</argsstring>
        <name>SetString</name>
        <qualifiedname>wxStringTokenizer::SetString</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>delims</declname>
          <defval><ref refid="tokenzr_8h_1a58f42335052e241a3ee01fd735263922" kindref="member">wxDEFAULT_DELIMITERS</ref></defval>
        </param>
        <param>
          <type><ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9f" kindref="member">wxStringTokenizerMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="tokenzr_8h_1a8203239377764e04822e52b33ee02f9fa47d7692cd4311164d35b0b7a0770f533" kindref="member">wxTOKEN_DEFAULT</ref></defval>
        </param>
        <briefdescription>
<para>Initializes the tokenizer. </para>
        </briefdescription>
        <detaileddescription>
<para>Pass the string to tokenize, a string containing delimiters, and the <emphasis>mode</emphasis> specifying how the string should be tokenized. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/tokenzr.h" line="162" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_string_tokenizer" kindref="compound">wxStringTokenizer</ref> helps you to break a string up into a number of tokens. </para>
    </briefdescription>
    <detaileddescription>
<para>It replaces the standard C function <computeroutput>strtok()</computeroutput> and also extends it in a number of ways.</para>
<para>To use this class, you should create a <ref refid="classwx_string_tokenizer" kindref="compound">wxStringTokenizer</ref> object, give it the string to tokenize and also the delimiters which separate tokens in the string (by default, white space characters will be used).</para>
<para>Then <ref refid="classwx_string_tokenizer_1a6537282af1f6b9757393046d780e5270" kindref="member">wxStringTokenizer::GetNextToken()</ref> may be called repeatedly until <ref refid="classwx_string_tokenizer_1a6d92050756fa2f3cf405549f670bef53" kindref="member">wxStringTokenizer::HasMoreTokens()</ref> returns false.</para>
<para>For example:</para>
<para><programlisting><codeline><highlight class="normal"><ref refid="classwx_string_tokenizer" kindref="compound">wxStringTokenizer</ref><sp/>tokenizer(</highlight><highlight class="stringliteral">&quot;first:second:third:fourth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>tokenizer.HasMoreTokens()<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwx_string" kindref="compound">wxString</ref><sp/>token<sp/>=<sp/>tokenizer.GetNextToken();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>token<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__data" kindref="compound">Data Structures</ref></para>
<para><simplesect kind="see"><para><ref refid="tokenzr_8h_1a2c25293c0f273b78001e02313ca20d96" kindref="member">wxStringTokenize()</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="1">
        <label>wxStringTokenizer</label>
        <link refid="classwx_string_tokenizer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
      <node id="1">
        <label>wxStringTokenizer</label>
        <link refid="classwx_string_tokenizer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/tokenzr.h" line="95" column="1" bodyfile="interface/wx/tokenzr.h" bodystart="96" bodyend="165"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxStringTokenizer</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxStringTokenizer</scope><name>CloneRefData</name></member>
      <member refid="classwx_string_tokenizer_1ae4a9499d5fc9acb1f755e4dd4a0da192" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>CountTokens</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxStringTokenizer</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxStringTokenizer</scope><name>GetClassInfo</name></member>
      <member refid="classwx_string_tokenizer_1a802e2bfdf2e2b93b59b3d04c1d569def" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>GetLastDelimiter</name></member>
      <member refid="classwx_string_tokenizer_1a6537282af1f6b9757393046d780e5270" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>GetNextToken</name></member>
      <member refid="classwx_string_tokenizer_1ae1bbecec383b8f0a5b7c7cc4ea4b45c7" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>GetPosition</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>GetRefData</name></member>
      <member refid="classwx_string_tokenizer_1ac41a76076506d07fbe9bce2281727a63" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>GetString</name></member>
      <member refid="classwx_string_tokenizer_1a6d92050756fa2f3cf405549f670bef53" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>HasMoreTokens</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxStringTokenizer</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>Ref</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>SetRefData</name></member>
      <member refid="classwx_string_tokenizer_1acac18438a15dbe799d659f13a10187e9" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>SetString</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>wxObject</name></member>
      <member refid="classwx_string_tokenizer_1a59aa6a8673730d97a235c9a77ee93866" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>wxStringTokenizer</name></member>
      <member refid="classwx_string_tokenizer_1a44fd704314604082b029f8b0e19411dd" prot="public" virt="non-virtual"><scope>wxStringTokenizer</scope><name>wxStringTokenizer</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxStringTokenizer</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
