<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classwx_l_z_m_a_input_stream" kind="class" language="C++" prot="public">
    <compoundname>wxLZMAInputStream</compoundname>
    <basecompoundref refid="classwx_filter_input_stream" prot="public" virt="non-virtual">wxFilterInputStream</basecompoundref>
    <includes local="no">wx/lzmastream.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_l_z_m_a_input_stream_1a7c147ce879ed0651fb5d5f2f16e6bd0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxLZMAInputStream::wxLZMAInputStream</definition>
        <argsstring>(wxInputStream &amp;stream)</argsstring>
        <name>wxLZMAInputStream</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Create decompressing stream associated with the given underlying stream. </para>
        </briefdescription>
        <detaileddescription>
<para>This overload does not take ownership of the <emphasis>stream</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/lzmastream.h" line="52" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_l_z_m_a_input_stream_1a69dffaa15b039f3c965420cb2045144c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxLZMAInputStream::wxLZMAInputStream</definition>
        <argsstring>(wxInputStream *stream)</argsstring>
        <name>wxLZMAInputStream</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Create decompressing stream associated with the given underlying stream and takes ownership of it. </para>
        </briefdescription>
        <detaileddescription>
<para>As with the base <ref refid="classwx_filter_input_stream" kindref="compound">wxFilterInputStream</ref> class, passing <emphasis>stream</emphasis> by pointer indicates that this object takes ownership of it and will delete it when it is itself destroyed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/lzmastream.h" line="62" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This filter stream decompresses data in XZ format. </para>
    </briefdescription>
    <detaileddescription>
<para>XZ format uses LZMA2 algorithm for compression used for .xz files and is similar to GZip or BZip2 format. Notice that it is different from, and incompatible with, 7z archive format even although it uses the same compression algorithm.</para>
<para>To decompress contents of standard input to standard output, the following (not optimally efficient) code could be used: <programlisting><codeline><highlight class="normal"><ref refid="classwx_f_file_input_stream" kindref="compound">wxFFileInputStream</ref><sp/>fin(stdin);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classwx_l_z_m_a_input_stream" kindref="compound">wxLZMAInputStream</ref><sp/>zin(fin);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classwx_f_file_output_stream" kindref="compound">wxFFileOutputStream</ref><sp/>fout(stdout);</highlight></codeline>
<codeline><highlight class="normal">zin.Read(fout);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>zin.GetLastError()<sp/>!=<sp/><ref refid="interface_2wx_2stream_8h_1a3f7d92141b5177ab9661bd8073940b2ea58e3edae8f8e557faefad8fda94d3c85" kindref="member">wxSTREAM_EOF</ref><sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...<sp/>handle<sp/>error<sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>See <ref refid="page_build_liblzma" kindref="compound">Using LZMA compression with liblzma</ref> for information about liblzma, required in order to use this class.</para>
<para><heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ , \ &lt;/&gt;&lt;/&gt;</para>
<para><simplesect kind="see"><para><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref>, <ref refid="classwx_zlib_input_stream" kindref="compound">wxZlibInputStream</ref>, <ref refid="classwx_l_z_m_a_output_stream" kindref="compound">wxLZMAOutputStream</ref>.</para>
</simplesect>
<simplesect kind="since"><para>3.1.2 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>wxFilterInputStream</label>
        <link refid="classwx_filter_input_stream"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxInputStream</label>
        <link refid="classwx_input_stream"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxLZMAInputStream</label>
        <link refid="classwx_l_z_m_a_input_stream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>wxStreamBase</label>
        <link refid="classwx_stream_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>wxFilterInputStream</label>
        <link refid="classwx_filter_input_stream"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxInputStream</label>
        <link refid="classwx_input_stream"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxLZMAInputStream</label>
        <link refid="classwx_l_z_m_a_input_stream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>wxStreamBase</label>
        <link refid="classwx_stream_base"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/lzmastream.h" line="43" column="1" bodyfile="interface/wx/lzmastream.h" bodystart="44" bodyend="63"/>
    <listofallmembers>
      <member refid="classwx_input_stream_1ab081191ca94cf4bc511850471cd090f1" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>CanRead</name></member>
      <member refid="classwx_input_stream_1a632ef01c45abc66f6e39db9b25f5ebde" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>Eof</name></member>
      <member refid="classwx_input_stream_1a98462fa7198b5c9dca1c71acf6148e0b" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>GetC</name></member>
      <member refid="classwx_stream_base_1a33440c8ea3f8df382adecd7d188a1662" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>GetLastError</name></member>
      <member refid="classwx_stream_base_1a052d67c85f63873fabb45ecd108ea615" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>GetLength</name></member>
      <member refid="classwx_stream_base_1aae8094702c3aee35c38e3e06e052479c" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>GetSize</name></member>
      <member refid="classwx_stream_base_1ad33abd694469e858fc3bbb0163a7fc4b" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>IsOk</name></member>
      <member refid="classwx_stream_base_1a927368a32e940a11b96dbfb617d9afda" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>IsSeekable</name></member>
      <member refid="classwx_input_stream_1aae3e3341d71b3441eb4b723f5a6a518f" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>LastRead</name></member>
      <member refid="classwx_input_stream_1a8ebacd18964a4b169a62ad9190cab4d5" prot="protected" virt="pure-virtual"><scope>wxLZMAInputStream</scope><name>OnSysRead</name></member>
      <member refid="classwx_stream_base_1ae38e82c374f82d39993909f0a5d3017e" prot="protected" virt="virtual"><scope>wxLZMAInputStream</scope><name>OnSysSeek</name></member>
      <member refid="classwx_stream_base_1a7131a1f866ea911e90bb85bc1937d29b" prot="protected" virt="virtual"><scope>wxLZMAInputStream</scope><name>OnSysTell</name></member>
      <member refid="classwx_stream_base_1a2559b4fcfc7f7173259d703b39cb0d33" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>operator!</name></member>
      <member refid="classwx_input_stream_1a42dc4394276b726b9877faf2c71ae408" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>Peek</name></member>
      <member refid="classwx_input_stream_1ae70ea89ff05940bc312216decde6237d" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>Read</name></member>
      <member refid="classwx_input_stream_1a34987cf731f908880e4b1d4e4deb42c4" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>Read</name></member>
      <member refid="classwx_input_stream_1a80d84e864b277719a3034c15cdd5a017" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>ReadAll</name></member>
      <member refid="classwx_stream_base_1a52353ac42f72538b2022a84f416e5fe2" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>Reset</name></member>
      <member refid="classwx_input_stream_1a989ed0f85fe7340cc0996bbcee03822d" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>SeekI</name></member>
      <member refid="classwx_input_stream_1abd1262a929619d476c255669a192bc2c" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>TellI</name></member>
      <member refid="classwx_input_stream_1a503ff01720f51c4fb170aa78a296be9d" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>Ungetch</name></member>
      <member refid="classwx_input_stream_1a7fe847c79f8d2e1b98bb129c23e549c7" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>Ungetch</name></member>
      <member refid="classwx_filter_input_stream_1a21dda00003313a92200677f2d9c78d99" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>wxFilterInputStream</name></member>
      <member refid="classwx_filter_input_stream_1a64c3433e69bcec829fec8e0381a24847" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>wxFilterInputStream</name></member>
      <member refid="classwx_input_stream_1aeb3e1146260cabcfbe631ff3493ee851" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>wxInputStream</name></member>
      <member refid="classwx_l_z_m_a_input_stream_1a7c147ce879ed0651fb5d5f2f16e6bd0d" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>wxLZMAInputStream</name></member>
      <member refid="classwx_l_z_m_a_input_stream_1a69dffaa15b039f3c965420cb2045144c" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>wxLZMAInputStream</name></member>
      <member refid="classwx_stream_base_1a2bdb01f1ccd34d551d3cfc848054bf1e" prot="public" virt="non-virtual"><scope>wxLZMAInputStream</scope><name>wxStreamBase</name></member>
      <member refid="classwx_input_stream_1a30fea51e11bbf042f29bdf82bc052ab2" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>~wxInputStream</name></member>
      <member refid="classwx_stream_base_1aebba32b4da79c60933fa997735a8bfe5" prot="public" virt="virtual"><scope>wxLZMAInputStream</scope><name>~wxStreamBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
