<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classwx_icon" kind="class" language="C++" prot="public">
    <compoundname>wxIcon</compoundname>
    <basecompoundref refid="classwx_g_d_i_object" prot="public" virt="non-virtual">wxGDIObject</basecompoundref>
    <includes local="no">wx/icon.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_icon_1a1b832f41fcde273eaa4384d2e567aa90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxIcon::wxIcon</definition>
        <argsstring>()</argsstring>
        <name>wxIcon</name>
        <qualifiedname>wxIcon::wxIcon</qualifiedname>
        <briefdescription>
<para>Default ctor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructs an icon object with no data; an assignment or another member function such as <ref refid="classwx_icon_1a753ecdd4f8d908f51fa0bbd848a613ee" kindref="member">LoadFile()</ref> must be called subsequently. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="61" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a0379f12c09a41e1e18a25f845d1cdafc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxIcon::wxIcon</definition>
        <argsstring>(const wxIcon &amp;icon)</argsstring>
        <name>wxIcon</name>
        <qualifiedname>wxIcon::wxIcon</qualifiedname>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
<para>Copy ctor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="66" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a135a7d23bec91957885c5d29b97cccff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxIcon::wxIcon</definition>
        <argsstring>(const char bits[], int width, int height)</argsstring>
        <name>wxIcon</name>
        <qualifiedname>wxIcon::wxIcon</qualifiedname>
        <param>
          <type>const char</type>
          <declname>bits</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Creates an icon from an array of bits. </para>
        </briefdescription>
        <detaileddescription>
<para>You should only use this function for monochrome bitmaps (depth 1) in portable programs: in this case the bits parameter should contain an XBM image.</para>
<para>For other bit depths, the behaviour is platform dependent: under Windows, the data is passed without any changes to the underlying CreateBitmap() API. Under other platforms, only monochrome bitmaps may be created using this constructor and <ref refid="classwx_image" kindref="compound">wxImage</ref> should be used for creating colour bitmaps from static data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies an array of pixel values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The width of the image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The height of the image.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>wxPerl Note:</bold> In wxPerl use Wx::Icon-&gt;newBits(bits, width, height, depth = -1); </para>
<para>Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref>, <ref refid="page_port_1page_port_wxosx" kindref="member">wxOSX/Cocoa</ref> ports.  <onlyfor>wxmsw,wxosx</onlyfor>  </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="102" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a8923d0c1f69ca83671e57bb439228fe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxIcon::wxIcon</definition>
        <argsstring>(const char *const *bits)</argsstring>
        <name>wxIcon</name>
        <qualifiedname>wxIcon::wxIcon</qualifiedname>
        <param>
          <type>const char *const *</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>Creates a bitmap from XPM data. </para>
        </briefdescription>
        <detaileddescription>
<para>To use this constructor, you must first include an XPM file. For example, assuming that the file mybitmap.xpm contains an XPM array of character pointers called <emphasis>mybitmap:</emphasis> </para>
<para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&quot;mybitmap.xpm&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">wxIcon<sp/>*icon<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classwx_icon_1a1b832f41fcde273eaa4384d2e567aa90" kindref="member">wxIcon</ref>(mybitmap);</highlight></codeline>
</programlisting></para>
<para>A macro, wxICON, is available which creates an icon using an XPM on the appropriate platform, or an icon resource on Windows.</para>
<para><programlisting><codeline><highlight class="normal"><ref refid="classwx_icon" kindref="compound">wxIcon</ref><sp/>icon(<ref refid="gdicmn_8h_1a1f22eefa44998cbeb8f018978cf5d375" kindref="member">wxICON</ref>(sample));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Equivalent<sp/>to:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXGTK__)<sp/>||<sp/>defined(__WXMOTIF__)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classwx_icon" kindref="compound">wxIcon</ref><sp/>icon(sample_xpm);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classwx_icon" kindref="compound">wxIcon</ref><sp/>icon(</highlight><highlight class="stringliteral">&quot;sample&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
</programlisting></para>
<para><bold>wxPerl Note:</bold> In wxPerl use Wx::Icon-&gt;newFromXPM(data).  </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="136" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a9f39036a2f5881d9e0c093b724ae0543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxIcon::wxIcon</definition>
        <argsstring>(const wxString &amp;name, wxBitmapType type=wxICON_DEFAULT_TYPE, int desiredWidth=-1, int desiredHeight=-1)</argsstring>
        <name>wxIcon</name>
        <qualifiedname>wxIcon::wxIcon</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxICON_DEFAULT_TYPE</defval>
        </param>
        <param>
          <type>int</type>
          <declname>desiredWidth</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>desiredHeight</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Loads an icon from a file or resource. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>This can refer to a resource name or a filename under MS Windows and X. Its meaning is determined by the <emphasis>type</emphasis> parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>May be one of the <ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref> values and indicates which type of bitmap should be loaded. See the note in the class detailed description. Note that the wxICON_DEFAULT_TYPE constant has different value under different wxWidgets ports. See the <ref refid="icon_8h" kindref="compound">icon.h</ref> header for the value it takes for a specific port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desiredWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the desired width of the icon. This parameter only has an effect in Windows where icon resources can contain several icons of different sizes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desiredHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the desired height of the icon. This parameter only has an effect in Windows where icon resources can contain several icons of different sizes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_icon_1a753ecdd4f8d908f51fa0bbd848a613ee" kindref="member">LoadFile()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="161" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a42ebe9eef5b1bc44393af62430ca75b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxIcon::wxIcon</definition>
        <argsstring>(const wxIconLocation &amp;loc)</argsstring>
        <name>wxIcon</name>
        <qualifiedname>wxIcon::wxIcon</qualifiedname>
        <param>
          <type>const <ref refid="classwx_icon_location" kindref="compound">wxIconLocation</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
<para>Loads an icon from the specified location. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="167" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a4bc4f12033206cfcfdbd9ae4d4ef4e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxIcon::~wxIcon</definition>
        <argsstring>()</argsstring>
        <name>~wxIcon</name>
        <qualifiedname>wxIcon::~wxIcon</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="overview_refcount_1overview_refcount_destruct" kindref="member">Object Destruction</ref> for more info.</para>
<para>If the application omits to delete the icon explicitly, the icon will be destroyed automatically by wxWidgets when the application exits.</para>
<para><simplesect kind="warning"><para>Do not delete an icon that is selected into a memory device context. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="179" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1ad7d90d336899f254a05275b6c86d6b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxIcon::CreateFromHICON</definition>
        <argsstring>(WXHICON icon)</argsstring>
        <name>CreateFromHICON</name>
        <qualifiedname>wxIcon::CreateFromHICON</qualifiedname>
        <param>
          <type>WXHICON</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
<para>Attach a Windows icon handle. </para>
        </briefdescription>
        <detaileddescription>
<para>This wxMSW-specific method allows assigning a native Windows <computeroutput>HICON</computeroutput> (which must be cast to <computeroutput>WXHICON</computeroutput> opaque handle type) to <ref refid="classwx_icon" kindref="compound">wxIcon</ref>. Notice that this means that the <computeroutput>HICON</computeroutput> will be destroyed by <ref refid="classwx_icon" kindref="compound">wxIcon</ref> when it is destroyed.</para>
<para><simplesect kind="return"><para>true if successful.</para>
</simplesect>
Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref> port.  <onlyfor>wxmsw</onlyfor> </para>
<para><simplesect kind="since"><para>2.9.5 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="195" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a51c8e3a7067bdb6c45edc9360aa37aa5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_icon" kindref="compound">wxIcon</ref></type>
        <definition>wxIcon wxIcon::ConvertToDisabled</definition>
        <argsstring>(unsigned char brightness=255) const</argsstring>
        <name>ConvertToDisabled</name>
        <qualifiedname>wxIcon::ConvertToDisabled</qualifiedname>
        <param>
          <type>unsigned char</type>
          <declname>brightness</declname>
          <defval>255</defval>
        </param>
        <briefdescription>
<para>Returns disabled (dimmed) version of the icon. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is available in <ref refid="classwx_icon" kindref="compound">wxIcon</ref> only under wxMSW, other ports only have it in <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>. You can always use <ref refid="classwx_image_1a19508d871909594b28243dda6dbfed67" kindref="member">wxImage::ConvertToDisabled()</ref> and create the icon from <ref refid="classwx_image" kindref="compound">wxImage</ref> manually however.</para>
<para>Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref> port.  <onlyfor>wxmsw</onlyfor> </para>
<para><simplesect kind="since"><para>2.9.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="208" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1aea0254e1fcd09977999799b5744a016c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxIcon::CopyFromBitmap</definition>
        <argsstring>(const wxBitmap &amp;bmp)</argsstring>
        <name>CopyFromBitmap</name>
        <qualifiedname>wxIcon::CopyFromBitmap</qualifiedname>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmp</declname>
        </param>
        <briefdescription>
<para>Copies <emphasis>bmp</emphasis> bitmap to this icon. </para>
        </briefdescription>
        <detaileddescription>
<para>Under MS Windows the bitmap must have mask colour set.</para>
<para><simplesect kind="see"><para><ref refid="classwx_icon_1a753ecdd4f8d908f51fa0bbd848a613ee" kindref="member">LoadFile()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="216" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a5074750955267dbf807a9fa5ca6cbf67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxIcon::GetDepth</definition>
        <argsstring>() const</argsstring>
        <name>GetDepth</name>
        <qualifiedname>wxIcon::GetDepth</qualifiedname>
        <briefdescription>
<para>Gets the colour depth of the icon. </para>
        </briefdescription>
        <detaileddescription>
<para>A value of 1 indicates a monochrome icon. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="222" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a56832e71e9efb882d4cad7231d5f1ac7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxIcon::GetHeight</definition>
        <argsstring>() const</argsstring>
        <name>GetHeight</name>
        <qualifiedname>wxIcon::GetHeight</qualifiedname>
        <briefdescription>
<para>Gets the height of the icon in physical pixels. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_icon_1a84442d3fad645f79650ae53eca139a5f" kindref="member">GetWidth()</ref>, <ref refid="classwx_icon_1a44861d2d93bbd6d3014d76dae210b1f1" kindref="member">GetLogicalHeight()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="229" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a44861d2d93bbd6d3014d76dae210b1f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double wxIcon::GetLogicalHeight</definition>
        <argsstring>() const</argsstring>
        <name>GetLogicalHeight</name>
        <qualifiedname>wxIcon::GetLogicalHeight</qualifiedname>
        <briefdescription>
<para>Gets the height of the icon in logical pixels. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_bitmap_1a95b2ea14a76a39beae31a35b0829a620" kindref="member">wxBitmap::GetLogicalHeight()</ref>.</para>
<para><simplesect kind="since"><para>3.1.6 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="238" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a115b2786820abc73cf0f577a658777c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxIcon::GetLogicalSize</definition>
        <argsstring>() const</argsstring>
        <name>GetLogicalSize</name>
        <qualifiedname>wxIcon::GetLogicalSize</qualifiedname>
        <briefdescription>
<para>Gets the size of the icon in logical pixels. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_bitmap_1ab8db6da1c0bf12acc77975f4b7783e99" kindref="member">wxBitmap::GetLogicalSize()</ref>.</para>
<para><simplesect kind="since"><para>3.1.6 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="247" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1adacc07b842e992220eb7afdb7f5b790e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double wxIcon::GetLogicalWidth</definition>
        <argsstring>() const</argsstring>
        <name>GetLogicalWidth</name>
        <qualifiedname>wxIcon::GetLogicalWidth</qualifiedname>
        <briefdescription>
<para>Gets the width of the icon in logical pixels. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_bitmap_1a181afefc33f5c25e809a4b52225f0fae" kindref="member">wxBitmap::GetLogicalWidth()</ref>.</para>
<para><simplesect kind="since"><para>3.1.6 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="256" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a592d0df112570fc3f696883c8e210d7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double wxIcon::GetScaleFactor</definition>
        <argsstring>() const</argsstring>
        <name>GetScaleFactor</name>
        <qualifiedname>wxIcon::GetScaleFactor</qualifiedname>
        <briefdescription>
<para>Gets the scale factor of this icon. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_bitmap_1a51c6d2d3493d5c98a8582d729968d791" kindref="member">wxBitmap::GetScaleFactor()</ref>.</para>
<para><simplesect kind="since"><para>3.1.6 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="265" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a5f07d442a47f9d02ec26b9543ccaea83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxIcon::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <qualifiedname>wxIcon::GetSize</qualifiedname>
        <briefdescription>
<para>Gets the size of the icon in physical pixels. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_icon_1a115b2786820abc73cf0f577a658777c9" kindref="member">GetLogicalSize()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="272" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a84442d3fad645f79650ae53eca139a5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxIcon::GetWidth</definition>
        <argsstring>() const</argsstring>
        <name>GetWidth</name>
        <qualifiedname>wxIcon::GetWidth</qualifiedname>
        <briefdescription>
<para>Gets the width of the icon in physical pixels. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_icon_1a56832e71e9efb882d4cad7231d5f1ac7" kindref="member">GetHeight()</ref>, <ref refid="classwx_icon_1adacc07b842e992220eb7afdb7f5b790e" kindref="member">GetLogicalWidth()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="279" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a77cb179b5a1ab9985e9c0d540562f1a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxIcon::IsOk</definition>
        <argsstring>() const</argsstring>
        <name>IsOk</name>
        <qualifiedname>wxIcon::IsOk</qualifiedname>
        <briefdescription>
<para>Returns true if icon data is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="284" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a753ecdd4f8d908f51fa0bbd848a613ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxIcon::LoadFile</definition>
        <argsstring>(const wxString &amp;name, wxBitmapType type=wxICON_DEFAULT_TYPE, int desiredWidth=-1, int desiredHeight=-1)</argsstring>
        <name>LoadFile</name>
        <qualifiedname>wxIcon::LoadFile</qualifiedname>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref></type>
          <declname>type</declname>
          <defval>wxICON_DEFAULT_TYPE</defval>
        </param>
        <param>
          <type>int</type>
          <declname>desiredWidth</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>desiredHeight</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Loads an icon from a file or resource. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Either a filename or a Windows resource name. The meaning of name is determined by the <emphasis>type</emphasis> parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the <ref refid="gdicmn_8h_1a90a1eb6d85b5044a99b706fd979f27f5" kindref="member">wxBitmapType</ref> values; see the note in the class detailed description. Note that the wxICON_DEFAULT_TYPE constant has different value under different wxWidgets ports. See the <ref refid="icon_8h" kindref="compound">icon.h</ref> header for the value it takes for a specific port. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desiredWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the desired width of the icon. This parameter only has an effect in Windows where icon resources can contain several icons of different sizes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desiredHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the desired height of the icon. This parameter only has an effect in Windows where icon resources can contain several icons of different sizes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the operation succeeded, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="309" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1ae2099848c41aa2031fe70649c9279816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxIcon::SetDepth</definition>
        <argsstring>(int depth)</argsstring>
        <name>SetDepth</name>
        <qualifiedname>wxIcon::SetDepth</qualifiedname>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000032"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since version 3.1.2, dimensions and depth can only be set at construction time.</para>
</xrefdescription></xrefsect></para>
<para>Sets the depth member (does not affect the icon data).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>Icon depth. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="321" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a5c5d857cd6fda4ecc05ba4820d4aa2fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxIcon::SetHeight</definition>
        <argsstring>(int height)</argsstring>
        <name>SetHeight</name>
        <qualifiedname>wxIcon::SetHeight</qualifiedname>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000033"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since version 3.1.2, dimensions and depth can only be set at construction time.</para>
</xrefdescription></xrefsect></para>
<para>Sets the height member (does not affect the icon data).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Icon height in pixels. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="332" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1add437e80330ad01742421d2b1d66e2d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxIcon::SetWidth</definition>
        <argsstring>(int width)</argsstring>
        <name>SetWidth</name>
        <qualifiedname>wxIcon::SetWidth</qualifiedname>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000034"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since version 3.1.2, dimensions and depth can only be set at construction time.</para>
</xrefdescription></xrefsect></para>
<para>Sets the width member (does not affect the icon data).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Icon width in pixels. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="343" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classwx_icon_1a57b915241cd7d10d797add341b07aa45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
        <definition>wxIcon &amp; wxIcon::operator=</definition>
        <argsstring>(const wxIcon &amp;icon)</argsstring>
        <name>operator=</name>
        <qualifiedname>wxIcon::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
<para>Assignment operator, using <ref refid="overview_refcount" kindref="compound">Reference Counting</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>icon</parametername>
</parameternamelist>
<parameterdescription>
<para>Icon to assign. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/icon.h" line="351" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An icon is a small rectangular bitmap usually used for denoting a minimized application. </para>
    </briefdescription>
    <detaileddescription>
<para>It differs from a <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> in always having a mask associated with it for transparent drawing. On some platforms, icons and bitmaps are implemented identically, since there is no real distinction between a <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> with a mask and an icon; and there is no specific icon format on some platforms (X-based applications usually standardize on XPMs for small bitmaps and icons). However, some platforms (such as Windows) make the distinction, so a separate class is provided.</para>
<para><simplesect kind="remark"><para>It is usually desirable to associate a pertinent icon with a frame. Icons can also be used for other purposes, for example with <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> and <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref>. Icons have different formats on different platforms therefore separate icons will usually be created for the different environments. Platform-specific methods for creating a <ref refid="classwx_icon" kindref="compound">wxIcon</ref> structure are catered for, and this is an occasion where conditional compilation will probably be required. Note that a new icon must be created for every time the icon is to be used for a new window. In Windows, the icon will not be reloaded if it has already been used. An icon allocated to a frame will be deleted when the frame is deleted. For more information please see <ref refid="overview_bitmap" kindref="compound">Bitmaps and Icons</ref>.</para>
</simplesect>
<heading level="2"></heading>
</para>
<para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref></para>
<para>Category:<nonbreakablespace/><nonbreakablespace/><ref refid="group__group__class__gdi" kindref="compound">Graphics Device Interface (GDI)</ref></para>
<para>Predefined objects/pointers: <ref refid="icon_8h_1a953854798a8dfd400777318358dad5b6" kindref="member">wxNullIcon</ref></para>
<para><simplesect kind="see"><para><ref refid="overview_bitmap" kindref="compound">Bitmaps and Icons</ref>, <ref refid="overview_bitmap_1overview_bitmap_supportedformats" kindref="member">Supported Bitmap File Formats</ref>, <ref refid="classwx_icon_bundle" kindref="compound">wxIconBundle</ref>, <ref refid="classwx_d_c_1a890d011a03308a28039d4940dd04264e" kindref="member">wxDC::DrawIcon</ref>, <ref refid="classwx_cursor" kindref="compound">wxCursor</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>wxGDIObject</label>
        <link refid="classwx_g_d_i_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxIcon</label>
        <link refid="classwx_icon"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>wxGDIObject</label>
        <link refid="classwx_g_d_i_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>wxIcon</label>
        <link refid="classwx_icon"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/icon.h" line="52" column="1" bodyfile="interface/wx/icon.h" bodystart="53" bodyend="352"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxIcon</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1ac9c60b64c3757a5818b1123b197cd50d" prot="protected" virt="virtual"><scope>wxIcon</scope><name>CloneRefData</name></member>
      <member refid="classwx_icon_1a51c8e3a7067bdb6c45edc9360aa37aa5" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>ConvertToDisabled</name></member>
      <member refid="classwx_icon_1aea0254e1fcd09977999799b5744a016c" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>CopyFromBitmap</name></member>
      <member refid="classwx_icon_1ad7d90d336899f254a05275b6c86d6b13" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>CreateFromHICON</name></member>
      <member refid="classwx_object_1a9c38fc7f7d0dd40d5d83f3eedf1fb817" prot="protected" virt="virtual"><scope>wxIcon</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1a9fd1bc8bc3a47c6e14e679a80e3cb8f4" prot="public" virt="virtual"><scope>wxIcon</scope><name>GetClassInfo</name></member>
      <member refid="classwx_icon_1a5074750955267dbf807a9fa5ca6cbf67" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>GetDepth</name></member>
      <member refid="classwx_icon_1a56832e71e9efb882d4cad7231d5f1ac7" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>GetHeight</name></member>
      <member refid="classwx_icon_1a44861d2d93bbd6d3014d76dae210b1f1" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>GetLogicalHeight</name></member>
      <member refid="classwx_icon_1a115b2786820abc73cf0f577a658777c9" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>GetLogicalSize</name></member>
      <member refid="classwx_icon_1adacc07b842e992220eb7afdb7f5b790e" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>GetLogicalWidth</name></member>
      <member refid="classwx_object_1a0e06d77b52ee4c44a31c7cb62c9a4b68" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>GetRefData</name></member>
      <member refid="classwx_icon_1a592d0df112570fc3f696883c8e210d7b" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>GetScaleFactor</name></member>
      <member refid="classwx_icon_1a5f07d442a47f9d02ec26b9543ccaea83" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>GetSize</name></member>
      <member refid="classwx_icon_1a84442d3fad645f79650ae53eca139a5f" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>GetWidth</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>IsKindOf</name></member>
      <member refid="classwx_icon_1a77cb179b5a1ab9985e9c0d540562f1a9" prot="public" virt="virtual"><scope>wxIcon</scope><name>IsOk</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>IsSameAs</name></member>
      <member refid="classwx_icon_1a753ecdd4f8d908f51fa0bbd848a613ee" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>LoadFile</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxIcon</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a48f4a0e3f8d737ca8d6cd04c1bbf08f0" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>operator new</name></member>
      <member refid="classwx_icon_1a57b915241cd7d10d797add341b07aa45" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>operator=</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>Ref</name></member>
      <member refid="classwx_icon_1ae2099848c41aa2031fe70649c9279816" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>SetDepth</name></member>
      <member refid="classwx_icon_1a5c5d857cd6fda4ecc05ba4820d4aa2fe" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>SetHeight</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>SetRefData</name></member>
      <member refid="classwx_icon_1add437e80330ad01742421d2b1d66e2d5" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>SetWidth</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>UnShare</name></member>
      <member refid="classwx_g_d_i_object_1a20ac442e0d24cf6250d7bd45f0d968d5" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>wxGDIObject</name></member>
      <member refid="classwx_icon_1a1b832f41fcde273eaa4384d2e567aa90" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>wxIcon</name></member>
      <member refid="classwx_icon_1a0379f12c09a41e1e18a25f845d1cdafc" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>wxIcon</name></member>
      <member refid="classwx_icon_1a135a7d23bec91957885c5d29b97cccff" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>wxIcon</name></member>
      <member refid="classwx_icon_1a8923d0c1f69ca83671e57bb439228fe2" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>wxIcon</name></member>
      <member refid="classwx_icon_1a9f39036a2f5881d9e0c093b724ae0543" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>wxIcon</name></member>
      <member refid="classwx_icon_1a42ebe9eef5b1bc44393af62430ca75b6" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>wxIcon</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxIcon</scope><name>wxObject</name></member>
      <member refid="classwx_icon_1a4bc4f12033206cfcfdbd9ae4d4ef4e73" prot="public" virt="virtual"><scope>wxIcon</scope><name>~wxIcon</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxIcon</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
